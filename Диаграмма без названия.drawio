<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 SberBrowser/28.0.0.0" version="27.2.0">
  <diagram name="Страница — 1" id="WULPb32uHRo-QUS4CWuH">
    <mxGraphModel dx="1372" dy="743" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="3300" pageHeight="4681" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="SYt-TXJ_Hw24SwqiqHZK-9" value="from pydantic import BaseModel, Field&#xa;&#xa;&#xa;&#xa;&#xa;class HealthResponse(BaseModel):&#xa;    &quot;&quot;&quot;Ответ для ручки /health&quot;&quot;&quot;&#xa;&#xa;&#xa;    status: str = Field(default=&quot;running&quot;, description=&quot;Service health check&quot;, max_length=7)&#xa;&#xa;&#xa;    class Config:&#xa;        json_schema_extra = {&quot;example&quot;: {&quot;status&quot;: &quot;running&quot;}}&#xa;&#xa;&#xa;&#xa;&#xa;class InfoResponse(BaseModel):&#xa;    &quot;&quot;&quot;Ответ для ручки /info&quot;&quot;&quot;&#xa;&#xa;&#xa;    name: str = Field(description=&quot;Service name&quot;, max_length=50)&#xa;    description: str = Field(description=&quot;Service description&quot;, max_length=200)&#xa;    type: str = Field(default=&quot;REST API&quot;, description=&quot;Service type&quot;, max_length=20)&#xa;    version: str = Field(description=&quot;Service version&quot;, max_length=20, pattern=r&quot;^\d+.\d+.\d+&quot;)&#xa;&#xa;&#xa;    class Config:&#xa;        json_schema_extra = {&#xa;            &quot;example&quot;: {&#xa;                &quot;name&quot;: &quot;rest-template&quot;,&#xa;                &quot;description&quot;: &#39;Python &quot;Ai gateway&quot; template for developing REST microservices&#39;,&#xa;                &quot;type&quot;: &quot;REST API&quot;,&#xa;                &quot;version&quot;: &quot;0.1.0&quot;,&#xa;            }&#xa;        }&#xa;&#xa;&#xa;&#xa;&#xa;class RateResponse(BaseModel):&#xa;    rating_result: str = Field(description=&quot;Rating that was recorded&quot;, max_length=50)" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="40" y="40" width="520" height="640" as="geometry" />
        </mxCell>
        <UserObject label="&quot;&quot;&quot;&#xa;!!!!!! НЕ РЕДАКТИРОВАТЬ !!!!!!&#xa;&quot;&quot;&quot;&#xa;&#xa;&#xa;from importlib.metadata import distribution&#xa;&#xa;&#xa;from fastapi import APIRouter, status&#xa;&#xa;&#xa;from . import schemas&#xa;&#xa;&#xa;router = APIRouter()&#xa;&#xa;&#xa;&#xa;&#xa;@router.get(&#xa;    &quot;/health&quot;,&#xa;    status_code=status.HTTP_200_OK,&#xa;    response_model=schemas.HealthResponse,&#xa;)&#xa;async def health():&#xa;    return {&#xa;        &quot;health_status&quot;: &quot;running&quot;,&#xa;    }&#xa;&#xa;&#xa;&#xa;&#xa;@router.get(&#xa;    &quot;/info&quot;,&#xa;    status_code=status.HTTP_200_OK,&#xa;    response_model=schemas.InfoResponse,&#xa;)&#xa;async def info():&#xa;    dist = distribution(&quot;aigw-rest-service&quot;)&#xa;&#xa;&#xa;    return schemas.InfoResponse(&#xa;        name=str(dist.metadata[&quot;Name&quot;]),&#xa;        description=str(dist.metadata[&quot;Summary&quot;]),&#xa;        type=&quot;REST API&quot;,&#xa;        version=str(dist.version),&#xa;    )" link="&quot;&quot;&quot;&#xa;!!!!!! НЕ РЕДАКТИРОВАТЬ !!!!!!&#xa;&quot;&quot;&quot;&#xa;&#xa;&#xa;from importlib.metadata import distribution&#xa;&#xa;&#xa;from fastapi import APIRouter, status&#xa;&#xa;&#xa;from . import schemas&#xa;&#xa;&#xa;router = APIRouter()&#xa;&#xa;&#xa;&#xa;&#xa;@router.get(&#xa;    &quot;/health&quot;,&#xa;    status_code=status.HTTP_200_OK,&#xa;    response_model=schemas.HealthResponse,&#xa;)&#xa;async def health():&#xa;    return {&#xa;        &quot;health_status&quot;: &quot;running&quot;,&#xa;    }&#xa;&#xa;&#xa;&#xa;&#xa;@router.get(&#xa;    &quot;/info&quot;,&#xa;    status_code=status.HTTP_200_OK,&#xa;    response_model=schemas.InfoResponse,&#xa;)&#xa;async def info():&#xa;    dist = distribution(&quot;aigw-rest-service&quot;)&#xa;&#xa;&#xa;    return schemas.InfoResponse(&#xa;        name=str(dist.metadata[&quot;Name&quot;]),&#xa;        description=str(dist.metadata[&quot;Summary&quot;]),&#xa;        type=&quot;REST API&quot;,&#xa;        version=str(dist.version),&#xa;    )" id="SYt-TXJ_Hw24SwqiqHZK-10">
          <mxCell style="text;whiteSpace=wrap;" vertex="1" parent="1">
            <mxGeometry x="650" y="70" width="290" height="700" as="geometry" />
          </mxCell>
        </UserObject>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
