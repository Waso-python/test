<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36 SberBrowser/26.0.0.0" version="27.1.1">
  <diagram name="Страница — 1" id="WULPb32uHRo-QUS4CWuH">
    <mxGraphModel dx="1372" dy="743" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <UserObject label="{&#xa;  &quot;updated_at&quot;: &quot;2025-06-02T15:52:15+00:00&quot;,&#xa;  &quot;icon_bg_color&quot;: null,&#xa;  &quot;webhook&quot;: false,&#xa;  &quot;description&quot;: &quot;Language Models, Unleashed.&quot;,&#xa;  &quot;user_id&quot;: &quot;f7bcd42d-c8bd-4a63-92b1-7eec0a70bdcc&quot;,&#xa;  &quot;endpoint_name&quot;: null,&#xa;  &quot;icon&quot;: null,&#xa;  &quot;name&quot;: &quot;Поиск&quot;,&#xa;  &quot;id&quot;: &quot;f81b701a-d2b0-4fe6-9cc0-0aaef2249739&quot;,&#xa;  &quot;tags&quot;: null,&#xa;  &quot;folder_id&quot;: &quot;30df36e3-5d3d-4d9f-a436-d15a40d32a2f&quot;,&#xa;  &quot;gradient&quot;: null,&#xa;  &quot;data&quot;: {&#xa;    &quot;nodes&quot;: [&#xa;      {&#xa;        &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -2378.0911017405006,&#xa;          &quot;y&quot;: 562.665965116462&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;files&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [&#xa;                  &quot;txt&quot;,&#xa;                  &quot;md&quot;,&#xa;                  &quot;mdx&quot;,&#xa;                  &quot;csv&quot;,&#xa;                  &quot;json&quot;,&#xa;                  &quot;yaml&quot;,&#xa;                  &quot;yml&quot;,&#xa;                  &quot;xml&quot;,&#xa;                  &quot;html&quot;,&#xa;                  &quot;htm&quot;,&#xa;                  &quot;pdf&quot;,&#xa;                  &quot;docx&quot;,&#xa;                  &quot;py&quot;,&#xa;                  &quot;sh&quot;,&#xa;                  &quot;sql&quot;,&#xa;                  &quot;js&quot;,&#xa;                  &quot;ts&quot;,&#xa;                  &quot;tsx&quot;,&#xa;                  &quot;jpg&quot;,&#xa;                  &quot;jpeg&quot;,&#xa;                  &quot;png&quot;,&#xa;                  &quot;bmp&quot;,&#xa;                  &quot;image&quot;&#xa;                ],&#xa;                &quot;list&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;files&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Files&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Files to be sent with the message.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;file&quot;,&#xa;                &quot;_input_type&quot;: &quot;FileInput&quot;&#xa;              },&#xa;              &quot;background_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;background_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Background Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The background color of the icon.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;chat_icon&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;chat_icon&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Icon&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The icon of the message.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.data.utils import IMG_FILE_TYPES, TEXT_FILE_TYPES\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.inputs import BoolInput\nfrom langflow.io import DropdownInput, FileInput, MessageTextInput, MultilineInput, Output\nfrom langflow.schema.message import Message\nfrom langflow.utils.constants import MESSAGE_SENDER_AI, MESSAGE_SENDER_NAME_USER, MESSAGE_SENDER_USER\n\n\nclass ChatInput(ChatComponent):\n    display_name = \&quot;Chat Input\&quot;\n    description = \&quot;Get chat inputs from the Playground.\&quot;\n    icon = \&quot;MessagesSquare\&quot;\n    name = \&quot;ChatInput\&quot;\n\n    inputs = [\n        MultilineInput(\n            name=\&quot;input_value\&quot;,\n            display_name=\&quot;Text\&quot;,\n            value=\&quot;\&quot;,\n            info=\&quot;Message to be passed as input.\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;should_store_message\&quot;,\n            display_name=\&quot;Store Messages\&quot;,\n            info=\&quot;Store the message in the history.\&quot;,\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\&quot;sender\&quot;,\n            display_name=\&quot;Sender Type\&quot;,\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_USER,\n            info=\&quot;Type of sender.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;sender_name\&quot;,\n            display_name=\&quot;Sender Name\&quot;,\n            info=\&quot;Name of the sender.\&quot;,\n            value=MESSAGE_SENDER_NAME_USER,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;session_id\&quot;,\n            display_name=\&quot;Session ID\&quot;,\n            info=\&quot;The session ID of the chat. If empty, the current session ID parameter will be used.\&quot;,\n            advanced=True,\n        ),\n        FileInput(\n            name=\&quot;files\&quot;,\n            display_name=\&quot;Files\&quot;,\n            file_types=TEXT_FILE_TYPES + IMG_FILE_TYPES,\n            info=\&quot;Files to be sent with the message.\&quot;,\n            advanced=True,\n            is_list=True,\n        ),\n        MessageTextInput(\n            name=\&quot;background_color\&quot;,\n            display_name=\&quot;Background Color\&quot;,\n            info=\&quot;The background color of the icon.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;chat_icon\&quot;,\n            display_name=\&quot;Icon\&quot;,\n            info=\&quot;The icon of the message.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;text_color\&quot;,\n            display_name=\&quot;Text Color\&quot;,\n            info=\&quot;The text color of the name\&quot;,\n            advanced=True,\n        ),\n    ]\n    outputs = [\n        Output(display_name=\&quot;Message\&quot;, name=\&quot;message\&quot;, method=\&quot;message_response\&quot;),\n    ]\n\n    def message_response(self) -&gt; Message:\n        _background_color = self.background_color\n        _text_color = self.text_color\n        _icon = self.chat_icon\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n            files=self.files,\n            properties={\&quot;background_color\&quot;: _background_color, \&quot;text_color\&quot;: _text_color, \&quot;icon\&quot;: _icon},\n        )\n        if self.session_id and isinstance(message, Message) and self.should_store_message:\n            stored_message = self.send_message(\n                message,\n            )\n            self.message.value = stored_message\n            message = stored_message\n\n        self.status = message\n        return message\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;работа с картотекой&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Message to be passed as input.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MultilineInput&quot;&#xa;              },&#xa;              &quot;sender&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;Machine&quot;,&#xa;                  &quot;User&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender&quot;,&#xa;                &quot;value&quot;: &quot;User&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Type&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Type of sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;sender_name&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender_name&quot;,&#xa;                &quot;value&quot;: &quot;User&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Name&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Name of the sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;session_id&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;session_id&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Session ID&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The session ID of the chat. If empty, the current session ID parameter will be used.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;should_store_message&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;should_store_message&quot;,&#xa;                &quot;value&quot;: true,&#xa;                &quot;display_name&quot;: &quot;Store Messages&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Store the message in the history.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;text_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;text_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Text Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The text color of the name&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Get chat inputs from the Playground.&quot;,&#xa;            &quot;icon&quot;: &quot;MessagesSquare&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;Chat Input&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: &quot;message_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;should_store_message&quot;,&#xa;              &quot;sender&quot;,&#xa;              &quot;sender_name&quot;,&#xa;              &quot;session_id&quot;,&#xa;              &quot;files&quot;,&#xa;              &quot;background_color&quot;,&#xa;              &quot;chat_icon&quot;,&#xa;              &quot;text_color&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;ChatInput&quot;,&#xa;          &quot;id&quot;: &quot;ChatInput-sPJDh&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 233,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -2378.0911017405006,&#xa;          &quot;y&quot;: 562.665965116462&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 340.61941891755305,&#xa;          &quot;y&quot;: 417.04965303089415&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС КЮЛ (Кредиты юридических лиц)\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные понятия и термины, применяемые в работе в АС КЮЛ:\n\nКатегория качества (КК), Подразделение сопровождения кредитной операции (ПСКО), Платформы поддержки развития бизнеса (ППРБ), Международные стандарты финансовой отчетности (МСФО), Единый договор о предоставлении банковской гарантии (ЕДБГ), Договор о предоставлении банковской гарантии (ДБГ), Уполномоченный коллегиальный орган (КО), Автоматизированная система (АС), АС кредитная фабрика юридических лиц (КФЮЛ), Ас единая корпоративная система (ЕКС), Расчетно-кассовое обслуживание (РКО), Подразделение администрирования кредитов (ПАК), Подразделение подготовки кредитной документации (ПКД), Общая задолженность клиента по всем банкам (Bc_cap), электронное кредитное досье (ЭКД), ас оценка кредитного риска (АС ОКР), электронная выдача (ЭВ), внутренний нормативный документ (ВНД), юридическое лицо (ЮЛ), уникальный идентификатор теста (УИТ), электронная подпись (ЭП), кредитно-обеспечительная документация (КОД), рамочная кредитная линия (РКЛ), невозобновляемая кредитная линия (НКЛ), возобновляемая кредитная линия (ВКЛ), кредитная документация (КД), возобновляемая кредитная линия с дифференцированными станками (ВКЛДС), свободны остаток лимита (СОЛ), платежное поручение (ПТ), погашение обязательств по кредитному продукту (КА), РЦ Банк России (РЦ), крупный и средний бизнес (КСБ), мастер система (МС), рамочная кредитная линия (Рамка)\n\nОсновные категории проблем в АС КЮЛ с указанием структуры навыка и комментариями:\n\nСтруктура сокращена для удобства, например \n\n\&quot;1.6.1\tСумма договора в КЮЛ превышает сумму продукта в КФЮЛ\tKUL.CREAT.BROAD.01\&quot; равно \&quot;КЮЛ.Создание и подписание продукта.Ошибка при передаче договора ПСКО.Сумма договора в КЮЛ превышает сумму продукта в КФЮЛ\&quot;\n\n#######\n1\tСоздание и подписание продукта\tKUL.CREAT..00\n\n1.1\tОтнесение ссуды и категории качества (вкладка «История КК»)\tKUL.CREAT.QUAL.00\n\n1.1.1\tДобавить или изменить категорию качества\tKUL.CREAT.QUAL.01\n\n1.1.2\tУстановить особый порядок резервирования\tKUL.CREAT.QUAL.02\n\n1.1.3\tАктуальная категория качества KUL.CREAT.QUAL.03\n\n1.2\tДобавление или изменение данных по МСФО KUL.CREAT..01\n\n1.3\tИзменение метрик клиента (рейтинг клиента или резерва, финансовое положение) KUL.CREAT..02\n\n1.4\tИзменение клиента на неработающем продукте\tKUL.CREAT..03\n\n1.5\tКорректировка регламента и режима кредитования\tKUL.CREAT..04\n\n1.6\tОшибка при передаче договора ПСКО\tKUL.CREAT.BROAD.00\n\n1.6.1\tСумма договора в КЮЛ превышает сумму продукта в КФЮЛ\tKUL.CREAT.BROAD.01\n\n1.6.2\tКорневой идентификатор продукта не является уникальным в скоупе договоров ППРБ\tKUL.CREAT.BROAD.02\n\n1.7\tСоглашение на безакцептное списание\n\n\tKUL.CREAT..05\n\n1.7.1\tОшибки при подписании сделки \tKUL.CREAT.SIGN.00\n\n1.7.2\tАннулирован\tKUL.CREAT.SIGN.01\n\n1.7.3\tИсполнен с замечаниями \tKUL.CREAT.SIGN.02\n\n2\tВыдача кредитных средств\tKUL.ISS...00\n\n2.1\tТребуется подтверждение сервиса сотрудником ПСКО\tKUL.ISS...01\n\n2.2\tСервис выдачи аннулирован\tKUL.ISS...02\n\n2.3\tВопросы по электронной выдаче\tKUL.ISS.ELEC..00\n\n2.3.1\tНекорректная максимальная совокупная ссудная задолженность (BC_CAP)\tKUL.ISS.ELEC.BC.00\n\n2.3.1.1\tНе обновлены данные в Сбербанке (BC_Cap)\tKUL.ISS.ELEC.BC.01\n\n2.3.1.2\tНе обновлены данные из других банков (BC_Cap)\tKUL.ISS.ELEC.BC.02\n\n2.3.1.3\tОшибка «При обновлении договоров из ЕКС возникла ошибка. Невозможно сформировать вывод»\tKUL.ISS.ELEC.BC.03\n\n2.3.2\tОшибки при обработке результатов проверки\tKUL.ISS.ELEC.ERR.00\n\n2.3.2.1\tПо траншу не установлена процентная ставка\tKUL.ISS.ELEC.ERR.01\n\n2.3.2.2\tЕсть картотека или стоп-лист\tKUL.ISS.ELEC.ERR.02\n\n2.3.3\tДенежные средства остались на кредитном реестре\tKUL.ISS.ELEC.REG.00\n\n2.3.3.1\tПосле выдачи денежные средства остались на кредитном реестре\tKUL.ISS.ELEC.REG.01\n\n2.3.3.2\tПлатежи за счет кредитных денежных средств «зависли» и не обрабатываются на кредитном реестре\tKUL.ISS.ELEC.REG.02\n\n2.3.4\tНе проводятся платежи\tKUL.ISS.ELEC.PAY.00\n\n2.3.4.1\tСформировалась задача «Результат проведения маркированных платежей»\tKUL.ISS.ELEC.PAY.01\n\n2.3.4.2\tНе проводятся платежи после проведения электронной выдачи и зачислении денежных средств на кредитный реестр\tKUL.ISS.ELEC.PAY.03\n\n2.3.5\tОшибки при проведении операций из-за некорректного доступного остатка по счету\tKUL.ISS.ELEC..01\n\n2.3.6\tЗависание при работе с ЭКД\tKUL.ISS.ELEC..02\n\n2.3.7\tПроведение клиентом выдачи денежных средств после 19:30 часов\tKUL.ISS.ELEC..03\n\n2.4\tРабота с договором\tKUL.CONT..00\n\n2.4.1\tДобавление или изменение доп. свойства, идентификатора продукта в КФЮЛ, примечания по договору\tKUL.CONT.PROD.00\n\n2.4.1.1\tДобавление или изменение доп. свойства, ID продукта в КФЮЛ, примечания по договору\tKUL.CONT.PROD.01\n\n2.4.1.2\tДобавление или изменение доп. свойства по программам субсидирования\tKUL.CONT.PROD.02\n\n2.4.2\tДополнительное соглашение или корректировка\tKUL.CONT.AGR.00\n\n2.4.2.1\tВыполнение сервиса без подтверждения другим сотрудником\tKUL.CONT.AGR.01\n\n2.4.2.2\tДобавление или корректировка программы субсидирования\tKUL.CONT.AGR.02\n\n2.4.2.3\tДобавление данных по МСФО или модификации \tKUL.CONT.AGR.03\n\n2.4.3\tКорректировка категории качества, качества обслуживания долга, изменение метрик клиента\tKUL.CONT.ADJ.00\n\n2.4.3.1\tКорректировка категории качества, качества обслуживания долга\tKUL.CONT.ADJ.01\n\n2.4.3.2\tИзменение метрик клиента\n\n\tKUL.CONT.ADJ.02\n\n2.4.4\tРабота с КОД. Проблемы с подписанием ЭП\tKUL.CONT.SIGN.00\n\n2.4.4.1\tУдалить документ\tKUL.CONT.SIGN.01\n\n2.4.4.2\tОшибка: «Сервис для работы с ЭЦП недоступен»\tKUL.CONT.SIGN.02\n\n2.4.4.3\tНа загруженном документе нет подписи или подписание завершено ошибкой\n\n\tKUL.CONT.SIGN.03\n\n2.4.4.4\tРабота с соглашением на безакцептное списание \tKUL.CONT..01\n\n2.4.5\tРабота с договором страхования\tKUL.CONT.INS.00\n\n2.4.5.1\tСмена статуса «Закрыт» для договора страхования\tKUL.CONT.INS.01\n\n2.4.5.2\tПропала связь между договором страхования и договором обеспечения\tKUL.CONT.INS.02\n\n\t\t\n\n2.4.6\tСвязи с кредитной сделкой, договорами обеспечения \tKUL.CONT.COM.00\n\n2.4.6.1\tДобавление или удаление связи с кредитной сделкой\tKUL.CONT.COM.01\n\n2.4.6.2\tДобавить связь между кредитным договором и договором обеспечения\tKUL.CONT.COM.02\n\n2.4.6.3\tУдалить связь между кредитным договором и договором обеспечения\tKUL.CONT.COM.03\n\n2.4.6.4\tУдаление договора\tKUL.CONT..02\n\n2.5\tРасчет лимита овердрафта или средневзвешенной ставки\tKUL.CALC..00\n\n2.5.1\tРасчет лимита овердрафта\tKUL.CALC.OVER.00\n\n2.5.1.1\tОшибка «Нет актуального расчета»\tKUL.CALC.OVER.01\n\n2.5.1.2\tНе выгружаются документы и проводки по расчету в файл Excel\tKUL.CALC.OVER.02\n\n2.5.1.3\tИзменить привязку расчета к овердрафту\tKUL.CALC.OVER.03\n\n2.5.1.4\tНе активны поля «Максимальная доля контрагента» и «Максимальный размер доли от кредитового оборота»\tKUL.CALC.OVER.04\n\n2.5.1.5\tСтатус расчета «Ожидает подтверждения»\tKUL.CALC.OVER.05\n\n2.5.1.6\tОтсутствует рейтинг для клиента\tKUL.CALC.OVER.06\n\n2.5.1.7\tИсполнение сервиса должно быть продолжено пользователем с другой ролью\tKUL.CALC.OVER.07\n\n2.5.2\tРасчет средневзвешенной ставки\tKUL.CALC..01\n\n2.6\tФинансовые сервисы\tKUL.FIN..00\n\n2.6.1\tУрегулировать СОЛ\tKUL.FIN..01\n\n2.6.2\tУрегулировать лимит\tKUL.FIN..02\n\n2.6.3\tВыполнить учет процентов, комиссий, субсидий\tKUL.FIN..03\n\n2.6.4\tИзменить размер процентной ставки\tKUL.FIN..04\n\n2.6.5\tЗакрыть договор\tKUL.FIN..05\n\n2.6.6\tВыполнить вынос на просрочку\tKUL.FIN..06\n\n2.6.7\tВыполнить раскрытие банковской гарантии\tKUL.FIN..07\n\n2.6.8\tПри выставлении платежного требования (ПТ) не отображаются несквитованные плановые операции в архивной дате\tKUL.FIN..08\n\n2.6.9\tРаспределить документ\tKUL.FIN.DIST.00\n\n2.6.9.1\tНайти платежи для распределения в погашение задолженности\tKUL.FIN.DIST.01\n\n2.6.9.2\tПоставить платежный документ на возврат\tKUL.FIN.DIST.02\n\n2.6.9.3\tПровести погашение на счет без привязки к продукту (распределение на транзитный счет)\tKUL.FIN.DIST.03\n\n2.6.9.4\tВыполнить досрочное распределение платежа с  плановой датой больше 10 дней в будущем\tKUL.FIN.DIST.04\n\n2.6.9.5\tВыполнить отправку документа из источника «РЦ Банк России» на обработку в ЕКС\tKUL.FIN.DIST.05\n\n2.6.9.6\tВыполнить отправку документа из источника «РКО Списание» на обработку в ЕКС\tKUL.FIN.DIST.06\n\n2.6.9.7\tВыполнить аннулирование погашения на договоре\tKUL.FIN.DIST.07\n\n2.6.9.8\tОплата документов из картотеки, если договор не нормализован\tKUL.FIN.DIST.08\n\n2.7\tОтчеты. Формирование уведомлений\tKUL.REPO.00\n\n2.7.1\tСформировать уведомление клиенту\tKUL.REPO.01\n\n2.7.2\tКлиент не видит уведомление о предстоящих платежах в СББОЛ\tKUL.REPO.02\n\n2.7.3\tКлиент не может просмотреть уведомление по кредиту в ССБОЛ\tKUL.REPO.03\n\n2.7.4\tСформировать отчет \tKUL.REPO.04\n\n2.7.5\tОтсутствует роль для выгрузки отчетов - КЮЛ. Роль для выгрузки данных категории К1/К2\tKUL.REPO.05\n\n2.7.6\tПри формировании отчета в списке доступных шаблонов при формировании отчета отсутствует необходимый отчет\tKUL.REPO.06\n\n2.7.7\tПостроить предстоящие плановые операции в разрезе ТБ/даты/клиента\tKUL.REPO.07\n\n2.8\tФоновые процессы бэк-офиса\tKUL.BACK.00\n\n2.8.1\tГрупповой учет процентов, комиссий и субсидий\tKUL.BACK.01\n\n2.8.2\tЗакрытие сделки\tKUL.BACK.02\n\n2.8.3\tДоустановка ставки без служебной записки\tKUL.BACK.03\n\n2.8.4\tУрегулирование СОЛ\tKUL.BACK.04\n\n2.9\tОбщие вопросы по работе в АС\tKUL.OTH.00\n\n2.9.1\tАннулировать сервис\tKUL.OTH.01\n\n2.9.2\tДоговор не нормализован\tKUL.OTH.02\n\n2.9.3\tОстатки по задолженностям\tKUL.OTH.03\n\n2.9.4\tПередать мастер-систему из АС КЮЛ в АС ЕКС\tKUL.OTH.04\n\n2.9.5\tПосмотреть тип ставки на договоре\tKUL.OTH.05\n\n2.9.6\tСохранить фильтр\tKUL.OTH.06\n\n\n######\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nРодительская категория отличается от вопроса наличием 00 на конце кода, например:\n\n\&quot;Посмотреть тип ставки на договоре [KUL.OTH.05]\&quot; - родительская категория [KUL.OTH.00]\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;Проблема с уведомлениями в отчетах\&quot;\n\nОтвет: \&quot;[KUL.REPO.00]\&quot;\n\nТВОЙ ОТВЕТ ДОЛЖЕН БЫТЬ КОДОМ РЕШЕНИЯ\nна вопросы не относящиеся к АС КЮЛ, верни только строку \&quot;error\&quot; \nне выдумывай код решения, верни только тот который есть в списке выше!\n\nиспользуй историю диалога:\n{context}\nответь на вопрос\n{question}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;question&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;question&quot;,&#xa;                &quot;display_name&quot;: &quot;question&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;,&#xa;                &quot;question&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-CRUzX&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 431,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 340.61941891755305,&#xa;          &quot;y&quot;: 417.04965303089415&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 751.8984507374021,&#xa;          &quot;y&quot;: 254.0961677000643&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;dragging&quot;: false,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 751.8984507374021,&#xa;          &quot;y&quot;: 254.0961677000643&#xa;        }&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 765.0201629087758,&#xa;          &quot;y&quot;: 969.7007414877796&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0.1,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 765.0201629087758,&#xa;          &quot;y&quot;: 969.7007414877796&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 358.6582361327437,&#xa;          &quot;y&quot;: 1103.1515965557085&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС Пегас (Простые сделки плюс)\n2. АС ФДК (финасовые документы клиента)\n3. АС ФОК (финансовая отчетность клиента)\n4. АС УФА (углублённый финансовый анализ)\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные понятия и термины, применяемые в работе в АС Пегас, ФДК, ФОК, ФА:\n\nАндеррайтер (ар), УПР и ФПР (уровень и формат принятия решения), оборонно промышленный комплекс (ОПК), работа со сделками, переназначение сделок, расчет УПР, работа с лимитами, проблемы с переходами по вкладкам, АС Сенат, работа с продуктами в сделках, оформление сделок с участием министерства сельского хозяйства (МСХ), работа с LGD, ДРГС, СКМ(ОПК), ОФР, Ошибка «Кейс залочен», сделка с категорией «Вторая линия защиты», Проблема с отправкой в службы и подразделения , Ошибка при отправке сделки и т.д.\n\nСтруктура сокращена для удобства, например \n\n\&quot;1.3 на другой территориальный банк [PS+.REA.03]\&quot; равно \&quot;Пегас.Проблема с переназначением сделки.на другой территориальный банк\&quot;\n\n#######\n\n1\tКоманда сделки (переназначение)\t[PS+.REA.00]\n1.1\tВ своем подразделении\t[PS+.REA.01]\n1.2\tНа центральный аппарат\t[PS+.REA.02]\n1.3\tНа другой территориальный банк \t[PS+.REA.03]\n1.4\tНа сотрудника ДРГС, СКМ(ОПК), ОФР \t[PS+.REA.04]\n2\tУПР и ФПР, LGD, Fraud-риск, ESG, ФП УФА\t[PS+.CALC....00]\n2.1\tНеактивны кнопки, задачи открываются в новом окне или ошибка: «Error There has been an issue»\t[PS+.CALC....01]\n2.2\tГде найти код подразделения в CRM для оформления доступа в АС Argus?\t[PS+.CALC....02]\n2.3\tУПР и ФПР\t[PS+.CALC.UPR...00]\n2.3.1\tОшибка при расчете или внесении вручную УПР и ФПР\t[PS+.CALC.UPR.ERR..00]\n2.3.1.1\tНе удается определить основной рейтинг заемщика\t[PS+.CALC.UPR.ERR..01]\n2.3.1.2\tНе найден совокупный лимит\t[PS+.CALC.UPR.ERR..02]\n2.3.1.3\tОтсутствуют данные о запросе нового или корректировке действующего лимита ОФР\t[PS+.CALC.UPR.ERR..03]\n2.3.1.4\tУ главного КМ отсутствует доступ в ФП Риски\t[PS+.CALC.UPR.ERR..04]\n2.3.1.5\tОтсутствует заведенное максимальное ограничение (МО) или запрошенная сумма превышает установленное МО\t[PS+.CALC.UPR.ERR..05]\n2.3.1.6\tПри ручном вводе ошибка: «Что-то пошло не так. Обратитесь к системному администратору»\t[PS+.CALC.UPR.ERR..06]\n2.3.1.7\tРейтинг не найден в динамической матрице\t[PS+.CALC.UPR.ERR..07]\n2.3.1.8\tРасчёт УПР и ФПР невозможен. Рейтинг заёмщика не был рассчитан\t[PS+.CALC.UPR.ERR..08]\n2.3.1.9\tВ сделке с категорией «Вторая линия защиты»\t[PS+.CALC.UPR.ERR.2LP.00]\n2.3.1.9.1\tНесоответствие комбинации риск-сегмента заемщика и продуктов в сделке\t[PS+.CALC.UPR.ERR.2LP.01]\n2.3.1.9.2\tОтсутствуют полномочия в рамках сделок с категорией «Вторая линия защиты»\t[PS+.CALC.UPR.ERR.2LP.02]\n2.3.1.9.3\tЗначение CalculationId, полученное из МАРС.УПР, отсутствует или найдено 2 открытых кейса в АС Аргус\t[PS+.CALC.UPR.ERR.2LP.03]\n2.3.1.9.4\tРассчитанный на основе КРЗ УПР не позволяет рассматривать сделку, возникает ошибка «Время ожидания от МАРС.УПР истекло»\t[PS+.CALC.UPR.ERR.2LP.04]\n2.3.1.9.5\tРасчет невозможен по причине недопустимой зоны Fraud-риска у заемщика\t[PS+.CALC.UPR.ERR.2LP.05]\n2.3.2\tНеверное значение УПР и ФПР\t[PS+.CALC.UPR.WRO..00]\n2.3.2.1\tРезультат НЭР по сделке\t[PS+.CALC.UPR.WRO..01]\n2.3.2.2\tПодразделение клиентского менеджера в заявке на доступ к АС Аргус\t[PS+.CALC.UPR.WRO..02]\n2.3.2.3\tУполномоченное подразделение в параметрах лимита\t[PS+.CALC.UPR.WRO..03]\n2.3.2.4\tЛимитная позиция заемщика/ГСЗ в параметрах лимита\t[PS+.CALC.UPR.WRO..04]\n2.3.2.5\tПрофиль риска подразделения\t[PS+.CALC.UPR.WRO..05]\n2.3.2.6\tДифференцированная матрица полномочий\t[PS+.CALC.UPR.WRO..06]\n2.3.2.7\tАвтоматическое добавление фактора нестандартности 22.ОФР и 28.ОФР\t[PS+.CALC.UPR.WRO..07]\n2.3.2.8\tСнижение ФПР до 4 глаз с НЭР\t[PS+.CALC.UPR.WRO..08]\n2.3.2.9\tПочему УПР и ФПР в сделке повысился до КК ЦА?\t[PS+.CALC.UPR.WRO..09]\n2.3.2.10\tНестандартности по сделке\t[PS+.CALC.UPR.WRO.NON.00]\n2.3.2.10.1\tПочему нестандартности не учитываются?\t[PS+.CALC.UPR.WRO.NON.01]\n2.3.2.10.2\tПочему УПР и ФПР выше указанных нестандартностей?\t[PS+.CALC.UPR.WRO.NON.02]\n2.3.3\tНеверное значение минимальной категории андеррайтера (МКА)\t[PS+.CALC.UPR...01]\n2.3.4\tПропали результаты расчета УПР и ФПР\t[PS+.CALC.UPR...02]\n2.3.5\tПересчет УПР и ФПР после направления запроса в АС Сенат\t[PS+.CALC.UPR...03]\n3\tLGD и СКР\t[PS+.CALC.LGD..00]\n3.1\tСтатус LGD «в ожидании утверждения»\t[PS+.CALC.LGD..01]\n3.2\tОшибка «Кейс залочен»\t[PS+.CALC.LGD..02]\n3.3\tКогда не требуется утверждение андеррайтером\t[PS+.CALC.LGD..03]\n3.4\tLGD рассчитан без оценочного резерва \t[PS+.CALC.LGD..04]\n3.5\tОшибка «В учетной системе отсутствует информация по рейтингам для следующих участников: Заемщик» \t[PS+.CALC.LGD..05]\n3.6\tПроблема с автоутверждением LGD в сделке с категорией «Вторая линия защиты» \t[PS+.CALC.LGD..06]\n3.7\tОшибка: «Не пришло ни одного продукта заёмщика»\t[PS+.CALC.LGD..07]\n3.8\tНекорректная зона Fraud-риска\t[PS+.CALC.LGD..08]\n3.9\tНет кнопки расчёта LGD\t[PS+.CALC.LGD..09]\n3.10\tESG рейтинг возможно направить на утверждение\t[PS+.CALC.LGD..10]\n3.11\tКак рассчитать СКР в сделках по утверждению Индивидуального решения\t[PS+.CALC.LGD..11]\n3.12\tОбеспечение\t[PS+.CALC.LGD.PROV.00]\n3.12.1\tНе подтягивается обеспечение в калькулятор при расчете LGD\t[PS+.CALC.LGD.PROV.01]\n3.12.2\tНедостаточно прав для привязки объектов обеспечения к продукту\t[PS+.CALC.LGD.PROV.02]\n3.12.3\tНет прав для работы с клиентом\t[PS+.CALC.LGD.PROV.03]\n4\tЗапросы в службы и НЭР\t[PS+.SERV...00]\n4.1\tПроблема отправки запроса в подразделение безопасности\t[PS+.SERV.PB..00]\n4.1.1\tУ участника нет связанных лиц\t[PS+.SERV.PB..01]\n4.1.2\tНет кнопки для отправки запроса\t[PS+.SERV.PB..02]\n4.1.3\tНе могу отменить запрос в ПБ\t[PS+.SERV.PB..03]\n4.2\tНезависимая экспертиза рисков\t[PS+.SERV.NER..00]\n4.2.1\tОтсутствует кнопка для отправки запроса на НЭР\t[PS+.SERV.NER..01]\n4.2.2\tУ андеррайтера не корректно отображается продуктовая группа (ПГ1, ПГ2)\t[PS+.SERV.NER..02]\n4.2.3\tНе могу пропустить НЭР в сделке\t[PS+.SERV.NER..03]\n4.2.4\tОшибка при отправке сделки на НЭР при формате принятия решения КПА\t[PS+.SERV.NER..04]\n4.2.5\tВ расчете УПР и ФПР в поле «Требуется НЭР» стоит значение «НЕТ», при этом требуется отправить сделку на НЭР\t[PS+.SERV.NER..05]\n4.2.6\tКак распределить НЭР на конкретного андеррайтера?\t[PS+.SERV.NER..06]\n4.2.7\tАндеррайтер не может завершить задачу\t[PS+.SERV.NER..07]\n4.3\tПортфельный управляющий (ПУ)\t[PS+.SERV.CFPU..00]\n4.3.1\tОтсутствует кнопка «Проверить сделку на соответствие заказу ПУ»\t[PS+.SERV.CFPU..01]\n4.3.2\tКак закрыть сделку без согласования с ПУ?\t[PS+.SERV.CFPU..02]\n4.3.3\tМакроотрасль заемщика не входит в пилот\t[PS+.SERV.CFPU..03]\n4.3.4\tНужно отозвать согласование с ПУ\t[PS+.SERV.CFPU..04]\n4.3.5\tНе удалось провести проверку, так как в АС Cash Flow не введены необходимые показатели по сделке\t[PS+.SERV.CFPU..05]\n4.3.6\tПривязать CF-модель к сделке\t[PS+.SERV.CFPU..06]\n4.3.7\tРезультаты согласования сделки ПУ не были получены из системы Управления моделями CF в заданный интервал времени\t[PS+.SERV.CFPU..07]\n4.3.8\tКак скорректировать параметры портфельного заказа, если в окне сверки отсутствует кнопка «Перейти в CF»?\t[PS+.SERV.CFPU..08]\n4.4\tПроблемы с запросом в МСХ\t[PS+.SERV.UVSK..00]\n4.4.1\tНет доступных продуктов для выбора при формировании запроса в МСХ \t[PS+.SERV.UVSK..01]\n4.4.2\tОтсутствует кнопка «Сформировать запрос в МСХ»\t[PS+.SERV.UVSK..02]\n4.4.3\tПо выбранному льготному продукту не был завершен процесс согласования субсидий\t[PS+.SERV.UVSK..03]\n4.4.4\tНеобходимо отклонить сделку, но по продукту получено согласование с федеральным МСХ\t[PS+.SERV.UVSK..04]\n4.4.5\tОтсутствует кнопка «снять признак «Льготная программа АПК»\t[PS+.SERV.UVSK..05]\n4.4.6\tКак отправить в МСХ сделку по выдаче траншей в рамках генерального соглашения?\t[PS+.SERV.UVSK..06]\n4.4.7\tОшибка при отправке запроса на согласование\t[PS+.SERV.UVSK..07]\n4.4.8\tВ каких случаях можно удалить признак льготной программы АПК?\t[PS+.SERV.UVSK..08]\n4.5\tЮридическое подразделение (ЮП)\t[PS+.SERV.URP..00]\n5\tРедактирование параметров сделки\t[PS+.PROC..00]\n5.1\tКатегория сделки\t[PS+.PROC.CATE.00]\n5.1.1\tКак изменить категорию\t[PS+.PROC.CATE.01]\n5.1.2\tРедактирование категории невозможно\t[PS+.PROC.CATE.02]\n5.1.3\tОшибка при добавлении категории «Вторая линия защиты»\t[PS+.PROC.CATE.03]\n5.1.4\tНевозможно добавить к  категории «Технические изменения» другую категорию\t[PS+.PROC.CATE.04]\n5.2\tМетод продаж\t[PS+.PROC..01]\n5.3\tПрефикс\t[PS+.PROC..02]\n5.4\tВернуть закрытую сделку в работу\t[PS+.PROC..03]\n5.5\tИзменить заемщика в сделке\t[PS+.PROC..04]\n5.6\tСделка не обновляется\t[PS+.PROC..05]\n5.7\tКак указать префикс 2ЛЗ?\t[PS+.PROC..06]\n5.8\tНевозможно редактировать детали сделки. Ошибка «Не найдены данные, соответствующие запросу»\t[PS+.PROC..07]\n6\tПродукт и лимит\t[PS+.LIM.PROD...00]\n6.1\tЛимиты\t[PS+.LIM..00]\n6.1.1\tЛимит заблокирован\t[PS+.LIM..01]\n6.1.2\tПропал или исчез лимит\t[PS+.LIM..02]\n6.1.3\tНет возможности запросить лимит в сделке\t[PS+.LIM..03]\n6.1.4\tНет возможности отказаться от лимита в сделке\t[PS+.LIM..04]\n6.1.5\tПроблема с суммой использования лимита в статусе «На закрытие»\t[PS+.LIM..05]\n6.1.6\t«Запрещено» при входе в раздел «Лимиты»\t[PS+.LIM..06]\n6.1.7\tНе могу закрыть лимит (в том числе, лимит ОФР)\t[PS+.LIM..07]\n6.2\tПродукты\t[PS+.PROD..00]\n6.2.1\tНе могу привязать лимит к продукту\t[PS+.PROD..01]\n6.2.2\tПо выбранному льготному продукту не был завершен процесс согласования субсидий\t[PS+.PROD..02]\n6.2.3\tНе могу добавить продукт\t[PS+.PROD.ADD.00]\n6.2.3.1\tНовый продукт\t[PS+.PROD.ADD.01]\n6.2.3.2\tПродукт для изменения условий\t[PS+.PROD.ADD.02]\n6.2.3.3\tПродукт для изменения с режимом кредитования «Транш/Договор в рамках ГС»\t[PS+.PROD.ADD.03]\n6.2.3.4\tПродукт для изменения условий, потому что не получено согласование c МСХ\t[PS+.PROD.ADD.04]\n6.2.3.5\tПродукт ММБ для изменения условий\t[PS+.PROD.ADD.05]\n6.2.4\tНе могу изменить сумму продукта в сделке\t[PS+.PROD..03]\n6.2.5\tНе могу выбрать консолидированную группу (КГ) в качестве КНР (конечный носитель риска)\t[PS+.PROD..04]\n6.2.6\tПочему закрылся продукт?\t[PS+.PROD..05]\n6.2.7\tКак продлить срок действия решения?\t[PS+.PROD..06]\n6.2.8\tНеактивна кнопка «Продукты»\t[PS+.PROD..07]\n6.2.9\tОшибка: «Срок продукта превышает срок лимита»\t[PS+.PROD..08]\n7\tЭКД, СЗКП и финансовый анализ\t[PS+.ECM.SZKP..00]\n7.1\tЭлектронное кредитное досье (ЭКД)\t[PS+.ECM.00]\n7.1.1\tНе могу прикрепить к документу подпись (или ЭЦП)\t[PS+.ECM.01]\n7.1.2\tОшибки при входе в ЭКД: «Нет доступа к АС ЕФС» или «Доступ к действию запрещен»\t[PS+.ECM.02]\n7.1.3\tВ ЭКД отсутствуют папки или документы \t[PS+.ECM.03]\n7.1.4\tОтсутствуют документы в папке «внешний документооборот»\t[PS+.ECM.04]\n7.2\tСводное заключение КП(СЗКП)\t[PS+.SZKP.00]\n7.2.1\tНет кнопки «Сформировать сводное заключение КП» \t[PS+.SZKP.01]\n7.2.2\tОшибка при входе «HTTP - Status 400»\t[PS+.SZKP.02]\n7.2.3\tОшибка выгрузки заключения. Сделка с субъектом муниципального образования (СМО)\t[PS+.SZKP.03]\n7.2.4\tПри формировании сводного заключения КП указан некорректный ОКК, Бизнес-сегмент, Рейтинг\t[PS+.SZKP.04]\n7.2.5\tНе отображаются финансовые показатели и финансовый анализ\t[PS+.SZKP.05]\n7.2.6\tНе отображается проект\t[PS+.SZKP.06]\n8\tПринятие решения на КО (Сенат) и подготовка презентации\t[PS+.CO...00]\n8.1\tПринятие решения на КО (Сенат)\t[PS+.CO.SEN..00]\n8.1.1\tОтсутствуют полномочия у голосующего кредитующего подразделения\t[PS+.CO.SEN..01]\n8.1.2\tНевозможно добавить уполномоченного подписанта КП\t[PS+.CO.SEN..02]\n8.1.3\tКак направить доработанные материалы?\t[PS+.CO.SEN..03]\n8.1.4\tИзменить подписантов\t[PS+.CO.SEN..04]\n8.1.5\tКак вернуться на повторный детальный анализ для пересчета УПР после направления запроса в АС Сенат \t[PS+.CO.SEN..05]\n8.1.6\tВо время досылки открылся серый экран (Risk-DecisionMaking-Work-Consider)\t[PS+.CO.SEN..06]\n8.1.7\tДругая проблема\t[PS+.CO.SEN.OTH.00]\n8.1.7.1\tНа вводе данных ошибка «Запрещено»\t[PS+.CO.SEN.OTH.01]\n8.1.7.2\tIssue creating error: The permitted format for decision project is docx only\t[PS+.CO.SEN.OTH.02]\n8.1.7.3\tНе найден ни один инициатор\t[PS+.CO.SEN.OTH.03]\n8.1.7.4\tInternal server error\t[PS+.CO.SEN.OTH.04]\n8.2\tПрезентация на кредитный комитет\t[PS+.CO.PRES..00]\n8.2.1\tНе отображается статус по кредитной политике\t[PS+.CO.PRES..01]\n8.2.2\tНе выгружается слайд «Финансы» по отчетности МСФО\t[PS+.CO.PRES..02]\n8.2.3\tНе формируется слайд «Анализ оборотного капитала»\t[PS+.CO.PRES..03]\n8.2.4\tОтсутствует поле для отражения позиции ЦКРР на слайде «Отклонения»\t[PS+.CO.PRES..04]\n8.2.5\tТребуется ли отражать позицию ЦКРР на слайде «Ключевые риски по сделке», если заключение положительное?\t[PS+.CO.PRES..05]\n8.2.6\tВозможно ли изменить порядок отображения слайдов в презентации?\t[PS+.CO.PRES..06]\n8.2.7\tКоличество периодов в CashFlow превышает максимально допустимое количество столбцов на слайде «Прогноз денежных потоков Заёмщика»\t[PS+.CO.PRES..07]\n9\tДругая проблема\t[PS+.OTH..00]\n9.1\tОткрывается «К7М» вместо «Простые сделки плюс»\t[PS+.OTH..01]\n9.2\tНе могу завести сделку по ПИФ\t[PS+.OTH..02]\n9.3\tНе активный признак Evergreen СМО\t[PS+.OTH..03]\n9.4\tКак вернуться на повторный детальный анализ\t[PS+.OTH..04]\n9.5\tНе могу добавить участника - физическое лицо\t[PS+.OTH..05]\n9.6\tКак закрыть сделку в АС Пегас?\t[PS+.OTH..06]\n9.7\tПроблемные активы\t[PS+.OTH.PROB.00]\n9.7.1\tНе могу отправить сделку на НЭР\t[PS+.OTH.PROB.01]\n9.7.2\tКак завершить сделку в Пегас?\t[PS+.OTH.PROB.02]\n9.7.3\tОшибка при нажатии на кнопку «Продолжить работу в АС УВЗ»\t[PS+.OTH.PROB.03]\n9.7.4\tНе назначается на андеррайтера риск-сегмент по клиенту красной или черной зоны\t[PS+.OTH.PROB.04]\n10\tАС ФОК/ФКД\t[PS+.FOK..00]\n10.1\tНевозможно создать или утвердить документ\t[PS+.FOK.DOC.00]\n10.1.1\tДокумент заблокирован пользователем\t[PS+.FOK.DOC.01]\n10.1.2\tДокумент заблокирован FOK_AUTOBLOCK_USER\t[PS+.FOK.DOC.02]\n10.1.3\tДокумент находится в статусе «Сохранение», «Проверка», «Ошибка»\t[PS+.FOK.DOC.03]\n10.1.4\tПредупреждение о запущенном процессе фонового сохранения\t[PS+.FOK.DOC.04]\n10.2\tВозникла ошибка сервера «HTTP ERROR 500»\t[PS+.FOK.ERR.00]\n10.3\tРеорганизация (копирование данных из одной карточки в другую)\t[PS+.FOK.REOR.00]\n10.3.1\tСмена организационно-правовой формы контрагента (например, ООО в АО)\t[PS+.FOK.REOR.01]\n10.3.2\tРеорганизация в форме присоединения, слияния, разделения и т.д.\t[PS+.FOK.REOR.02]\n10.4\tЗамедление или зависание системы\t[PS+.FOK.SLOW.00]\n10.5\tОшибки загрузки документа в формы ФП ФДК\t[PS+.FOK.LOAD.00]\n10.5.1\tИндивидуальная загрузка через кнопку «Импорт данных из Excel» в самом документе\t[PS+.FOK.LOAD.01]\n10.5.2\tМножественная загрузка через кнопку «Excel» в левом нижнем углу вкладки «Финансовые документы клиента»\t[PS+.FOK.LOAD.02]\n10.6\tОшибки и вопросы при заполнении формы EBITDA\t[PS+.FOK.EBIDA.00]\n10.6.1\tОшибка: EBITDA «Амортизация» в квартальном формате != EBITDA «Амортизация» в годовом формате\t[PS+.FOK.EBIDA.01]\n10.6.2\tОшибка в форме Мониторинг: Значение EBITDA РСБУ в форме финансового анализа отличается от EBITDA в форме «EBITDA»\t[PS+.FOK.EBIDA.02]\n10.6.3\tПорядок расчета прочих операционных расходов в форме\t[PS+.FOK.EBIDA.03]\n11\tФинансовый анализ (ФП УФА)\t[PS+.FA..00]\n11.1\tПолучение доступа к сервису УФА\t[PS+.FA.ACC.00]\n11.1.1\tОтсутствует доступ к АС АСК\t[PS+.FA.ACC.01]\n11.1.2\tОтсутствует доступ к карточке клиента ОПК и/или из санкционного списка\t[PS+.FA.ACC.02]\n11.1.3\tОтсутствует закрепление за клиентом в АС АСК\t[PS+.FA.ACC.03]\n11.2\tНедоступно создание и редактирование УФА\t[PS+.FA..01]\n11.3\tФормирование периметра анализа, добавление компонентов\t[PS+.FA.COMP.00]\n11.3.1\tГруппа компаний, в которую входит заемщик\t[PS+.FA.COMP.01]\n11.3.2\tУчастники группы\t[PS+.FA.COMP.02]\n11.3.3\tУчастники сделки (контрагенты)\t[PS+.FA.COMP.03]\n11.4\tФормирование автовывода и утверждение финансового состояния\t[PS+.FA.AUTO.00]\n11.4.1\tУсловия формирования автовывода\t[PS+.FA.AUTO.01]\n11.4.2\t«Неприменимо» в автовыводе финансового состояния, рассчитанного моделью\t[PS+.FA.AUTO.02]\n11.4.3\t«Недостаточно данных» в автовыводе финансового состояния, рассчитанного моделью\t[PS+.FA.AUTO.03]\n11.4.4\tКорректировка автовывода\t[PS+.FA.AUTO.04]\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;Проблема с УПР\&quot;\n\nОтвет: \&quot;[PS+.CALC.UPR...00]\&quot;\n\nОтвет верни в виде кода решения\n\nна вопросы не относящиеся к АС Пегас, верни только строку \&quot;error\&quot;\nне выдумывай код решения, верни только тот который есть в списке выше!\n\nиспользуй историю диалога:\n{context}\nответь на вопрос:\n{question}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;question&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;question&quot;,&#xa;                &quot;display_name&quot;: &quot;question&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;,&#xa;                &quot;question&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-u0GwF&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 431,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 358.6582361327437,&#xa;          &quot;y&quot;: 1103.1515965557085&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 829.438005936594,&#xa;          &quot;y&quot;: 1706.4965604547128&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0.1,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 829.438005936594,&#xa;          &quot;y&quot;: 1706.4965604547128&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-23NdU&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 330.2628590076954,&#xa;          &quot;y&quot;: 1888.3947703478534&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС CashFlow\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные категории проблем в АС CashFlow с указанием структуры навыка и комментариями:\n\n#######\n1\tСоздание карточки модели\tCF.CREAT...00\n1.1\tОшибка: «Невозможно сохранить изменения без указания макроотрасли и подотрасли клиента»\tCF.CREAT...01\n1.2\tПоиск клиента и создание карточки модели\tCF.CREAT...02\n2\tРабота с моделью\tCF.WORK...00\n2.1\tФормируется неправильный риск-профиль в модели\tCF.WORK...01\n2.2\tДобавить модель в карточку \tCF.WORK...02\n2.3\tНе могу найти нужную модель в списке \tCF.WORK...03\n2.4\tУ риск-менеджера нет кнопки «Утвердить»\tCF.WORK...04\n2.5\tМодель не перешла на мониторинг автоматически\tCF.WORK...05\n2.6\tНе происходит привязка сделки к  новой версии модели \tCF.WORK...06\n2.7\tНе создается версия модели при обновлении в рамках простой сделки \tCF.WORK...07\n2.8\tНужно обновить сценарий (inputs) в модели\tCF.WORK...08\n3\tФормирование шаблона модели \tCF.FORM...00\n3.1\tКак изменить количество исторических или прогнозных периодов?\tCF.FORM...01\n3.2\tРасхождение суммы баланса в модели\tCF.FORM...02\n3.3\tНе изменяются результирующие показатели при заполнении модели \tCF.FORM...03\n3.4\tВ историческом периоде на листе «ОПУ» в модели значения в строке «Амортизация» отражаются с противоположным знаком\tCF.FORM...04\n3.5\tОбразовываются курсовые разницы без операций с валютой\tCF.FORM...05\n3.6\tРазмеры показателей DSCR, ISCR, ICR более 1000\tCF.FORM...06\n4\tML-модели\tCF.ML...00\n4.1\tПостроение модели        \tCF.ML.CONST..00\n4.1.1\tМожно ли повторно утверждать модель ДДС с применением ML-модели, если первичная версия построена без нее?\tCF.ML.CONST..01\n4.1.2\tКакую причину загрузки указывать при актуализации модели в рамках стандартной сделки по оборотному кредитованию?\tCF.ML.CONST..02\n4.1.3\tНужно ли согласование поддержки при указании в анкете ответа «Нет», если компания переходит на новый вид деятельности?\tCF.ML.CONST..03\n4.1.4\tМожно ли строить ML-модель, если у клиента есть продукт ПГ-2? \tCF.ML.CONST..04\n4.1.5\tКак построить модель по клиенту сегмента АПК по льготной ставке?\tCF.ML.CONST..05\n4.1.6\tРезультаты стресс-тестирования оказывают влияние на итоговый вывод по ML- модели?\tCF.ML.CONST..06\n4.1.7\tКак оценить итоговый вывод, если при результате стресс-теста с низким риском имеются критерии с высоким риском?\tCF.ML.CONST..07\n4.1.8\tКак утвердить ML-модель без РМ (автоутверждение)? \tCF.ML.CONST..08\n4.2\t Валидации отчётности при построении модели\tCF.ML.VALID..00\n4.2.1\tИтоговое значение по разделу I \tCF.ML.VALID..01\n4.2.2\tИтоговое значение по разделу II \tCF.ML.VALID..02\n4.2.3\tИтоговое значение по разделу III \tCF.ML.VALID..03\n4.2.4\tИтоговое значение по разделу IV \tCF.ML.VALID..04\n4.2.5\tИтоговое значение по разделу V \tCF.ML.VALID..05\n4.2.6\tОшибка валидации при создании ML-модели «EBITDA LTM sd140 == EBITDA LTM расчетная»\tCF.ML.VALID..06\n4.2.7\tОшибка при валидации ML-модели «Расходы по финансовому лизингу (поквартально) &gt;= 0»\tCF.ML.VALID..07\n4.3\t Отчёт о прибылях и убытках (ОПУ) \tCF.ML.REP..00\n4.3.1\tВыручка \tCF.ML.REP..01\n4.3.2\tСебестоимость продаж квартальная\tCF.ML.REP..02\n4.3.3\tКоммерческие расходы квартальные\tCF.ML.REP..03\n4.3.4\tУправленческие расходы квартальные\tCF.ML.REP..04\n4.3.5\tПроценты к получению квартальные\tCF.ML.REP..05\n4.3.6\tПроценты к уплате квартальные\tCF.ML.REP..06\n4.4\t(SB140) Корректировки EBITDA \tCF.ML.SB140..00\n4.4.1\tEBITDA LTM в SB140 отличается от расчетной EBITDA \tCF.ML.SB140..01\n4.4.2\tРасходы по финансовому лизингу (поквартально) \tCF.ML.SB140..02\n4.5\tInputs модели \tCF.ML.INP..00\n4.5.1\tМожно ли убрать показатели Inputs, реализацией которых клиент не занимается?\tCF.ML.INP..01\n4.5.2\tКак обновить модель при выходе новых Inputs?\tCF.ML.INP..02\n4.6\tСтруктурирование модели  \tCF.ML.STRU..00\n4.6.1\tКапитальные затраты\tCF.ML.STRU.CAPIT.00\n4.6.1.1\tПочему капитальные затраты на поддержание (Maintenance CapEx) равны уровню амортизации?\tCF.ML.STRU.CAPIT.01\n4.6.1.2\tКогда капитальные затраты на поддержание (Maintenance CapEx) могут быть меньше амортизации?\tCF.ML.STRU.CAPIT.02\n4.6.1.3\tКак заложить в прогноз капитальные затраты на расширение (development capex) и как они повлияют на модель?\tCF.ML.STRU.CAPIT.03\n4.6.2\tПрочие операционные и неоперационные расходы  \tCF.ML.STRU.OTH.00\n4.6.2.1\tКак изменить прочие операционные расходы?\tCF.ML.STRU.OTH.01\n4.6.2.2\tКак изменить прочие неоперационные расходы, в том числе штрафы?\tCF.ML.STRU.OTH.02\n4.6.2.3\tКак не учитывать прогноз по прочим неоперационным расходам?\tCF.ML.STRU.OTH.03\n4.6.3\tГде отобразить гарантии, рефинансирование, непокрытый аккредитив, денежные средства для обслуживания связанной организации\tCF.ML.STRU.DIS.00\n4.6.3.1\tГде учесть рефинансирование истекающих кредитов (перевороты кредитов)?\tCF.ML.STRU.DIS.01\n4.6.3.2\tГде учесть денежные средства для обслуживания связанной организации?\tCF.ML.STRU.DIS.02\n4.6.3.3\t  Где отражать гарантии?\tCF.ML.STRU.DIS.03\n4.6.3.4\tГде отразить лимит на непокрытые аккредитивы?\tCF.ML.STRU.DIS.04\n4.6.4\tГде отобразить штрафы, лизинг, дивиденды, субординированный долг, факторинг\tCF.ML.STRU.FINE.00\n4.6.4.1\tГде учесть дивиденды в прогнозных периодах? \tCF.ML.STRU.FINE.01\n4.6.4.2\tГде учесть лизинг?\tCF.ML.STRU.FINE.02\n4.6.4.3\tГде учесть субординированный долг?\tCF.ML.STRU.FINE.03\n4.6.4.4\tКак заложить в прогноз агентский факторинг?\tCF.ML.STRU.FINE.04\n4.6.4.5\tГрафики лизинговых платежей вводятся с НДС или без него?\tCF.ML.STRU.FINE.05\n4.6.4.6\tКак отражать агентский факторинг в ML- моделях\tCF.ML.STRU.FINE.06\n4.6.5\tПочему возник отрицательный баланс на начало первого прогнозного периода в блоке «Существующие обязательства перед другими кредиторами без учета субординированного долга»?\tCF.ML.STRU..01\n4.6.6\tПочему возникает балансирующий долг?\tCF.ML.STRU..02\n4.6.7\tТребуется ли контролировать DSCR, если инвестиции по инвестиционному кредиту полностью отражены в отчетности?\tCF.ML.STRU..03\n4.6.8\tПочему в суммирующей таблице продуктов на вкладке «Кредитный портфель» отражаются привлечения/погашения, которые не вносили?\tCF.ML.STRU..04\n4.7\tПрогноз модели\tCF.ML.FORE..00\n4.7.1\tВыручка\tCF.ML.FORE.REV.00\n4.7.1.1\tКакая логика используется для определения темпа роста выручки?\tCF.ML.FORE.REV.01\n4.7.1.2\tПочему при добавлении планируемой выручки на этапе создания модели в прогнозе рассчитывается другое значение?\tCF.ML.FORE.REV.02\n4.7.2\tИндексы CPI и PPI, показатели ISCR, ISCR LTM  и оборачиваемости\tCF.ML.FORE.IND.00\n4.7.2.1\tПочему индексы CPI и PPI не соответствуют фактически сформированной выручке?\tCF.ML.FORE.IND.01\n4.7.2.2\tЧто делать если квартальный ISCR или ISCR LTM в первых периодах превышен?\tCF.ML.FORE.IND.02\n4.7.2.3\tВозможно ли в модели выровнять показатели оборачиваемости?\tCF.ML.FORE.IND.03\n4.7.3\tОсновные средства и амортизация\tCF.ML.FORE.TOOL.00\n4.7.3.1\tПочему основные средства не снижаются на размер амортизации?\tCF.ML.FORE.TOOL.01\n4.7.3.2\tПочему в прогнозируемом периоде амортизация отрицательная?\tCF.ML.FORE.TOOL.02\n4.7.4\tГде найти формулы по долговым метрикам?\tCF.ML.FORE..01\n4.7.5\tНадо ли корректировать прогноз, если прибыль в модели больше, чем планирует заемщик, и подписывать с ним модель?\tCF.ML.FORE..02\n4.7.6\tПочему прогноз в сезонной и несезонной модели не отличается?\tCF.ML.FORE..03\n4.7.7\tИмеет ли значение классификация долга в прогнозе на краткосрочный и долгосрочный, если весь привлекаемый долг отнесен к долгосрочному? \tCF.ML.FORE..04\n4.7.8\tПочему в прогнозе не соблюдаются установленные на структурировании ОКС?\tCF.ML.FORE..05\n4.7.9\tПочему денежные средства прогнозируются на высоком уровне?\tCF.ML.FORE..06\n5\tИндивидуальный план мониторинга и мониторинг бизнес-плана (ИПМ и МБП)\tCF.PLAN...00\n5.1\tИндивидуальный план мониторинга (ИПМ)\tCF.PLAN.MON..00\n5.1.1\tКак отозвать ИПМ, направленный на согласование риск-менеджеру, для доработки\tCF.PLAN.MON..01\n5.1.2\tСтатус ИПМ «Ожидает подтверждения сделки» и нет кнопки для утверждении ИПМ\tCF.PLAN.MON..02\n5.1.3\tКак при наличии нескольких утвержденных моделей перенести признак актуальности модели - Галочку «✔» - на нужную версию?\tCF.PLAN.MON..03\n5.1.4\tКак можно скорректировать ИПМ по утвержденной модели?\tCF.PLAN.MON..04\n5.1.5\tЧто нужно сделать для автоматической передачи модели на мониторинг?\tCF.PLAN.MON..05\n5.2\tМониторинг бизнес-плана (МБП)\tCF.PLAN.BIS..00\n5.2.1\tНе сформировался МБП за последний квартал загруженной отчетности\tCF.PLAN.BIS..01\n6\tАвтовыводы\tCF.AUTO...00\n6.1\tНе формируются автовыводы\tCF.AUTO...01\n7\tРасчет отраслевой кредитной стратегии (ОКС)\tCF.CALC...00\n7.1\tС расчетом показателей по финансовой отчетности\tCF.CALC...01\n7.2\tС расчетом показателей по CF-модели\tCF.CALC...02\n7.3\tС поиском ОКС и определением сегмента, макроотрасли, подотрасли клиента или КГ\tCF.CALC...03\n7.4\tС риск-метриками\tCF.CALC...04\n7.5\tС показателями сделки\tCF.CALC...05\n7.6\tОшибка: «Не найдена версия модели по КНР, привязанная к сделке»\tCF.CALC...06\n8\tНедвижимость (УФН)\tCF.IMM...00\n8.1\tСтруктура проекта\tCF.IMM.STRU..00\n8.1.1\tКак внести изменения в Структуру проекта?\tCF.IMM.STRU..01\n8.1.2\tКак построить структуру проекта в АС CashFlow (CF), если финансовая модель включает два проекта (финансируется Сбером и другим банком)?\tCF.IMM.STRU..02\n8.1.3\tКак сформировать финансовую модель с использованием структуры проекта и иной деятельности в виде гарантии КРТ (комплексное развитие территорий)?\tCF.IMM.STRU..03\n8.1.4\tПри создании финансовой модели по направлению финансирования в АС CashFlow (CF) из АС КФЮЛ не тянется подотрасль и макроотрасль\tCF.IMM.STRU..04\n8.2\tМониторинг и маппинг\tCF.IMM.STRU..05\n8.3\tШаблон CF-модели\tCF.IMM.TEML..00\n8.3.1\tИспользование финансовой модели другого клиента в качестве шаблона\tCF.IMM.TEML..01\n8.3.2\tПри загрузке финансовой модели в АС CashFlow (CF) возникает сообщение: «Необходимо проверить автоматические и итеративные вычисления»\tCF.IMM.TEML..02\n8.4\tФинансовая модель без сделки\tCF.IMM.FIN..00\n8.4.1\tКак утвердить финансовую модель без сделки?\tCF.IMM.FIN..01\n8.4.2\tКак заблокировать модель без сделки для утверждения РМ?\tCF.IMM.FIN..02\n######\n\nСтруктура сокращена для удобства, например:\n\n\&quot;4.6.2.1\tКак изменить прочие операционные расходы?\tCF.ML.STRU.OTH.01\&quot; равно \&quot;ML-модели.Структурирование модели.Прочие операционные и неоперационные расходы.Как изменить прочие операционные расходы?\n\nРодительская категория отличается от вопроса наличием 00 на конце кода, например:\n\n\&quot;   Как изменить прочие операционные расходы?\t[CF.ML.STRU.OTH.01]\&quot; - родительская категория [CF.ML.STRU.OTH.00]\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;Структурирование модели\&quot;\n\nОтвет: \&quot;CF.ML.STRU..00\&quot;\n\nОтвет верни в виде кода решения\n\nна вопросы не относящиеся к АС CashFlow, верни только строку \&quot;error\&quot;\nне выдумывай код решения, верни только тот который есть в списке выше!\n\nиспользуй историю диалога:\n{context}\nответь на вопрос&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-23NdU&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 330.2628590076954,&#xa;          &quot;y&quot;: 1888.3947703478534&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-zQnaG&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1229.3259225097115,&#xa;          &quot;y&quot;: 550.9445240744142&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС КЮЛ - {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-zQnaG&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1229.3259225097115,&#xa;          &quot;y&quot;: 550.9445240744142&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-ppA6M&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1225.2377670277262,&#xa;          &quot;y&quot;: 1203.4066891678335&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС Пегас - {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-ppA6M&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1225.2377670277262,&#xa;          &quot;y&quot;: 1203.4066891678335&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-fyYo5&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1266.9106957352342,&#xa;          &quot;y&quot;: 1919.1259812065393&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС CashFlow- {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-fyYo5&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1266.9106957352342,&#xa;          &quot;y&quot;: 1919.1259812065393&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-oy48r&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -12.36790903050678,&#xa;          &quot;y&quot;: 1028.0855924466434&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;у меня превышен SCR LTM\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;[CF.ML.FORE.IND.02]\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;найти клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CREAT...02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Расчет отраслевой кредитной стратегии (ОКС)\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CALC...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    }\n]\n&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-oy48r&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;dragging&quot;: false,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -12.36790903050678,&#xa;          &quot;y&quot;: 1028.0855924466434&#xa;        }&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-TWL8d&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -110.1277956300525,&#xa;          &quot;y&quot;: 460.2863536039546&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проверить категорию качества\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.QUAL.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;история КК\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.QUAL.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить УИТ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;некорректно подтянулась карточка клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;изменить тип договора\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;некорректно заведен вид кредита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;по дз ошибка при открытии\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка при подписании договора залога\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;совокупная задолженность\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;установление процентной ставки\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;превышение суммы продукта\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.BROAD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;расчет задолженности\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;переменная ставка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ОКР не обновляются данные\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;задача сформировалась в пегас\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;платежи исполены\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не акцептуются платежи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;остаток кредитных средств в екс\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;доп. свойство АС Murex\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;нет возможности зайти в ЭКД клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не видно распоряжения в 10 папке\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;изменить статус КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;необходимо завести финансовое положение\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.ADJ.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;сервис ушел на подтверждение 2 рукой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.AGR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Необходимо проставить доп.свойства по программе МЭР\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибочно принят документ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить связь с рамкой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;некорректная связка с договором обеспечения\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка с итогами расчета лимита овердрафта\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не найден счет эскроу\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не определены значения сдо по выбранным для расчтета схемам\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;выставление требования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..08\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;входящие документы\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN.DIST.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;при выставлении платежного требования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..08\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;плановые в архиве\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..08\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Автомат для распределения платежных документов\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN.DIST.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;плановые операции\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не формируется отчет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;невозможно изменить МСФО\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;замена залогодателя\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;кредитный реестр\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не сформировалась задача\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;выходит ошибка в екс\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;нужно проставить целевое кредитование\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить программу субсидирования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.AGR.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;невозможно поменять статус КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;при подписании документа ЭЦП для передачи на сопровождение выдает ошибку\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;связать договор с рамкой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;распространение обеспечения\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить связку с КД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка Превышено значение Максимальный срок кредитования указанное в отчете Лимиты овердрафта\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не удается провалиться в отчет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;свободный остаток лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;урегулирование свободного остатка лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;увеличение свободного остатка лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;списать лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;уменьшение СОЛ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;уменьшение свободного остатка лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не получается выгрузить отчет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;выгрузить плановые по договору\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;остаток по статье учета\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.OTH.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;формирование уведомлений\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;переменная маржа\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;запрос на урегулирование доступного остатка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проставить дату окончания субсидирования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.AGR.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не могу подписать документ ЭЦП\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;рейтинг клиента подтягивается некорректно\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.06\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;лимита вне плана\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как установить ставку на транше\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не закрывается задача\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не поступило распоряжение\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка при расчете ставки\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;процентная ставка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;БКИ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.PAY.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;папка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не использовались\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;холд рм оц \&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить КФЮЛ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;зависли платежи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.PAY.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ЭЦП КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;мои роли\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;задолженность\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не удается обновить\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Акцепт\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;за счет кредитных\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;после выдачи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;деньги не пришли\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;п/п не проводится\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;нужно удалить\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;закрытие сделки\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;МС\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.OTH.04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проведена выдача\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;по реестру\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;платежи не акцептуются\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка создания договора залога\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;работа с картотекой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;денежные средства\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;списание денег с кредитного реестра\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;зависли кредитные средства\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не получается акцептовать платежи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;БА\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не дает изменить категорию качества\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.QUAL.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;удалить связь с рамочной кредитной линии\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.СOM.01\&quot;\n    }\n]&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-TWL8d&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -110.1277956300525,&#xa;          &quot;y&quot;: 460.2863536039546&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-lW46J&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -119.36746076085103,&#xa;          &quot;y&quot;: 1951.3190709582725&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;у меня превышен SCR LTM\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;[CF.ML.FORE.IND.02]\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;найти клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CREAT...02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Расчет отраслевой кредитной стратегии (ОКС)\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CALC...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    }\n]&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-lW46J&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -119.36746076085103,&#xa;          &quot;y&quot;: 1951.3190709582725&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;ChatOutput-6cYM7&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 2701.91605118137,&#xa;          &quot;y&quot;: 2119.6811298445277&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;background_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;background_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Background Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The background color of the icon.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;chat_icon&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;chat_icon&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Icon&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The icon of the message.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.io.chat import ChatComponent\nfrom langflow.inputs import BoolInput\nfrom langflow.io import DropdownInput, MessageInput, MessageTextInput, Output\nfrom langflow.schema.message import Message\nfrom langflow.schema.properties import Source\nfrom langflow.utils.constants import MESSAGE_SENDER_AI, MESSAGE_SENDER_NAME_AI, MESSAGE_SENDER_USER\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \&quot;Chat Output\&quot;\n    description = \&quot;Display a chat message in the Playground.\&quot;\n    icon = \&quot;MessagesSquare\&quot;\n    name = \&quot;ChatOutput\&quot;\n\n    inputs = [\n        MessageInput(\n            name=\&quot;input_value\&quot;,\n            display_name=\&quot;Text\&quot;,\n            info=\&quot;Message to be passed as output.\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;should_store_message\&quot;,\n            display_name=\&quot;Store Messages\&quot;,\n            info=\&quot;Store the message in the history.\&quot;,\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\&quot;sender\&quot;,\n            display_name=\&quot;Sender Type\&quot;,\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_AI,\n            advanced=True,\n            info=\&quot;Type of sender.\&quot;,\n        ),\n        MessageTextInput(\n            name=\&quot;sender_name\&quot;,\n            display_name=\&quot;Sender Name\&quot;,\n            info=\&quot;Name of the sender.\&quot;,\n            value=MESSAGE_SENDER_NAME_AI,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;session_id\&quot;,\n            display_name=\&quot;Session ID\&quot;,\n            info=\&quot;The session ID of the chat. If empty, the current session ID parameter will be used.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;data_template\&quot;,\n            display_name=\&quot;Data Template\&quot;,\n            value=\&quot;{text}\&quot;,\n            advanced=True,\n            info=\&quot;Template to convert Data to Text. If left empty, it will be dynamically set to the Data&#39;s text key.\&quot;,\n        ),\n        MessageTextInput(\n            name=\&quot;background_color\&quot;,\n            display_name=\&quot;Background Color\&quot;,\n            info=\&quot;The background color of the icon.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;chat_icon\&quot;,\n            display_name=\&quot;Icon\&quot;,\n            info=\&quot;The icon of the message.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;text_color\&quot;,\n            display_name=\&quot;Text Color\&quot;,\n            info=\&quot;The text color of the name\&quot;,\n            advanced=True,\n        ),\n    ]\n    outputs = [\n        Output(\n            display_name=\&quot;Message\&quot;,\n            name=\&quot;message\&quot;,\n            method=\&quot;message_response\&quot;,\n        ),\n    ]\n\n    def _build_source(self, _id: str | None, display_name: str | None, source: str | None) -&gt; Source:\n        source_dict = {}\n        if _id:\n            source_dict[\&quot;id\&quot;] = _id\n        if display_name:\n            source_dict[\&quot;display_name\&quot;] = display_name\n        if source:\n            source_dict[\&quot;source\&quot;] = source\n        return Source(**source_dict)\n\n    def message_response(self) -&gt; Message:\n        _source, _icon, _display_name, _source_id = self.get_properties_from_source_component()\n        _background_color = self.background_color\n        _text_color = self.text_color\n        if self.chat_icon:\n            _icon = self.chat_icon\n        message = self.input_value if isinstance(self.input_value, Message) else Message(text=self.input_value)\n        message.sender = self.sender\n        message.sender_name = self.sender_name\n        message.session_id = self.session_id\n        message.flow_id = self.graph.flow_id if hasattr(self, \&quot;graph\&quot;) else None\n        message.properties.source = self._build_source(_source_id, _display_name, _source)\n        message.properties.icon = _icon\n        message.properties.background_color = _background_color\n        message.properties.text_color = _text_color\n        if self.session_id and isinstance(message, Message) and self.should_store_message:\n            stored_message = self.send_message(\n                message,\n            )\n            self.message.value = stored_message\n            message = stored_message\n\n        self.status = message\n        return message\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;data_template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;data_template&quot;,&#xa;                &quot;value&quot;: &quot;{text}&quot;,&#xa;                &quot;display_name&quot;: &quot;Data Template&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Template to convert Data to Text. If left empty, it will be dynamically set to the Data&#39;s text key.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Message to be passed as output.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;sender&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;Machine&quot;,&#xa;                  &quot;User&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender&quot;,&#xa;                &quot;value&quot;: &quot;Machine&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Type&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Type of sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;sender_name&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender_name&quot;,&#xa;                &quot;value&quot;: &quot;AI&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Name&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Name of the sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;session_id&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;session_id&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Session ID&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The session ID of the chat. If empty, the current session ID parameter will be used.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;should_store_message&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;should_store_message&quot;,&#xa;                &quot;value&quot;: true,&#xa;                &quot;display_name&quot;: &quot;Store Messages&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Store the message in the history.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;text_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;text_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Text Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The text color of the name&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Display a chat message in the Playground.&quot;,&#xa;            &quot;icon&quot;: &quot;MessagesSquare&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;Chat Output&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: &quot;message_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;should_store_message&quot;,&#xa;              &quot;sender&quot;,&#xa;              &quot;sender_name&quot;,&#xa;              &quot;session_id&quot;,&#xa;              &quot;data_template&quot;,&#xa;              &quot;background_color&quot;,&#xa;              &quot;chat_icon&quot;,&#xa;              &quot;text_color&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;ChatOutput&quot;,&#xa;          &quot;id&quot;: &quot;ChatOutput-6cYM7&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 233,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 2701.91605118137,&#xa;          &quot;y&quot;: 2119.6811298445277&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 778.9485293804037,&#xa;          &quot;y&quot;: 2572.88416959982&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0.1,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 778.9485293804037,&#xa;          &quot;y&quot;: 2572.88416959982&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-SnuWV&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 342.19030132206046,&#xa;          &quot;y&quot;: 2545.9611206278796&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС ЕФС Н.Б. (Автоматизированная система - Единая Фронтальная Система \&quot;Наш Бизнес\&quot;)\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные понятия и термины, применяемые в работе в АС ЕФС Н.Б.:\n\nГруппа связных заемщиков (ГСЗ), максимальное ограничение (МО), консолидированная группа (КГ), \nАндеррайтер (АР), электронно-кредитное досье (ЭКД), цифровой кредитный процесс (ЦКП), кредитное подразделение (КП), коллегиальный орган (КО), Watchlist (WL), финансовая отчетность клиента (ФОК), бюро кредитных историй (БКИ), отраслевой код контрагента (ОКК), индивидуальное решение (ИР), юридическое лицо,клиент, участник КГ (ЮЛ лицо), Место где хранятся данные по рейтингам и риск-сегменту (Аргус), главный кредитный специалист (ГКС),\n\n\nОсновные категории проблем в АС ЕФС Н.Б. с указанием структуры навыка и комментариями:\n\n#######\n1\tКоманда сделки и организации\t[EFS.TEAM..00]\n1.1\t Команда организации\t[EFS.TEAM.ORG.00]\n1.1.1\tКак закрепить руководителя главного кредитного специалиста за клиентом?\t[EFS.TEAM.ORG.01]\n1.1.2\tКак закрепить главного кредитного специалиста за клиентом?\t[EFS.TEAM.ORG.02]\n1.1.3\tМеня нет в команде организации\t[EFS.TEAM.ORG.03]\n1.2\tКоманда сделки\t[EFS.TEAM.DEAL.00]\n1.2.1\tКак происходит назначение задачи по сделке ЦКП на сотрудников кредитующего подразделения\t[EFS.TEAM.DEAL.01]\n1.2.2\tКак посмотреть команду сделки\t[EFS.TEAM.DEAL.02]\n2\tКарточка организации\t[EFS.CARD...00]\n2.1\t   Не отображается карточка организации\t[EFS.CARD...01]\n2.2\tОшибка: «Пользователь заблокирован в АС Argus (ошибка при интеграционном взаимодействии с внешними АС)»\t[EFS.CARD...02]\n2.3\tДетали клиента\t[EFS.CARD.DET..00]\n2.3.1\tКлассификация\t[EFS.CARD.DET..01]\n2.3.2\tОтрасль\t[EFS.CARD.DET.BRAN.00]\n2.3.2.1\tКлиент не имеет действующего кредитного продукта, и отсутствует сделка\t[EFS.CARD.DET.BRAN.01]\n2.3.2.2\tКлиент не имеет действующего кредитного продукта, и рассматривается сделка\t[EFS.CARD.DET.BRAN.02]\n2.3.2.3\tКлиент имеет действующий кредитный продукт\t[EFS.CARD.DET.BRAN.03]\n2.4\tСчета и картотека\t[EFS.CARD.FILE..00]\n2.4.1\tОтсутствует раздел «Счета и картотека»\t[EFS.CARD.FILE..01]\n2.4.2\tОтсутствует информация о кредитах и остатках на ссудных счетах\t[EFS.CARD.FILE..02]\n2.5\tКредитные продукты\t[EFS.CARD.PROD..00]\n2.5.1\tОтсутствует информация о заключенных договорах\t[EFS.CARD.PROD..01]\n2.5.2\tПроблема с закрытым или отклоненным продуктом\t[EFS.CARD.PROD..02]\n2.5.3\tНе получается привязать лимит\t[EFS.CARD.PROD..03]\n2.5.4\tНет кнопки для редактирования или отклонения продукта  \t[EFS.CARD.PROD..04]\n2.5.5\tПочему продукт в статусе «Запрошен»?\t[EFS.CARD.PROD..05]\n2.6\tЛимитная позиция и максимальные ограничения (МО)\t[EFS.CARD.LIM..00]\n2.6.1\tОтсутствует кнопка «Ввести лимит»\t[EFS.CARD.LIM..01]\n2.6.2\tЗапрошенный лимит в сделке не отображается\t[EFS.CARD.LIM..02]\n2.6.3\tНе могу изменить валюту лимита\t[EFS.CARD.LIM..03]\n2.6.4\tНе могу закрыть лимит\t[EFS.CARD.LIM..04]\n2.6.5\tНе получается привязать лимит\t[EFS.CARD.LIM..05]\n2.6.6\tЛимит уходит в архив при создании вручную\t[EFS.CARD.LIM..06]\n2.6.7\tЗначение статусов лимита и (или) сублимита\t[EFS.CARD.LIM.STAT.00]\n2.6.7.1\t«Утвержденный» \t[EFS.CARD.LIM.STAT.01]\n2.6.7.2\t«Недействительный» \t[EFS.CARD.LIM.STAT.02]\n2.6.7.3\t«Заблокированный» \t[EFS.CARD.LIM.STAT.03]\n2.6.8\t«Запрещено» при переходе на вкладки\t[EFS.CARD.LIM..07]\n2.6.9\tПроблема с лимитами ГСЗ\t[EFS.CARD.LIM.GSZ.00]\n2.6.9.1\tНекорректная сумма лимита по ГСЗ\t[EFS.CARD.LIM.GSZ.01]\n2.6.9.2\tНе могу скорректировать сумму лимита по ГСЗ\t[EFS.CARD.LIM.GSZ.02]\n2.7\tПроблема с максимальным ограничением\t[EFS.CARD.LIM.CONS.00]\n2.7.1\tНе могу перевести в архив максимальное ограничение\t[EFS.CARD.LIM.CONS.01]\n2.7.2\tНе могу удалить максимальное ограничение Заемщика\t[EFS.CARD.LIM.CONS.02]\n2.7.3\tСтатус максимального ограничения изменился на «Заблокированный»\t[EFS.CARD.LIM.CONS.03]\n2.7.4\tПочему статус максимального ограничения может измениться на «Отключен»\t[EFS.CARD.LIM.CONS.04]\n2.7.5\tНе учитывается использование по лимитам одного из заемщиков в использовании МО\t[EFS.CARD.LIM.CONS.05]\n2.7.6\tКак рассчитывается доступное использование максимального ограничения\t[EFS.CARD.LIM.CONS.06]\n2.7.7\tНевозможно подтянуть из списка   участника КГ при заведении максимального ограничения на КГ\t[EFS.CARD.LIM.CONS.07]\n2.8\t  Рейтинг\t[EFS.CARD.RAT..00]\n2.8.1\tРейтинг не назначается на андеррайтера\t[EFS.CARD.RAT..01]\n2.8.2\tНе могу переназначить кредитного инспектора в рейтинге клиента\t[EFS.CARD.RAT..02]\n2.8.3\tПри расчете рейтинга не подтягивается риск-сегмент клиента\t[EFS.CARD.RAT..03]\n2.8.4\tНе могу заполнить данные по контрактам или проектам в рейтинге\t[EFS.CARD.RAT..04]\n2.8.5\tПроблема с автоутверждением рейтинга в сделке с категорией «Вторая линия защиты»\t[EFS.CARD.RAT..05]\n2.8.6\tНевозможно рассчитать рейтинг, который привязан к сделке с категорией «Проблемные активы»\t[EFS.CARD.RAT..06]\n2.8.7\tПо организации   из RiskStore не получен актуальный риск-сегмент для расчета\t[EFS.CARD.RAT..07]\n2.8.8\tИзменить привязку к сделке\t[EFS.CARD.RAT..08]\n2.9\tРиск-сегмент\t[EFS.CARD.RSV..00]\n2.9.1\tРиск-сегмент не назначается на АР\t[EFS.CARD.RSV..01]\n2.9.2\tРиск-сегмент красной или черной зоны не назначается на АР\t[EFS.CARD.RSV..02]\n2.9.3\tПроблема с автоутверждением риск-сегмента в сделке с категорией «Вторая линия защиты»\t[EFS.CARD.RSV..03]\n2.9.4\tНе назначается исполнитель для утверждения риск-сегмента в статусе «Отправлен на утверждение»\t[EFS.CARD.RSV..04]\n2.9.5\tИзменить привязку к сделке\t[EFS.CARD.RSV..05]\n2.10\tЗапросы БКИ\t[EFS.CARD.BUR..00]\n2.10.1\tОшибка при формировании запроса\t[EFS.CARD.BUR..01]\n2.11\t Зона проблемности\t[EFS.CARD.PA..00]\n2.11.1\tНе могу продлить срок процедуры эскалации\t[EFS.CARD.PA..01]\n2.11.2\tНе могу изменить бизнес-процесс в мотивированном суждении\t[EFS.CARD.PA..02]\n2.11.3\tНе обновилась зона проблемности клиента\t[EFS.CARD.PA..03]\n2.11.4\tСобытие проблемности не перешло в архив\t[EFS.CARD.PA..04]\n2.11.5\tКак узнать ФИО риск-менеджера по задаче эскалации зоны проблемности? \t[EFS.CARD.PA..05]\n2.11.6\tНе назначается андеррайтер на отработку мотивированного суждения по зоне проблемности\t[EFS.CARD.PA..06]\n3\t Карточка сделки\t[EFS.TRANS.DEAL..00]\n3.1\tНе отображается карточка в разделе «Сделки кредитования»\t[EFS.TRANS.DEAL..01]\n3.2\tОрганизация в стоп-листе\t[EFS.TRANS.DEAL..02]\n3.3\t ЭКД и ФОК\t[EFS.TRANS.DEAL.ESM.00]\n3.3.1\tС типом карточки «Территория»\t[EFS.TRANS.DEAL.ESM.01]\n3.3.2\tВ ЭКД отсутствуют папки и документы\t[EFS.TRANS.DEAL.ESM.02]\n3.3.3\tОтсутствуют документы в папке «Внешний документооборот»\t[EFS.TRANS.DEAL.ESM.03]\n4\tЦКП. Задачи КП по отклонениям и выход на КО\t[EFS.CKP.TASK..00]\n4.1\tЗадача по назначению кредитного инспектора и руководителя\t[EFS.CKP.TASK.PUR.00]\n4.1.1\tКак происходит назначение задачи по сделке ЦКП на сотрудников кредитующего подразделения\t[EFS.CKP.TASK.PUR.01]\n4.1.2\tНе вижу задачу по назначению кредитного инспектора\t[EFS.CKP.TASK.PUR.02]\n4.1.3\tКак выполнить переназначение кредитного инспектора на задачу\t[EFS.CKP.TASK.PUR.03]\n4.1.4\tКто назначает кредитного инспектора на задачу, если в команде организации нет пользователя с ролью «Руководитель главного кредитного специалиста»?\t[EFS.CKP.TASK.PUR.04]\n4.1.5\tПочему задача горит просроченной, если нормативный срок еще не истек?\t[EFS.CKP.TASK.PUR.05]\n4.2\t Задача по отработке WL (Watchlist)\t[EFS.CKP.TASK.WL.00]\n4.2.1\tПо каким сделкам ЦКП доступна отработка WL?\t[EFS.CKP.TASK.WL.01]\n4.2.2\tНормативный срок отработки задачи у кредитного инспектора и риск-менеджера\t[EFS.CKP.TASK.WL.02]\n4.2.3\tКак кредитному инспектору отклонить задачу, если на данный момент снять WL невозможно?\t[EFS.CKP.TASK.WL.03]\n4.2.4\tКак кредитному инспектору отклонить задачу по сделке, если у риск-менеджера уже есть в работе задача по снятию WL?\t[EFS.CKP.TASK.WL.04]\n4.2.5\tЧто будет со сделкой и кнопками в личном кабинете клиента, если риск-менеджер не согласует снятие WL?\t[EFS.CKP.TASK.WL.05]\n4.2.6\tГде посмотреть статус назначения, ФИО риск-менеджера по задаче и результатами его работы?\t[EFS.CKP.TASK.WL.06]\n4.3\tЗадача по принятию решения по сумме и/или сроку\t[EFS.CKP.AMO..00]\n4.3.1\tЗадача по низкорисковым гарантиям\t[EFS.CKP.AMO.LOW.00]\n4.3.1.1\tКакие гарантии считаются низкорисковыми?\t[EFS.CKP.AMO.LOW.01]\n4.3.1.2\tНормативный срок отработки задачи по принятию решения о сумме или сроку \t[EFS.CKP.AMO.LOW.02]\n4.3.1.3\tГде мне доступны документы, приложенные клиентом к заявке?\t[EFS.CKP.AMO.LOW.03]\n4.3.2\tЗадача по стандартным гарантиям\t[EFS.CKP.AMO.STAN.00]\n4.3.2.1\tНормативный срок отработки задачи\t[EFS.CKP.AMO.STAN.01]\n4.3.2.2\tКак отредактировать запрошенные клиентом параметры?\t[EFS.CKP.AMO.STAN.02]\n4.3.2.3\tГде посмотреть дату выдачи банковской гарантии, указанную клиентом?\t[EFS.CKP.AMO.STAN.03]\n4.3.2.4\tЧто такое Gtotal?\t[EFS.CKP.AMO.STAN.04]\n4.3.2.5\tГде мне доступны документы, приложенные клиентом к заявке?\t[EFS.CKP.AMO.STAN.05]\n4.3.3\t Задача по кредитам\t[EFS.CKP.AMO.CRED.00]\n4.3.4\t Выход на коллегиальный орган (КО)\t[EFS.CKP.KO..00]\n5\tЗапросы к службам ПБ и ПКД\t[EFS.REQ..00]\n5.1\tЗапрос к службам ПКД\t[EFS.REQ.PCD..00]\n\tОграничения по использованию сервиса\t[EFS.REQ.PCD..01]\n5.2\tСоздание запроса\t[EFS.REQ.PCD.CRE.00]\n5.2.1\tСоздание нескольких запросов по одному продукту сделки\t[EFS.REQ.PCD.CRE.01]\n5.2.2\tПри создании запроса отсутствует нужный клиент\t[EFS.REQ.PCD.CRE.02]\n5.2.3\tДобавление документов при создании запроса\t[EFS.REQ.PCD.CRE.03]\n5.2.4\tКопирование запроса\t[EFS.REQ.PCD.CRE.04]\n5.2.5\tСоздание запроса без указания сделки\t[EFS.REQ.PCD.CRE.05]\n5.2.6\tВ запросе не отображаются участники сделки\t[EFS.REQ.PCD.CRE.06]\n5.3\tРабота кредитного инспектора с запросом\t[EFS.REQ.PCD.CI.00]\n5.3.1\tРазмещение подготовленной КОД в ЭКД\t[EFS.REQ.PCD.CI.01]\n5.3.2\tТребуется корректировка созданного запроса\t[EFS.REQ.PCD.CI.02]\n5.3.3\tОтзыв созданного запроса КИ\t[EFS.REQ.PCD.CI.03]\n5.3.4\tКорректировка подготовленной КОД\t[EFS.REQ.PCD.CI.04]\n5.3.5\tНедоступна кнопка «Корректировка КОД»  \t[EFS.REQ.PCD.CI.05]\n5.3.6\tДобавление в запрос на подготовку КОД решения КО\t[EFS.REQ.PCD.CI.06]\n5.3.7\tРабота с задачей «Устранение замечаний ПКД»\t[EFS.REQ.PCD.CI.07]\n5.3.8\tРабота с задачей «Согласование КОД КП»\t[EFS.REQ.PCD.CI.08]\n5.4\tРабота сотрудника ПКД с запросом\t[EFS.REQ.PCD.WOR.00]\n5.4.1\tДоступные сотруднику ПКД вкладки в ЕФС\t[EFS.REQ.PCD.WOR.01]\n5.4.2\tДействия сотрудника ПКД в АС ЕФС при выполнении задачи\t[EFS.REQ.PCD.WOR.02]\n5.4.3\tРазмещение подготовленной КОД в ЭКД\t[EFS.REQ.PCD.WOR.03]\n5.4.4\tОтклонение задачи сотрудником ПКД\t[EFS.REQ.PCD.WOR.04]\n5.4.5\tДоработка или корректировка КОД в соответствии с решением КО\t[EFS.REQ.PCD.WOR.05]\n5.4.6\tРабота с задачей «Подписать КОД»\t[EFS.REQ.PCD.WOR.06]\n5.4.7\tРабота с задачей «Поставить КОД на учет»\t[EFS.REQ.PCD.WOR.07]\n5.4.8\tРабота с задачей «Передать КОД в архив»\t[EFS.REQ.PCD.WOR.08]\n5.4.9\tРабота клиентского менеджера с запросом\t[EFS.REQ.PCD..02]\n6\tЗапросы к службам ПБ\t[EFS.REQ.SEC..00]\n6.1\tКритерии и ограничения сервиса\t[EFS.REQ.SEC.CRIT.00]\n6.1.1\tНа какие сделки распространяется сервис\t[EFS.REQ.SEC.CRIT.01]\n6.1.2\tНаправление запроса через Сбердокс (вне ЕФС.НБ). Технические ограничения\t[EFS.REQ.SEC.CRIT.02]\n6.1.3\tНаправление запроса через Сбердокс (вне ЕФС.НБ). Процессные ограничения\t[EFS.REQ.SEC.CRIT.03]\n6.2\tФормирование запроса КМ\t[EFS.REQ.SEC.CM.00]\n6.2.1\tФормирование запроса КМ на детальном анализе\t[EFS.REQ.SEC.CM.01]\n6.2.2\tСоздание повторного запроса\t[EFS.REQ.SEC.CM.02]\n6.2.3\tВ запросе неактивна кнопка «Создать»\t[EFS.REQ.SEC.CM.03]\n6.2.4\tПричина отклонения запроса\t[EFS.REQ.SEC.CM.04]\n6.3\tФормирование запроса КИ\t[EFS.REQ.SEC.KI.00]\n6.3.1\tФормирование запроса КИ\t[EFS.REQ.SEC.KI.01]\n6.4\tОбъекты проверки\t[EFS.REQ.SEC.OBJ.00]\n6.4.1\tНе отображаются участники сделки\t[EFS.REQ.SEC.OBJ.01]\n6.4.2\tКакие участники и связанные лица направляются на проверку\t[EFS.REQ.SEC.OBJ.02]\n6.4.3\tПроверка акционеров и/или учредителей компании\t[EFS.REQ.SEC.OBJ.03]\n6.4.4\tУ участника сделки отсутствует связанное лицо\t[EFS.REQ.SEC.OBJ.04]\n6.5\tОбъекты проверки (Бенефициар)\t[EFS.REQ.SEC.BEN.00]\n6.6\tОбъекты проверки (ЕИО)\t[EFS.REQ.SEC.EIO.00]\n6.6.1\tЗаполнение сведений о единоличном исполнительном органе (ЕИО)\t[EFS.REQ.SEC.EIO.01]\n7\tПроект решения по овердрафту\t[EFS.OVER.00]\n7.1\tАвтоматизированное формирование ПР по овердрафту в ЕФС. Наш бизнес является обязательным?\t[EFS.OVER.01]\n7.2\tКакие особенности заполнения п.3   «Сумма финансирования»?\t[EFS.OVER.02]\n7.3\tКакие особенности заполнения п.6   «Срок финансирования»?\t[EFS.OVER.03]\n7.4\tКакие особенности заполнения п.9   «Общие параметры процентной ставки» и «Процентная ставка»?\t[EFS.OVER.04]\n8\tКредитно-обеспечительная документация (КОД )\t[EFS.COD..00]\n8.1\tОграничения по формированию договора поручительства вне основного договора\t[EFS.COD..01]\n8.2\tОвердрафт\t[EFS.COD.OVER.00]\n8.2.1\tАвтоматизированное формирование КОД по овердрафту в ЕФС. Наш бизнес является обязательным?\t[EFS.COD.OVER.01]\n8.2.2\tКакие основные ограничения по формированию КОД по овердрафту?\t[EFS.COD.OVER.02]\n8.2.3\tКакие ручные корректировки нужно внести в договор по овердрафту?\t[EFS.COD.OVER.03]\n8.2.4\tМожно подписать договор овердрафта в Сбербизнесе?  \t[EFS.COD.OVER.04]\n8.2.5\tГде получить информацию о рейтинге контрагента?\t[EFS.COD.OVER.05]\n######\n\nСтруктура сокращена для удобства, например:\n\n\&quot;2.3.2.3\tКлиент имеет действующий кредитный продукт\tEFS.CARD.DET.BRAN.03\&quot; равно \&quot;Карточка организации.Детали клиента.Отрасль.Клиент имеет действующий кредитный продукт\&quot;\n\nРодительская категория отличается от вопроса наличием 00 на конце кода, например:\n\n\&quot;   Не отображается карточка организации\tEFS.CARD...01\&quot; - родительская категория EFS.CARD...00\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;как в ЕФС скорректировать отрасль и макротрасль по клиенту\&quot;\n\nОтвет: \&quot;EFS.CARD.DET.BRAN.00\&quot;\n\nОтвет верни в виде кода решения\n\nна вопросы не относящиеся к АС ЕФС, верни только строку \&quot;error\&quot; \nЗАПРЕЩАЮ ВЫДУМЫВАТЬ ПРИСВОЕННЫЙ КОД, верни только тот который есть в списке выше!\n\n\nиспользуй историю диалога:\n{context}\nответь на вопрос&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-SnuWV&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 342.19030132206046,&#xa;          &quot;y&quot;: 2545.9611206278796&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-WwHbP&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1251.98060770421,&#xa;          &quot;y&quot;: 2586.763905366086&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС ЕФС.НБ - {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-WwHbP&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1251.98060770421,&#xa;          &quot;y&quot;: 2586.763905366086&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-MNolv&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -129.26176185211472,&#xa;          &quot;y&quot;: 2531.670021495305&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ОКК как поменять\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.DET.BRAN.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;продукт закрыт, лимит нет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;необходимо добавить роль куратор ир\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;требуется доступ с ролью - куратор индивидуальных решений\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как добавить новое юр лицо в лимит мо\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;архивировать лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;перевести рейтинг в статус «ожидание сигнала для утверждения»\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RAT..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;реклассификация зоны проблемности\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.PA..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;при расчете рейтинга возникает ошибка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RSV..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;по заемщику отправили на утверждение рейтинг, до сих пор данная задача не распределена\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RSV..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проблема с автоутверждением рейтинга в сделке с категорией «вторая линия защиты»\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RAT..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;вопрос по ошибке рейтинга в аргусе\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RAT..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Сотрудник с Руководитель главного кредитного специалиста» (РГКС) может передать клиента новому РГКС\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как попасть в команду организации\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить меня в команду организации\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Программа не дает перевести продукты в статус Закрыт\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.PROD..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Статус продукта в ЕФС Действующий, хотя продукт в КЮЛ закрыт, срок его вышел, все сделки в Пегас по нему закрыты\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.PROD..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ЭКД не соответствует клиенту среднего бизнеса\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TRANS.DEAL.ESM.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;АС ЕФС в модуле Счета и картотека при загрузке выходит сообщение\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.FILE..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;необходимо переназначить ВКО сделки на\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не могу ввести на нижнем уровне МО лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Классификация клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.DET..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;асргус\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;При генерации номере кредитного договора не ищет клиента из санкционных списков\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как выставить запрос в ПКД повторно\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CRE.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Задание на подготовку КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CRE.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как изменить текст договора, если задание на подготовку КОД выставлено/направлено в ПКД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CI.05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как скорректировать КОД в выставленном/сформированном/направленном запросе на подготовку КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CI.05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как изменить отправленный/созданный запрос в ПКД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CI.02\&quot;\n    }\n]&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-MNolv&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -129.26176185211472,&#xa;          &quot;y&quot;: 2531.670021495305&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 2104.2236088191135,&#xa;          &quot;y&quot;: 1886.2371948013094&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Получены ответы:\n\n{answer1}\n{answer2}\n{answer3}\n{answer4}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer1&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer1&quot;,&#xa;                &quot;display_name&quot;: &quot;answer1&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;answer2&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer2&quot;,&#xa;                &quot;display_name&quot;: &quot;answer2&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;answer3&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer3&quot;,&#xa;                &quot;display_name&quot;: &quot;answer3&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;answer4&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer4&quot;,&#xa;                &quot;display_name&quot;: &quot;answer4&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer1&quot;,&#xa;                &quot;answer2&quot;,&#xa;                &quot;answer3&quot;,&#xa;                &quot;answer4&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-9iFTC&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 603,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 2104.2236088191135,&#xa;          &quot;y&quot;: 1886.2371948013094&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-nAWvv&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -2050.3428494384284,&#xa;          &quot;y&quot;: 903.5963417720715&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;input_message&quot;: {&#xa;                &quot;type&quot;: &quot;Message&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: false,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;input_message&quot;,&#xa;                &quot;display_name&quot;: &quot;Input Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Входное сообщение с JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass SystemRouter(CustomComponent):\n    display_name = \&quot;System Router\&quot;\n    description = \&quot;Направляет запрос в соответствующую систему на основе JSON\&quot;\n    \n    # Явно определяем выходы\n    outputs = [\n        {\&quot;name\&quot;: \&quot;pegas\&quot;, \&quot;method\&quot;: \&quot;pegas_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system2\&quot;, \&quot;method\&quot;: \&quot;system2_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system3\&quot;, \&quot;method\&quot;: \&quot;system3_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system4\&quot;, \&quot;method\&quot;: \&quot;system4_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system5\&quot;, \&quot;method\&quot;: \&quot;system5_output\&quot;},\n        {\&quot;name\&quot;: \&quot;unknown\&quot;, \&quot;method\&quot;: \&quot;unknown_output\&quot;}\n    ]\n\n    def build_config(self):\n        return {\n            \&quot;input_message\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Input Message\&quot;,\n                \&quot;info\&quot;: \&quot;Входное сообщение с JSON\&quot;,\n                \&quot;type\&quot;: \&quot;Message\&quot;,\n            }\n        }\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.question = None\n        self.system_name = None\n        self.error = None\n\n    def build(self, input_message: Message) -&gt; Message:\n        try:\n            # Парсим JSON из текста сообщения\n            input_json = input_message.text\n            data = json.loads(input_json)\n            self.system_name = data.get(\&quot;system_name\&quot;, \&quot;\&quot;).lower()\n            self.question = data.get(\&quot;question\&quot;, \&quot;\&quot;)\n            self.error = None\n            \n            # Возвращаем основное сообщение с вопросом\n            return Message(text=self.question, data=data)\n                \n        except json.JSONDecodeError as e:\n            self.error = f\&quot;Ошибка формата JSON: {str(e)}\&quot;\n            return Message(text=self.error)\n        except Exception as e:\n            self.error = f\&quot;Ошибка обработки: {str(e)}\&quot;\n            return Message(text=self.error)\n\n    # Методы для каждого выхода\n    def pegas_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;pegas\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system2_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system2\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system3_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system3\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system4_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system4\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system5_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system5\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def unknown_output(self) -&gt; Message:\n        if self.error:\n            return Message(text=self.error)\n        if self.system_name not in [\&quot;pegas\&quot;, \&quot;system2\&quot;, \&quot;system3\&quot;, \&quot;system4\&quot;, \&quot;system5\&quot;]:\n            return Message(text=f\&quot;Неизвестная система: {self.system_name}\&quot;)\n        return None&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Направляет запрос в соответствующую систему на основе JSON&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;System Router&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;input_message&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;pegas&quot;,&#xa;                &quot;display_name&quot;: &quot;pegas&quot;,&#xa;                &quot;method&quot;: &quot;pegas_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system2&quot;,&#xa;                &quot;display_name&quot;: &quot;system2&quot;,&#xa;                &quot;method&quot;: &quot;system2_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system3&quot;,&#xa;                &quot;display_name&quot;: &quot;system3&quot;,&#xa;                &quot;method&quot;: &quot;system3_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system4&quot;,&#xa;                &quot;display_name&quot;: &quot;system4&quot;,&#xa;                &quot;method&quot;: &quot;system4_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system5&quot;,&#xa;                &quot;display_name&quot;: &quot;system5&quot;,&#xa;                &quot;method&quot;: &quot;system5_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;unknown&quot;,&#xa;                &quot;display_name&quot;: &quot;unknown&quot;,&#xa;                &quot;method&quot;: &quot;unknown_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-nAWvv&quot;&#xa;        },&#xa;        &quot;selected&quot;: true,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 455,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -2050.3428494384284,&#xa;          &quot;y&quot;: 903.5963417720715&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      }&#xa;    ],&#xa;    &quot;edges&quot;: [&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-CRUzXœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-h4rNUœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-CRUzX{œdataTypeœ:œPromptœ,œidœ:œPrompt-CRUzXœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-h4rNU{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-h4rNUœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-u0GwFœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-3wLFFœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-u0GwF{œdataTypeœ:œPromptœ,œidœ:œPrompt-u0GwFœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-3wLFF{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-3wLFFœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-23NdU&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-23NdUœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-23NdU&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-23NdU{œdataTypeœ:œPromptœ,œidœ:œPrompt-23NdUœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-nSWcd{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;input_value&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-nSWcd{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-h4rNUœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-zQnaG&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-zQnaGœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-zQnaG&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-h4rNU{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-h4rNUœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-zQnaG{œfieldNameœ:œanswerœ,œidœ:œPrompt-zQnaGœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-3wLFFœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-ppA6M&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-ppA6Mœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-ppA6M&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-3wLFF{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-3wLFFœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-ppA6M{œfieldNameœ:œanswerœ,œidœ:œPrompt-ppA6Mœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-nSWcdœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-fyYo5&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-fyYo5œ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-fyYo5&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-nSWcd{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-nSWcdœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-fyYo5{œfieldNameœ:œanswerœ,œidœ:œPrompt-fyYo5œ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-oy48r&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-oy48rœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-oy48r&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-oy48r{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-oy48rœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-u0GwF{œfieldNameœ:œcontextœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-TWL8d&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-TWL8dœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-TWL8d&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-TWL8d{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-TWL8dœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-CRUzX{œfieldNameœ:œcontextœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-lW46J&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-lW46Jœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-23NdU&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-23NdUœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-23NdU&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-lW46J&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-lW46J{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-lW46Jœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-23NdU{œfieldNameœ:œcontextœ,œidœ:œPrompt-23NdUœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-SnuWV&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-SnuWVœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-SnuWV&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-SnuWV{œdataTypeœ:œPromptœ,œidœ:œPrompt-SnuWVœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-HryYo{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-HryYoœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-WwHbP&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-WwHbPœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-WwHbP&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-HryYo{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-HryYoœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-WwHbP{œfieldNameœ:œanswerœ,œidœ:œPrompt-WwHbPœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-MNolv&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MNolvœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-SnuWV&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-SnuWVœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-SnuWV&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-MNolv&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-MNolv{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MNolvœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-SnuWV{œfieldNameœ:œcontextœ,œidœ:œPrompt-SnuWVœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;input_value&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-HryYo{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-ppA6M&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-ppA6Mœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer2œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer2&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-ppA6M&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-ppA6M{œdataTypeœ:œPromptœ,œidœ:œPrompt-ppA6Mœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer2œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-zQnaG&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-zQnaGœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer1œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer1&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-zQnaG&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-zQnaG{œdataTypeœ:œPromptœ,œidœ:œPrompt-zQnaGœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer1œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-fyYo5&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-fyYo5œ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer3œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer3&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-fyYo5&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-fyYo5{œdataTypeœ:œPromptœ,œidœ:œPrompt-fyYo5œ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer3œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-WwHbP&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-WwHbPœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer4œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer4&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-WwHbP&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-WwHbP{œdataTypeœ:œPromptœ,œidœ:œPrompt-WwHbPœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer4œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-9iFTCœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;ChatOutput-6cYM7&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-6cYM7œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;input_value&quot;,&#xa;            &quot;id&quot;: &quot;ChatOutput-6cYM7&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-9iFTC{œdataTypeœ:œPromptœ,œidœ:œPrompt-9iFTCœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-ChatOutput-6cYM7{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-6cYM7œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œquestionœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;question&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-CRUzX{œfieldNameœ:œquestionœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œquestionœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;question&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-u0GwF{œfieldNameœ:œquestionœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      }&#xa;    ],&#xa;    &quot;viewport&quot;: {&#xa;      &quot;x&quot;: 264.75037531349915,&#xa;      &quot;y&quot;: -20.04231939840753,&#xa;      &quot;zoom&quot;: 0.26094438861826746&#xa;    }&#xa;  },&#xa;  &quot;is_component&quot;: false&#xa;}" link="{&#xa;  &quot;updated_at&quot;: &quot;2025-06-02T15:52:15+00:00&quot;,&#xa;  &quot;icon_bg_color&quot;: null,&#xa;  &quot;webhook&quot;: false,&#xa;  &quot;description&quot;: &quot;Language Models, Unleashed.&quot;,&#xa;  &quot;user_id&quot;: &quot;f7bcd42d-c8bd-4a63-92b1-7eec0a70bdcc&quot;,&#xa;  &quot;endpoint_name&quot;: null,&#xa;  &quot;icon&quot;: null,&#xa;  &quot;name&quot;: &quot;Поиск&quot;,&#xa;  &quot;id&quot;: &quot;f81b701a-d2b0-4fe6-9cc0-0aaef2249739&quot;,&#xa;  &quot;tags&quot;: null,&#xa;  &quot;folder_id&quot;: &quot;30df36e3-5d3d-4d9f-a436-d15a40d32a2f&quot;,&#xa;  &quot;gradient&quot;: null,&#xa;  &quot;data&quot;: {&#xa;    &quot;nodes&quot;: [&#xa;      {&#xa;        &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -2378.0911017405006,&#xa;          &quot;y&quot;: 562.665965116462&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;files&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [&#xa;                  &quot;txt&quot;,&#xa;                  &quot;md&quot;,&#xa;                  &quot;mdx&quot;,&#xa;                  &quot;csv&quot;,&#xa;                  &quot;json&quot;,&#xa;                  &quot;yaml&quot;,&#xa;                  &quot;yml&quot;,&#xa;                  &quot;xml&quot;,&#xa;                  &quot;html&quot;,&#xa;                  &quot;htm&quot;,&#xa;                  &quot;pdf&quot;,&#xa;                  &quot;docx&quot;,&#xa;                  &quot;py&quot;,&#xa;                  &quot;sh&quot;,&#xa;                  &quot;sql&quot;,&#xa;                  &quot;js&quot;,&#xa;                  &quot;ts&quot;,&#xa;                  &quot;tsx&quot;,&#xa;                  &quot;jpg&quot;,&#xa;                  &quot;jpeg&quot;,&#xa;                  &quot;png&quot;,&#xa;                  &quot;bmp&quot;,&#xa;                  &quot;image&quot;&#xa;                ],&#xa;                &quot;list&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;files&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Files&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Files to be sent with the message.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;file&quot;,&#xa;                &quot;_input_type&quot;: &quot;FileInput&quot;&#xa;              },&#xa;              &quot;background_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;background_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Background Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The background color of the icon.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;chat_icon&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;chat_icon&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Icon&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The icon of the message.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.data.utils import IMG_FILE_TYPES, TEXT_FILE_TYPES\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.inputs import BoolInput\nfrom langflow.io import DropdownInput, FileInput, MessageTextInput, MultilineInput, Output\nfrom langflow.schema.message import Message\nfrom langflow.utils.constants import MESSAGE_SENDER_AI, MESSAGE_SENDER_NAME_USER, MESSAGE_SENDER_USER\n\n\nclass ChatInput(ChatComponent):\n    display_name = \&quot;Chat Input\&quot;\n    description = \&quot;Get chat inputs from the Playground.\&quot;\n    icon = \&quot;MessagesSquare\&quot;\n    name = \&quot;ChatInput\&quot;\n\n    inputs = [\n        MultilineInput(\n            name=\&quot;input_value\&quot;,\n            display_name=\&quot;Text\&quot;,\n            value=\&quot;\&quot;,\n            info=\&quot;Message to be passed as input.\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;should_store_message\&quot;,\n            display_name=\&quot;Store Messages\&quot;,\n            info=\&quot;Store the message in the history.\&quot;,\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\&quot;sender\&quot;,\n            display_name=\&quot;Sender Type\&quot;,\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_USER,\n            info=\&quot;Type of sender.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;sender_name\&quot;,\n            display_name=\&quot;Sender Name\&quot;,\n            info=\&quot;Name of the sender.\&quot;,\n            value=MESSAGE_SENDER_NAME_USER,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;session_id\&quot;,\n            display_name=\&quot;Session ID\&quot;,\n            info=\&quot;The session ID of the chat. If empty, the current session ID parameter will be used.\&quot;,\n            advanced=True,\n        ),\n        FileInput(\n            name=\&quot;files\&quot;,\n            display_name=\&quot;Files\&quot;,\n            file_types=TEXT_FILE_TYPES + IMG_FILE_TYPES,\n            info=\&quot;Files to be sent with the message.\&quot;,\n            advanced=True,\n            is_list=True,\n        ),\n        MessageTextInput(\n            name=\&quot;background_color\&quot;,\n            display_name=\&quot;Background Color\&quot;,\n            info=\&quot;The background color of the icon.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;chat_icon\&quot;,\n            display_name=\&quot;Icon\&quot;,\n            info=\&quot;The icon of the message.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;text_color\&quot;,\n            display_name=\&quot;Text Color\&quot;,\n            info=\&quot;The text color of the name\&quot;,\n            advanced=True,\n        ),\n    ]\n    outputs = [\n        Output(display_name=\&quot;Message\&quot;, name=\&quot;message\&quot;, method=\&quot;message_response\&quot;),\n    ]\n\n    def message_response(self) -&gt; Message:\n        _background_color = self.background_color\n        _text_color = self.text_color\n        _icon = self.chat_icon\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n            files=self.files,\n            properties={\&quot;background_color\&quot;: _background_color, \&quot;text_color\&quot;: _text_color, \&quot;icon\&quot;: _icon},\n        )\n        if self.session_id and isinstance(message, Message) and self.should_store_message:\n            stored_message = self.send_message(\n                message,\n            )\n            self.message.value = stored_message\n            message = stored_message\n\n        self.status = message\n        return message\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;работа с картотекой&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Message to be passed as input.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MultilineInput&quot;&#xa;              },&#xa;              &quot;sender&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;Machine&quot;,&#xa;                  &quot;User&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender&quot;,&#xa;                &quot;value&quot;: &quot;User&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Type&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Type of sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;sender_name&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender_name&quot;,&#xa;                &quot;value&quot;: &quot;User&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Name&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Name of the sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;session_id&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;session_id&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Session ID&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The session ID of the chat. If empty, the current session ID parameter will be used.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;should_store_message&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;should_store_message&quot;,&#xa;                &quot;value&quot;: true,&#xa;                &quot;display_name&quot;: &quot;Store Messages&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Store the message in the history.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;text_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;text_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Text Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The text color of the name&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Get chat inputs from the Playground.&quot;,&#xa;            &quot;icon&quot;: &quot;MessagesSquare&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;Chat Input&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: &quot;message_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;should_store_message&quot;,&#xa;              &quot;sender&quot;,&#xa;              &quot;sender_name&quot;,&#xa;              &quot;session_id&quot;,&#xa;              &quot;files&quot;,&#xa;              &quot;background_color&quot;,&#xa;              &quot;chat_icon&quot;,&#xa;              &quot;text_color&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;ChatInput&quot;,&#xa;          &quot;id&quot;: &quot;ChatInput-sPJDh&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 233,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -2378.0911017405006,&#xa;          &quot;y&quot;: 562.665965116462&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 340.61941891755305,&#xa;          &quot;y&quot;: 417.04965303089415&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС КЮЛ (Кредиты юридических лиц)\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные понятия и термины, применяемые в работе в АС КЮЛ:\n\nКатегория качества (КК), Подразделение сопровождения кредитной операции (ПСКО), Платформы поддержки развития бизнеса (ППРБ), Международные стандарты финансовой отчетности (МСФО), Единый договор о предоставлении банковской гарантии (ЕДБГ), Договор о предоставлении банковской гарантии (ДБГ), Уполномоченный коллегиальный орган (КО), Автоматизированная система (АС), АС кредитная фабрика юридических лиц (КФЮЛ), Ас единая корпоративная система (ЕКС), Расчетно-кассовое обслуживание (РКО), Подразделение администрирования кредитов (ПАК), Подразделение подготовки кредитной документации (ПКД), Общая задолженность клиента по всем банкам (Bc_cap), электронное кредитное досье (ЭКД), ас оценка кредитного риска (АС ОКР), электронная выдача (ЭВ), внутренний нормативный документ (ВНД), юридическое лицо (ЮЛ), уникальный идентификатор теста (УИТ), электронная подпись (ЭП), кредитно-обеспечительная документация (КОД), рамочная кредитная линия (РКЛ), невозобновляемая кредитная линия (НКЛ), возобновляемая кредитная линия (ВКЛ), кредитная документация (КД), возобновляемая кредитная линия с дифференцированными станками (ВКЛДС), свободны остаток лимита (СОЛ), платежное поручение (ПТ), погашение обязательств по кредитному продукту (КА), РЦ Банк России (РЦ), крупный и средний бизнес (КСБ), мастер система (МС), рамочная кредитная линия (Рамка)\n\nОсновные категории проблем в АС КЮЛ с указанием структуры навыка и комментариями:\n\nСтруктура сокращена для удобства, например \n\n\&quot;1.6.1\tСумма договора в КЮЛ превышает сумму продукта в КФЮЛ\tKUL.CREAT.BROAD.01\&quot; равно \&quot;КЮЛ.Создание и подписание продукта.Ошибка при передаче договора ПСКО.Сумма договора в КЮЛ превышает сумму продукта в КФЮЛ\&quot;\n\n#######\n1\tСоздание и подписание продукта\tKUL.CREAT..00\n\n1.1\tОтнесение ссуды и категории качества (вкладка «История КК»)\tKUL.CREAT.QUAL.00\n\n1.1.1\tДобавить или изменить категорию качества\tKUL.CREAT.QUAL.01\n\n1.1.2\tУстановить особый порядок резервирования\tKUL.CREAT.QUAL.02\n\n1.1.3\tАктуальная категория качества KUL.CREAT.QUAL.03\n\n1.2\tДобавление или изменение данных по МСФО KUL.CREAT..01\n\n1.3\tИзменение метрик клиента (рейтинг клиента или резерва, финансовое положение) KUL.CREAT..02\n\n1.4\tИзменение клиента на неработающем продукте\tKUL.CREAT..03\n\n1.5\tКорректировка регламента и режима кредитования\tKUL.CREAT..04\n\n1.6\tОшибка при передаче договора ПСКО\tKUL.CREAT.BROAD.00\n\n1.6.1\tСумма договора в КЮЛ превышает сумму продукта в КФЮЛ\tKUL.CREAT.BROAD.01\n\n1.6.2\tКорневой идентификатор продукта не является уникальным в скоупе договоров ППРБ\tKUL.CREAT.BROAD.02\n\n1.7\tСоглашение на безакцептное списание\n\n\tKUL.CREAT..05\n\n1.7.1\tОшибки при подписании сделки \tKUL.CREAT.SIGN.00\n\n1.7.2\tАннулирован\tKUL.CREAT.SIGN.01\n\n1.7.3\tИсполнен с замечаниями \tKUL.CREAT.SIGN.02\n\n2\tВыдача кредитных средств\tKUL.ISS...00\n\n2.1\tТребуется подтверждение сервиса сотрудником ПСКО\tKUL.ISS...01\n\n2.2\tСервис выдачи аннулирован\tKUL.ISS...02\n\n2.3\tВопросы по электронной выдаче\tKUL.ISS.ELEC..00\n\n2.3.1\tНекорректная максимальная совокупная ссудная задолженность (BC_CAP)\tKUL.ISS.ELEC.BC.00\n\n2.3.1.1\tНе обновлены данные в Сбербанке (BC_Cap)\tKUL.ISS.ELEC.BC.01\n\n2.3.1.2\tНе обновлены данные из других банков (BC_Cap)\tKUL.ISS.ELEC.BC.02\n\n2.3.1.3\tОшибка «При обновлении договоров из ЕКС возникла ошибка. Невозможно сформировать вывод»\tKUL.ISS.ELEC.BC.03\n\n2.3.2\tОшибки при обработке результатов проверки\tKUL.ISS.ELEC.ERR.00\n\n2.3.2.1\tПо траншу не установлена процентная ставка\tKUL.ISS.ELEC.ERR.01\n\n2.3.2.2\tЕсть картотека или стоп-лист\tKUL.ISS.ELEC.ERR.02\n\n2.3.3\tДенежные средства остались на кредитном реестре\tKUL.ISS.ELEC.REG.00\n\n2.3.3.1\tПосле выдачи денежные средства остались на кредитном реестре\tKUL.ISS.ELEC.REG.01\n\n2.3.3.2\tПлатежи за счет кредитных денежных средств «зависли» и не обрабатываются на кредитном реестре\tKUL.ISS.ELEC.REG.02\n\n2.3.4\tНе проводятся платежи\tKUL.ISS.ELEC.PAY.00\n\n2.3.4.1\tСформировалась задача «Результат проведения маркированных платежей»\tKUL.ISS.ELEC.PAY.01\n\n2.3.4.2\tНе проводятся платежи после проведения электронной выдачи и зачислении денежных средств на кредитный реестр\tKUL.ISS.ELEC.PAY.03\n\n2.3.5\tОшибки при проведении операций из-за некорректного доступного остатка по счету\tKUL.ISS.ELEC..01\n\n2.3.6\tЗависание при работе с ЭКД\tKUL.ISS.ELEC..02\n\n2.3.7\tПроведение клиентом выдачи денежных средств после 19:30 часов\tKUL.ISS.ELEC..03\n\n2.4\tРабота с договором\tKUL.CONT..00\n\n2.4.1\tДобавление или изменение доп. свойства, идентификатора продукта в КФЮЛ, примечания по договору\tKUL.CONT.PROD.00\n\n2.4.1.1\tДобавление или изменение доп. свойства, ID продукта в КФЮЛ, примечания по договору\tKUL.CONT.PROD.01\n\n2.4.1.2\tДобавление или изменение доп. свойства по программам субсидирования\tKUL.CONT.PROD.02\n\n2.4.2\tДополнительное соглашение или корректировка\tKUL.CONT.AGR.00\n\n2.4.2.1\tВыполнение сервиса без подтверждения другим сотрудником\tKUL.CONT.AGR.01\n\n2.4.2.2\tДобавление или корректировка программы субсидирования\tKUL.CONT.AGR.02\n\n2.4.2.3\tДобавление данных по МСФО или модификации \tKUL.CONT.AGR.03\n\n2.4.3\tКорректировка категории качества, качества обслуживания долга, изменение метрик клиента\tKUL.CONT.ADJ.00\n\n2.4.3.1\tКорректировка категории качества, качества обслуживания долга\tKUL.CONT.ADJ.01\n\n2.4.3.2\tИзменение метрик клиента\n\n\tKUL.CONT.ADJ.02\n\n2.4.4\tРабота с КОД. Проблемы с подписанием ЭП\tKUL.CONT.SIGN.00\n\n2.4.4.1\tУдалить документ\tKUL.CONT.SIGN.01\n\n2.4.4.2\tОшибка: «Сервис для работы с ЭЦП недоступен»\tKUL.CONT.SIGN.02\n\n2.4.4.3\tНа загруженном документе нет подписи или подписание завершено ошибкой\n\n\tKUL.CONT.SIGN.03\n\n2.4.4.4\tРабота с соглашением на безакцептное списание \tKUL.CONT..01\n\n2.4.5\tРабота с договором страхования\tKUL.CONT.INS.00\n\n2.4.5.1\tСмена статуса «Закрыт» для договора страхования\tKUL.CONT.INS.01\n\n2.4.5.2\tПропала связь между договором страхования и договором обеспечения\tKUL.CONT.INS.02\n\n\t\t\n\n2.4.6\tСвязи с кредитной сделкой, договорами обеспечения \tKUL.CONT.COM.00\n\n2.4.6.1\tДобавление или удаление связи с кредитной сделкой\tKUL.CONT.COM.01\n\n2.4.6.2\tДобавить связь между кредитным договором и договором обеспечения\tKUL.CONT.COM.02\n\n2.4.6.3\tУдалить связь между кредитным договором и договором обеспечения\tKUL.CONT.COM.03\n\n2.4.6.4\tУдаление договора\tKUL.CONT..02\n\n2.5\tРасчет лимита овердрафта или средневзвешенной ставки\tKUL.CALC..00\n\n2.5.1\tРасчет лимита овердрафта\tKUL.CALC.OVER.00\n\n2.5.1.1\tОшибка «Нет актуального расчета»\tKUL.CALC.OVER.01\n\n2.5.1.2\tНе выгружаются документы и проводки по расчету в файл Excel\tKUL.CALC.OVER.02\n\n2.5.1.3\tИзменить привязку расчета к овердрафту\tKUL.CALC.OVER.03\n\n2.5.1.4\tНе активны поля «Максимальная доля контрагента» и «Максимальный размер доли от кредитового оборота»\tKUL.CALC.OVER.04\n\n2.5.1.5\tСтатус расчета «Ожидает подтверждения»\tKUL.CALC.OVER.05\n\n2.5.1.6\tОтсутствует рейтинг для клиента\tKUL.CALC.OVER.06\n\n2.5.1.7\tИсполнение сервиса должно быть продолжено пользователем с другой ролью\tKUL.CALC.OVER.07\n\n2.5.2\tРасчет средневзвешенной ставки\tKUL.CALC..01\n\n2.6\tФинансовые сервисы\tKUL.FIN..00\n\n2.6.1\tУрегулировать СОЛ\tKUL.FIN..01\n\n2.6.2\tУрегулировать лимит\tKUL.FIN..02\n\n2.6.3\tВыполнить учет процентов, комиссий, субсидий\tKUL.FIN..03\n\n2.6.4\tИзменить размер процентной ставки\tKUL.FIN..04\n\n2.6.5\tЗакрыть договор\tKUL.FIN..05\n\n2.6.6\tВыполнить вынос на просрочку\tKUL.FIN..06\n\n2.6.7\tВыполнить раскрытие банковской гарантии\tKUL.FIN..07\n\n2.6.8\tПри выставлении платежного требования (ПТ) не отображаются несквитованные плановые операции в архивной дате\tKUL.FIN..08\n\n2.6.9\tРаспределить документ\tKUL.FIN.DIST.00\n\n2.6.9.1\tНайти платежи для распределения в погашение задолженности\tKUL.FIN.DIST.01\n\n2.6.9.2\tПоставить платежный документ на возврат\tKUL.FIN.DIST.02\n\n2.6.9.3\tПровести погашение на счет без привязки к продукту (распределение на транзитный счет)\tKUL.FIN.DIST.03\n\n2.6.9.4\tВыполнить досрочное распределение платежа с  плановой датой больше 10 дней в будущем\tKUL.FIN.DIST.04\n\n2.6.9.5\tВыполнить отправку документа из источника «РЦ Банк России» на обработку в ЕКС\tKUL.FIN.DIST.05\n\n2.6.9.6\tВыполнить отправку документа из источника «РКО Списание» на обработку в ЕКС\tKUL.FIN.DIST.06\n\n2.6.9.7\tВыполнить аннулирование погашения на договоре\tKUL.FIN.DIST.07\n\n2.6.9.8\tОплата документов из картотеки, если договор не нормализован\tKUL.FIN.DIST.08\n\n2.7\tОтчеты. Формирование уведомлений\tKUL.REPO.00\n\n2.7.1\tСформировать уведомление клиенту\tKUL.REPO.01\n\n2.7.2\tКлиент не видит уведомление о предстоящих платежах в СББОЛ\tKUL.REPO.02\n\n2.7.3\tКлиент не может просмотреть уведомление по кредиту в ССБОЛ\tKUL.REPO.03\n\n2.7.4\tСформировать отчет \tKUL.REPO.04\n\n2.7.5\tОтсутствует роль для выгрузки отчетов - КЮЛ. Роль для выгрузки данных категории К1/К2\tKUL.REPO.05\n\n2.7.6\tПри формировании отчета в списке доступных шаблонов при формировании отчета отсутствует необходимый отчет\tKUL.REPO.06\n\n2.7.7\tПостроить предстоящие плановые операции в разрезе ТБ/даты/клиента\tKUL.REPO.07\n\n2.8\tФоновые процессы бэк-офиса\tKUL.BACK.00\n\n2.8.1\tГрупповой учет процентов, комиссий и субсидий\tKUL.BACK.01\n\n2.8.2\tЗакрытие сделки\tKUL.BACK.02\n\n2.8.3\tДоустановка ставки без служебной записки\tKUL.BACK.03\n\n2.8.4\tУрегулирование СОЛ\tKUL.BACK.04\n\n2.9\tОбщие вопросы по работе в АС\tKUL.OTH.00\n\n2.9.1\tАннулировать сервис\tKUL.OTH.01\n\n2.9.2\tДоговор не нормализован\tKUL.OTH.02\n\n2.9.3\tОстатки по задолженностям\tKUL.OTH.03\n\n2.9.4\tПередать мастер-систему из АС КЮЛ в АС ЕКС\tKUL.OTH.04\n\n2.9.5\tПосмотреть тип ставки на договоре\tKUL.OTH.05\n\n2.9.6\tСохранить фильтр\tKUL.OTH.06\n\n\n######\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nРодительская категория отличается от вопроса наличием 00 на конце кода, например:\n\n\&quot;Посмотреть тип ставки на договоре [KUL.OTH.05]\&quot; - родительская категория [KUL.OTH.00]\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;Проблема с уведомлениями в отчетах\&quot;\n\nОтвет: \&quot;[KUL.REPO.00]\&quot;\n\nТВОЙ ОТВЕТ ДОЛЖЕН БЫТЬ КОДОМ РЕШЕНИЯ\nна вопросы не относящиеся к АС КЮЛ, верни только строку \&quot;error\&quot; \nне выдумывай код решения, верни только тот который есть в списке выше!\n\nиспользуй историю диалога:\n{context}\nответь на вопрос\n{question}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;question&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;question&quot;,&#xa;                &quot;display_name&quot;: &quot;question&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;,&#xa;                &quot;question&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-CRUzX&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 431,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 340.61941891755305,&#xa;          &quot;y&quot;: 417.04965303089415&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 751.8984507374021,&#xa;          &quot;y&quot;: 254.0961677000643&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;dragging&quot;: false,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 751.8984507374021,&#xa;          &quot;y&quot;: 254.0961677000643&#xa;        }&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 765.0201629087758,&#xa;          &quot;y&quot;: 969.7007414877796&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0.1,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 765.0201629087758,&#xa;          &quot;y&quot;: 969.7007414877796&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 358.6582361327437,&#xa;          &quot;y&quot;: 1103.1515965557085&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС Пегас (Простые сделки плюс)\n2. АС ФДК (финасовые документы клиента)\n3. АС ФОК (финансовая отчетность клиента)\n4. АС УФА (углублённый финансовый анализ)\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные понятия и термины, применяемые в работе в АС Пегас, ФДК, ФОК, ФА:\n\nАндеррайтер (ар), УПР и ФПР (уровень и формат принятия решения), оборонно промышленный комплекс (ОПК), работа со сделками, переназначение сделок, расчет УПР, работа с лимитами, проблемы с переходами по вкладкам, АС Сенат, работа с продуктами в сделках, оформление сделок с участием министерства сельского хозяйства (МСХ), работа с LGD, ДРГС, СКМ(ОПК), ОФР, Ошибка «Кейс залочен», сделка с категорией «Вторая линия защиты», Проблема с отправкой в службы и подразделения , Ошибка при отправке сделки и т.д.\n\nСтруктура сокращена для удобства, например \n\n\&quot;1.3 на другой территориальный банк [PS+.REA.03]\&quot; равно \&quot;Пегас.Проблема с переназначением сделки.на другой территориальный банк\&quot;\n\n#######\n\n1\tКоманда сделки (переназначение)\t[PS+.REA.00]\n1.1\tВ своем подразделении\t[PS+.REA.01]\n1.2\tНа центральный аппарат\t[PS+.REA.02]\n1.3\tНа другой территориальный банк \t[PS+.REA.03]\n1.4\tНа сотрудника ДРГС, СКМ(ОПК), ОФР \t[PS+.REA.04]\n2\tУПР и ФПР, LGD, Fraud-риск, ESG, ФП УФА\t[PS+.CALC....00]\n2.1\tНеактивны кнопки, задачи открываются в новом окне или ошибка: «Error There has been an issue»\t[PS+.CALC....01]\n2.2\tГде найти код подразделения в CRM для оформления доступа в АС Argus?\t[PS+.CALC....02]\n2.3\tУПР и ФПР\t[PS+.CALC.UPR...00]\n2.3.1\tОшибка при расчете или внесении вручную УПР и ФПР\t[PS+.CALC.UPR.ERR..00]\n2.3.1.1\tНе удается определить основной рейтинг заемщика\t[PS+.CALC.UPR.ERR..01]\n2.3.1.2\tНе найден совокупный лимит\t[PS+.CALC.UPR.ERR..02]\n2.3.1.3\tОтсутствуют данные о запросе нового или корректировке действующего лимита ОФР\t[PS+.CALC.UPR.ERR..03]\n2.3.1.4\tУ главного КМ отсутствует доступ в ФП Риски\t[PS+.CALC.UPR.ERR..04]\n2.3.1.5\tОтсутствует заведенное максимальное ограничение (МО) или запрошенная сумма превышает установленное МО\t[PS+.CALC.UPR.ERR..05]\n2.3.1.6\tПри ручном вводе ошибка: «Что-то пошло не так. Обратитесь к системному администратору»\t[PS+.CALC.UPR.ERR..06]\n2.3.1.7\tРейтинг не найден в динамической матрице\t[PS+.CALC.UPR.ERR..07]\n2.3.1.8\tРасчёт УПР и ФПР невозможен. Рейтинг заёмщика не был рассчитан\t[PS+.CALC.UPR.ERR..08]\n2.3.1.9\tВ сделке с категорией «Вторая линия защиты»\t[PS+.CALC.UPR.ERR.2LP.00]\n2.3.1.9.1\tНесоответствие комбинации риск-сегмента заемщика и продуктов в сделке\t[PS+.CALC.UPR.ERR.2LP.01]\n2.3.1.9.2\tОтсутствуют полномочия в рамках сделок с категорией «Вторая линия защиты»\t[PS+.CALC.UPR.ERR.2LP.02]\n2.3.1.9.3\tЗначение CalculationId, полученное из МАРС.УПР, отсутствует или найдено 2 открытых кейса в АС Аргус\t[PS+.CALC.UPR.ERR.2LP.03]\n2.3.1.9.4\tРассчитанный на основе КРЗ УПР не позволяет рассматривать сделку, возникает ошибка «Время ожидания от МАРС.УПР истекло»\t[PS+.CALC.UPR.ERR.2LP.04]\n2.3.1.9.5\tРасчет невозможен по причине недопустимой зоны Fraud-риска у заемщика\t[PS+.CALC.UPR.ERR.2LP.05]\n2.3.2\tНеверное значение УПР и ФПР\t[PS+.CALC.UPR.WRO..00]\n2.3.2.1\tРезультат НЭР по сделке\t[PS+.CALC.UPR.WRO..01]\n2.3.2.2\tПодразделение клиентского менеджера в заявке на доступ к АС Аргус\t[PS+.CALC.UPR.WRO..02]\n2.3.2.3\tУполномоченное подразделение в параметрах лимита\t[PS+.CALC.UPR.WRO..03]\n2.3.2.4\tЛимитная позиция заемщика/ГСЗ в параметрах лимита\t[PS+.CALC.UPR.WRO..04]\n2.3.2.5\tПрофиль риска подразделения\t[PS+.CALC.UPR.WRO..05]\n2.3.2.6\tДифференцированная матрица полномочий\t[PS+.CALC.UPR.WRO..06]\n2.3.2.7\tАвтоматическое добавление фактора нестандартности 22.ОФР и 28.ОФР\t[PS+.CALC.UPR.WRO..07]\n2.3.2.8\tСнижение ФПР до 4 глаз с НЭР\t[PS+.CALC.UPR.WRO..08]\n2.3.2.9\tПочему УПР и ФПР в сделке повысился до КК ЦА?\t[PS+.CALC.UPR.WRO..09]\n2.3.2.10\tНестандартности по сделке\t[PS+.CALC.UPR.WRO.NON.00]\n2.3.2.10.1\tПочему нестандартности не учитываются?\t[PS+.CALC.UPR.WRO.NON.01]\n2.3.2.10.2\tПочему УПР и ФПР выше указанных нестандартностей?\t[PS+.CALC.UPR.WRO.NON.02]\n2.3.3\tНеверное значение минимальной категории андеррайтера (МКА)\t[PS+.CALC.UPR...01]\n2.3.4\tПропали результаты расчета УПР и ФПР\t[PS+.CALC.UPR...02]\n2.3.5\tПересчет УПР и ФПР после направления запроса в АС Сенат\t[PS+.CALC.UPR...03]\n3\tLGD и СКР\t[PS+.CALC.LGD..00]\n3.1\tСтатус LGD «в ожидании утверждения»\t[PS+.CALC.LGD..01]\n3.2\tОшибка «Кейс залочен»\t[PS+.CALC.LGD..02]\n3.3\tКогда не требуется утверждение андеррайтером\t[PS+.CALC.LGD..03]\n3.4\tLGD рассчитан без оценочного резерва \t[PS+.CALC.LGD..04]\n3.5\tОшибка «В учетной системе отсутствует информация по рейтингам для следующих участников: Заемщик» \t[PS+.CALC.LGD..05]\n3.6\tПроблема с автоутверждением LGD в сделке с категорией «Вторая линия защиты» \t[PS+.CALC.LGD..06]\n3.7\tОшибка: «Не пришло ни одного продукта заёмщика»\t[PS+.CALC.LGD..07]\n3.8\tНекорректная зона Fraud-риска\t[PS+.CALC.LGD..08]\n3.9\tНет кнопки расчёта LGD\t[PS+.CALC.LGD..09]\n3.10\tESG рейтинг возможно направить на утверждение\t[PS+.CALC.LGD..10]\n3.11\tКак рассчитать СКР в сделках по утверждению Индивидуального решения\t[PS+.CALC.LGD..11]\n3.12\tОбеспечение\t[PS+.CALC.LGD.PROV.00]\n3.12.1\tНе подтягивается обеспечение в калькулятор при расчете LGD\t[PS+.CALC.LGD.PROV.01]\n3.12.2\tНедостаточно прав для привязки объектов обеспечения к продукту\t[PS+.CALC.LGD.PROV.02]\n3.12.3\tНет прав для работы с клиентом\t[PS+.CALC.LGD.PROV.03]\n4\tЗапросы в службы и НЭР\t[PS+.SERV...00]\n4.1\tПроблема отправки запроса в подразделение безопасности\t[PS+.SERV.PB..00]\n4.1.1\tУ участника нет связанных лиц\t[PS+.SERV.PB..01]\n4.1.2\tНет кнопки для отправки запроса\t[PS+.SERV.PB..02]\n4.1.3\tНе могу отменить запрос в ПБ\t[PS+.SERV.PB..03]\n4.2\tНезависимая экспертиза рисков\t[PS+.SERV.NER..00]\n4.2.1\tОтсутствует кнопка для отправки запроса на НЭР\t[PS+.SERV.NER..01]\n4.2.2\tУ андеррайтера не корректно отображается продуктовая группа (ПГ1, ПГ2)\t[PS+.SERV.NER..02]\n4.2.3\tНе могу пропустить НЭР в сделке\t[PS+.SERV.NER..03]\n4.2.4\tОшибка при отправке сделки на НЭР при формате принятия решения КПА\t[PS+.SERV.NER..04]\n4.2.5\tВ расчете УПР и ФПР в поле «Требуется НЭР» стоит значение «НЕТ», при этом требуется отправить сделку на НЭР\t[PS+.SERV.NER..05]\n4.2.6\tКак распределить НЭР на конкретного андеррайтера?\t[PS+.SERV.NER..06]\n4.2.7\tАндеррайтер не может завершить задачу\t[PS+.SERV.NER..07]\n4.3\tПортфельный управляющий (ПУ)\t[PS+.SERV.CFPU..00]\n4.3.1\tОтсутствует кнопка «Проверить сделку на соответствие заказу ПУ»\t[PS+.SERV.CFPU..01]\n4.3.2\tКак закрыть сделку без согласования с ПУ?\t[PS+.SERV.CFPU..02]\n4.3.3\tМакроотрасль заемщика не входит в пилот\t[PS+.SERV.CFPU..03]\n4.3.4\tНужно отозвать согласование с ПУ\t[PS+.SERV.CFPU..04]\n4.3.5\tНе удалось провести проверку, так как в АС Cash Flow не введены необходимые показатели по сделке\t[PS+.SERV.CFPU..05]\n4.3.6\tПривязать CF-модель к сделке\t[PS+.SERV.CFPU..06]\n4.3.7\tРезультаты согласования сделки ПУ не были получены из системы Управления моделями CF в заданный интервал времени\t[PS+.SERV.CFPU..07]\n4.3.8\tКак скорректировать параметры портфельного заказа, если в окне сверки отсутствует кнопка «Перейти в CF»?\t[PS+.SERV.CFPU..08]\n4.4\tПроблемы с запросом в МСХ\t[PS+.SERV.UVSK..00]\n4.4.1\tНет доступных продуктов для выбора при формировании запроса в МСХ \t[PS+.SERV.UVSK..01]\n4.4.2\tОтсутствует кнопка «Сформировать запрос в МСХ»\t[PS+.SERV.UVSK..02]\n4.4.3\tПо выбранному льготному продукту не был завершен процесс согласования субсидий\t[PS+.SERV.UVSK..03]\n4.4.4\tНеобходимо отклонить сделку, но по продукту получено согласование с федеральным МСХ\t[PS+.SERV.UVSK..04]\n4.4.5\tОтсутствует кнопка «снять признак «Льготная программа АПК»\t[PS+.SERV.UVSK..05]\n4.4.6\tКак отправить в МСХ сделку по выдаче траншей в рамках генерального соглашения?\t[PS+.SERV.UVSK..06]\n4.4.7\tОшибка при отправке запроса на согласование\t[PS+.SERV.UVSK..07]\n4.4.8\tВ каких случаях можно удалить признак льготной программы АПК?\t[PS+.SERV.UVSK..08]\n4.5\tЮридическое подразделение (ЮП)\t[PS+.SERV.URP..00]\n5\tРедактирование параметров сделки\t[PS+.PROC..00]\n5.1\tКатегория сделки\t[PS+.PROC.CATE.00]\n5.1.1\tКак изменить категорию\t[PS+.PROC.CATE.01]\n5.1.2\tРедактирование категории невозможно\t[PS+.PROC.CATE.02]\n5.1.3\tОшибка при добавлении категории «Вторая линия защиты»\t[PS+.PROC.CATE.03]\n5.1.4\tНевозможно добавить к  категории «Технические изменения» другую категорию\t[PS+.PROC.CATE.04]\n5.2\tМетод продаж\t[PS+.PROC..01]\n5.3\tПрефикс\t[PS+.PROC..02]\n5.4\tВернуть закрытую сделку в работу\t[PS+.PROC..03]\n5.5\tИзменить заемщика в сделке\t[PS+.PROC..04]\n5.6\tСделка не обновляется\t[PS+.PROC..05]\n5.7\tКак указать префикс 2ЛЗ?\t[PS+.PROC..06]\n5.8\tНевозможно редактировать детали сделки. Ошибка «Не найдены данные, соответствующие запросу»\t[PS+.PROC..07]\n6\tПродукт и лимит\t[PS+.LIM.PROD...00]\n6.1\tЛимиты\t[PS+.LIM..00]\n6.1.1\tЛимит заблокирован\t[PS+.LIM..01]\n6.1.2\tПропал или исчез лимит\t[PS+.LIM..02]\n6.1.3\tНет возможности запросить лимит в сделке\t[PS+.LIM..03]\n6.1.4\tНет возможности отказаться от лимита в сделке\t[PS+.LIM..04]\n6.1.5\tПроблема с суммой использования лимита в статусе «На закрытие»\t[PS+.LIM..05]\n6.1.6\t«Запрещено» при входе в раздел «Лимиты»\t[PS+.LIM..06]\n6.1.7\tНе могу закрыть лимит (в том числе, лимит ОФР)\t[PS+.LIM..07]\n6.2\tПродукты\t[PS+.PROD..00]\n6.2.1\tНе могу привязать лимит к продукту\t[PS+.PROD..01]\n6.2.2\tПо выбранному льготному продукту не был завершен процесс согласования субсидий\t[PS+.PROD..02]\n6.2.3\tНе могу добавить продукт\t[PS+.PROD.ADD.00]\n6.2.3.1\tНовый продукт\t[PS+.PROD.ADD.01]\n6.2.3.2\tПродукт для изменения условий\t[PS+.PROD.ADD.02]\n6.2.3.3\tПродукт для изменения с режимом кредитования «Транш/Договор в рамках ГС»\t[PS+.PROD.ADD.03]\n6.2.3.4\tПродукт для изменения условий, потому что не получено согласование c МСХ\t[PS+.PROD.ADD.04]\n6.2.3.5\tПродукт ММБ для изменения условий\t[PS+.PROD.ADD.05]\n6.2.4\tНе могу изменить сумму продукта в сделке\t[PS+.PROD..03]\n6.2.5\tНе могу выбрать консолидированную группу (КГ) в качестве КНР (конечный носитель риска)\t[PS+.PROD..04]\n6.2.6\tПочему закрылся продукт?\t[PS+.PROD..05]\n6.2.7\tКак продлить срок действия решения?\t[PS+.PROD..06]\n6.2.8\tНеактивна кнопка «Продукты»\t[PS+.PROD..07]\n6.2.9\tОшибка: «Срок продукта превышает срок лимита»\t[PS+.PROD..08]\n7\tЭКД, СЗКП и финансовый анализ\t[PS+.ECM.SZKP..00]\n7.1\tЭлектронное кредитное досье (ЭКД)\t[PS+.ECM.00]\n7.1.1\tНе могу прикрепить к документу подпись (или ЭЦП)\t[PS+.ECM.01]\n7.1.2\tОшибки при входе в ЭКД: «Нет доступа к АС ЕФС» или «Доступ к действию запрещен»\t[PS+.ECM.02]\n7.1.3\tВ ЭКД отсутствуют папки или документы \t[PS+.ECM.03]\n7.1.4\tОтсутствуют документы в папке «внешний документооборот»\t[PS+.ECM.04]\n7.2\tСводное заключение КП(СЗКП)\t[PS+.SZKP.00]\n7.2.1\tНет кнопки «Сформировать сводное заключение КП» \t[PS+.SZKP.01]\n7.2.2\tОшибка при входе «HTTP - Status 400»\t[PS+.SZKP.02]\n7.2.3\tОшибка выгрузки заключения. Сделка с субъектом муниципального образования (СМО)\t[PS+.SZKP.03]\n7.2.4\tПри формировании сводного заключения КП указан некорректный ОКК, Бизнес-сегмент, Рейтинг\t[PS+.SZKP.04]\n7.2.5\tНе отображаются финансовые показатели и финансовый анализ\t[PS+.SZKP.05]\n7.2.6\tНе отображается проект\t[PS+.SZKP.06]\n8\tПринятие решения на КО (Сенат) и подготовка презентации\t[PS+.CO...00]\n8.1\tПринятие решения на КО (Сенат)\t[PS+.CO.SEN..00]\n8.1.1\tОтсутствуют полномочия у голосующего кредитующего подразделения\t[PS+.CO.SEN..01]\n8.1.2\tНевозможно добавить уполномоченного подписанта КП\t[PS+.CO.SEN..02]\n8.1.3\tКак направить доработанные материалы?\t[PS+.CO.SEN..03]\n8.1.4\tИзменить подписантов\t[PS+.CO.SEN..04]\n8.1.5\tКак вернуться на повторный детальный анализ для пересчета УПР после направления запроса в АС Сенат \t[PS+.CO.SEN..05]\n8.1.6\tВо время досылки открылся серый экран (Risk-DecisionMaking-Work-Consider)\t[PS+.CO.SEN..06]\n8.1.7\tДругая проблема\t[PS+.CO.SEN.OTH.00]\n8.1.7.1\tНа вводе данных ошибка «Запрещено»\t[PS+.CO.SEN.OTH.01]\n8.1.7.2\tIssue creating error: The permitted format for decision project is docx only\t[PS+.CO.SEN.OTH.02]\n8.1.7.3\tНе найден ни один инициатор\t[PS+.CO.SEN.OTH.03]\n8.1.7.4\tInternal server error\t[PS+.CO.SEN.OTH.04]\n8.2\tПрезентация на кредитный комитет\t[PS+.CO.PRES..00]\n8.2.1\tНе отображается статус по кредитной политике\t[PS+.CO.PRES..01]\n8.2.2\tНе выгружается слайд «Финансы» по отчетности МСФО\t[PS+.CO.PRES..02]\n8.2.3\tНе формируется слайд «Анализ оборотного капитала»\t[PS+.CO.PRES..03]\n8.2.4\tОтсутствует поле для отражения позиции ЦКРР на слайде «Отклонения»\t[PS+.CO.PRES..04]\n8.2.5\tТребуется ли отражать позицию ЦКРР на слайде «Ключевые риски по сделке», если заключение положительное?\t[PS+.CO.PRES..05]\n8.2.6\tВозможно ли изменить порядок отображения слайдов в презентации?\t[PS+.CO.PRES..06]\n8.2.7\tКоличество периодов в CashFlow превышает максимально допустимое количество столбцов на слайде «Прогноз денежных потоков Заёмщика»\t[PS+.CO.PRES..07]\n9\tДругая проблема\t[PS+.OTH..00]\n9.1\tОткрывается «К7М» вместо «Простые сделки плюс»\t[PS+.OTH..01]\n9.2\tНе могу завести сделку по ПИФ\t[PS+.OTH..02]\n9.3\tНе активный признак Evergreen СМО\t[PS+.OTH..03]\n9.4\tКак вернуться на повторный детальный анализ\t[PS+.OTH..04]\n9.5\tНе могу добавить участника - физическое лицо\t[PS+.OTH..05]\n9.6\tКак закрыть сделку в АС Пегас?\t[PS+.OTH..06]\n9.7\tПроблемные активы\t[PS+.OTH.PROB.00]\n9.7.1\tНе могу отправить сделку на НЭР\t[PS+.OTH.PROB.01]\n9.7.2\tКак завершить сделку в Пегас?\t[PS+.OTH.PROB.02]\n9.7.3\tОшибка при нажатии на кнопку «Продолжить работу в АС УВЗ»\t[PS+.OTH.PROB.03]\n9.7.4\tНе назначается на андеррайтера риск-сегмент по клиенту красной или черной зоны\t[PS+.OTH.PROB.04]\n10\tАС ФОК/ФКД\t[PS+.FOK..00]\n10.1\tНевозможно создать или утвердить документ\t[PS+.FOK.DOC.00]\n10.1.1\tДокумент заблокирован пользователем\t[PS+.FOK.DOC.01]\n10.1.2\tДокумент заблокирован FOK_AUTOBLOCK_USER\t[PS+.FOK.DOC.02]\n10.1.3\tДокумент находится в статусе «Сохранение», «Проверка», «Ошибка»\t[PS+.FOK.DOC.03]\n10.1.4\tПредупреждение о запущенном процессе фонового сохранения\t[PS+.FOK.DOC.04]\n10.2\tВозникла ошибка сервера «HTTP ERROR 500»\t[PS+.FOK.ERR.00]\n10.3\tРеорганизация (копирование данных из одной карточки в другую)\t[PS+.FOK.REOR.00]\n10.3.1\tСмена организационно-правовой формы контрагента (например, ООО в АО)\t[PS+.FOK.REOR.01]\n10.3.2\tРеорганизация в форме присоединения, слияния, разделения и т.д.\t[PS+.FOK.REOR.02]\n10.4\tЗамедление или зависание системы\t[PS+.FOK.SLOW.00]\n10.5\tОшибки загрузки документа в формы ФП ФДК\t[PS+.FOK.LOAD.00]\n10.5.1\tИндивидуальная загрузка через кнопку «Импорт данных из Excel» в самом документе\t[PS+.FOK.LOAD.01]\n10.5.2\tМножественная загрузка через кнопку «Excel» в левом нижнем углу вкладки «Финансовые документы клиента»\t[PS+.FOK.LOAD.02]\n10.6\tОшибки и вопросы при заполнении формы EBITDA\t[PS+.FOK.EBIDA.00]\n10.6.1\tОшибка: EBITDA «Амортизация» в квартальном формате != EBITDA «Амортизация» в годовом формате\t[PS+.FOK.EBIDA.01]\n10.6.2\tОшибка в форме Мониторинг: Значение EBITDA РСБУ в форме финансового анализа отличается от EBITDA в форме «EBITDA»\t[PS+.FOK.EBIDA.02]\n10.6.3\tПорядок расчета прочих операционных расходов в форме\t[PS+.FOK.EBIDA.03]\n11\tФинансовый анализ (ФП УФА)\t[PS+.FA..00]\n11.1\tПолучение доступа к сервису УФА\t[PS+.FA.ACC.00]\n11.1.1\tОтсутствует доступ к АС АСК\t[PS+.FA.ACC.01]\n11.1.2\tОтсутствует доступ к карточке клиента ОПК и/или из санкционного списка\t[PS+.FA.ACC.02]\n11.1.3\tОтсутствует закрепление за клиентом в АС АСК\t[PS+.FA.ACC.03]\n11.2\tНедоступно создание и редактирование УФА\t[PS+.FA..01]\n11.3\tФормирование периметра анализа, добавление компонентов\t[PS+.FA.COMP.00]\n11.3.1\tГруппа компаний, в которую входит заемщик\t[PS+.FA.COMP.01]\n11.3.2\tУчастники группы\t[PS+.FA.COMP.02]\n11.3.3\tУчастники сделки (контрагенты)\t[PS+.FA.COMP.03]\n11.4\tФормирование автовывода и утверждение финансового состояния\t[PS+.FA.AUTO.00]\n11.4.1\tУсловия формирования автовывода\t[PS+.FA.AUTO.01]\n11.4.2\t«Неприменимо» в автовыводе финансового состояния, рассчитанного моделью\t[PS+.FA.AUTO.02]\n11.4.3\t«Недостаточно данных» в автовыводе финансового состояния, рассчитанного моделью\t[PS+.FA.AUTO.03]\n11.4.4\tКорректировка автовывода\t[PS+.FA.AUTO.04]\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;Проблема с УПР\&quot;\n\nОтвет: \&quot;[PS+.CALC.UPR...00]\&quot;\n\nОтвет верни в виде кода решения\n\nна вопросы не относящиеся к АС Пегас, верни только строку \&quot;error\&quot;\nне выдумывай код решения, верни только тот который есть в списке выше!\n\nиспользуй историю диалога:\n{context}\nответь на вопрос:\n{question}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;question&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;question&quot;,&#xa;                &quot;display_name&quot;: &quot;question&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;,&#xa;                &quot;question&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-u0GwF&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 431,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 358.6582361327437,&#xa;          &quot;y&quot;: 1103.1515965557085&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 829.438005936594,&#xa;          &quot;y&quot;: 1706.4965604547128&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0.1,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 829.438005936594,&#xa;          &quot;y&quot;: 1706.4965604547128&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-23NdU&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 330.2628590076954,&#xa;          &quot;y&quot;: 1888.3947703478534&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС CashFlow\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные категории проблем в АС CashFlow с указанием структуры навыка и комментариями:\n\n#######\n1\tСоздание карточки модели\tCF.CREAT...00\n1.1\tОшибка: «Невозможно сохранить изменения без указания макроотрасли и подотрасли клиента»\tCF.CREAT...01\n1.2\tПоиск клиента и создание карточки модели\tCF.CREAT...02\n2\tРабота с моделью\tCF.WORK...00\n2.1\tФормируется неправильный риск-профиль в модели\tCF.WORK...01\n2.2\tДобавить модель в карточку \tCF.WORK...02\n2.3\tНе могу найти нужную модель в списке \tCF.WORK...03\n2.4\tУ риск-менеджера нет кнопки «Утвердить»\tCF.WORK...04\n2.5\tМодель не перешла на мониторинг автоматически\tCF.WORK...05\n2.6\tНе происходит привязка сделки к  новой версии модели \tCF.WORK...06\n2.7\tНе создается версия модели при обновлении в рамках простой сделки \tCF.WORK...07\n2.8\tНужно обновить сценарий (inputs) в модели\tCF.WORK...08\n3\tФормирование шаблона модели \tCF.FORM...00\n3.1\tКак изменить количество исторических или прогнозных периодов?\tCF.FORM...01\n3.2\tРасхождение суммы баланса в модели\tCF.FORM...02\n3.3\tНе изменяются результирующие показатели при заполнении модели \tCF.FORM...03\n3.4\tВ историческом периоде на листе «ОПУ» в модели значения в строке «Амортизация» отражаются с противоположным знаком\tCF.FORM...04\n3.5\tОбразовываются курсовые разницы без операций с валютой\tCF.FORM...05\n3.6\tРазмеры показателей DSCR, ISCR, ICR более 1000\tCF.FORM...06\n4\tML-модели\tCF.ML...00\n4.1\tПостроение модели        \tCF.ML.CONST..00\n4.1.1\tМожно ли повторно утверждать модель ДДС с применением ML-модели, если первичная версия построена без нее?\tCF.ML.CONST..01\n4.1.2\tКакую причину загрузки указывать при актуализации модели в рамках стандартной сделки по оборотному кредитованию?\tCF.ML.CONST..02\n4.1.3\tНужно ли согласование поддержки при указании в анкете ответа «Нет», если компания переходит на новый вид деятельности?\tCF.ML.CONST..03\n4.1.4\tМожно ли строить ML-модель, если у клиента есть продукт ПГ-2? \tCF.ML.CONST..04\n4.1.5\tКак построить модель по клиенту сегмента АПК по льготной ставке?\tCF.ML.CONST..05\n4.1.6\tРезультаты стресс-тестирования оказывают влияние на итоговый вывод по ML- модели?\tCF.ML.CONST..06\n4.1.7\tКак оценить итоговый вывод, если при результате стресс-теста с низким риском имеются критерии с высоким риском?\tCF.ML.CONST..07\n4.1.8\tКак утвердить ML-модель без РМ (автоутверждение)? \tCF.ML.CONST..08\n4.2\t Валидации отчётности при построении модели\tCF.ML.VALID..00\n4.2.1\tИтоговое значение по разделу I \tCF.ML.VALID..01\n4.2.2\tИтоговое значение по разделу II \tCF.ML.VALID..02\n4.2.3\tИтоговое значение по разделу III \tCF.ML.VALID..03\n4.2.4\tИтоговое значение по разделу IV \tCF.ML.VALID..04\n4.2.5\tИтоговое значение по разделу V \tCF.ML.VALID..05\n4.2.6\tОшибка валидации при создании ML-модели «EBITDA LTM sd140 == EBITDA LTM расчетная»\tCF.ML.VALID..06\n4.2.7\tОшибка при валидации ML-модели «Расходы по финансовому лизингу (поквартально) &gt;= 0»\tCF.ML.VALID..07\n4.3\t Отчёт о прибылях и убытках (ОПУ) \tCF.ML.REP..00\n4.3.1\tВыручка \tCF.ML.REP..01\n4.3.2\tСебестоимость продаж квартальная\tCF.ML.REP..02\n4.3.3\tКоммерческие расходы квартальные\tCF.ML.REP..03\n4.3.4\tУправленческие расходы квартальные\tCF.ML.REP..04\n4.3.5\tПроценты к получению квартальные\tCF.ML.REP..05\n4.3.6\tПроценты к уплате квартальные\tCF.ML.REP..06\n4.4\t(SB140) Корректировки EBITDA \tCF.ML.SB140..00\n4.4.1\tEBITDA LTM в SB140 отличается от расчетной EBITDA \tCF.ML.SB140..01\n4.4.2\tРасходы по финансовому лизингу (поквартально) \tCF.ML.SB140..02\n4.5\tInputs модели \tCF.ML.INP..00\n4.5.1\tМожно ли убрать показатели Inputs, реализацией которых клиент не занимается?\tCF.ML.INP..01\n4.5.2\tКак обновить модель при выходе новых Inputs?\tCF.ML.INP..02\n4.6\tСтруктурирование модели  \tCF.ML.STRU..00\n4.6.1\tКапитальные затраты\tCF.ML.STRU.CAPIT.00\n4.6.1.1\tПочему капитальные затраты на поддержание (Maintenance CapEx) равны уровню амортизации?\tCF.ML.STRU.CAPIT.01\n4.6.1.2\tКогда капитальные затраты на поддержание (Maintenance CapEx) могут быть меньше амортизации?\tCF.ML.STRU.CAPIT.02\n4.6.1.3\tКак заложить в прогноз капитальные затраты на расширение (development capex) и как они повлияют на модель?\tCF.ML.STRU.CAPIT.03\n4.6.2\tПрочие операционные и неоперационные расходы  \tCF.ML.STRU.OTH.00\n4.6.2.1\tКак изменить прочие операционные расходы?\tCF.ML.STRU.OTH.01\n4.6.2.2\tКак изменить прочие неоперационные расходы, в том числе штрафы?\tCF.ML.STRU.OTH.02\n4.6.2.3\tКак не учитывать прогноз по прочим неоперационным расходам?\tCF.ML.STRU.OTH.03\n4.6.3\tГде отобразить гарантии, рефинансирование, непокрытый аккредитив, денежные средства для обслуживания связанной организации\tCF.ML.STRU.DIS.00\n4.6.3.1\tГде учесть рефинансирование истекающих кредитов (перевороты кредитов)?\tCF.ML.STRU.DIS.01\n4.6.3.2\tГде учесть денежные средства для обслуживания связанной организации?\tCF.ML.STRU.DIS.02\n4.6.3.3\t  Где отражать гарантии?\tCF.ML.STRU.DIS.03\n4.6.3.4\tГде отразить лимит на непокрытые аккредитивы?\tCF.ML.STRU.DIS.04\n4.6.4\tГде отобразить штрафы, лизинг, дивиденды, субординированный долг, факторинг\tCF.ML.STRU.FINE.00\n4.6.4.1\tГде учесть дивиденды в прогнозных периодах? \tCF.ML.STRU.FINE.01\n4.6.4.2\tГде учесть лизинг?\tCF.ML.STRU.FINE.02\n4.6.4.3\tГде учесть субординированный долг?\tCF.ML.STRU.FINE.03\n4.6.4.4\tКак заложить в прогноз агентский факторинг?\tCF.ML.STRU.FINE.04\n4.6.4.5\tГрафики лизинговых платежей вводятся с НДС или без него?\tCF.ML.STRU.FINE.05\n4.6.4.6\tКак отражать агентский факторинг в ML- моделях\tCF.ML.STRU.FINE.06\n4.6.5\tПочему возник отрицательный баланс на начало первого прогнозного периода в блоке «Существующие обязательства перед другими кредиторами без учета субординированного долга»?\tCF.ML.STRU..01\n4.6.6\tПочему возникает балансирующий долг?\tCF.ML.STRU..02\n4.6.7\tТребуется ли контролировать DSCR, если инвестиции по инвестиционному кредиту полностью отражены в отчетности?\tCF.ML.STRU..03\n4.6.8\tПочему в суммирующей таблице продуктов на вкладке «Кредитный портфель» отражаются привлечения/погашения, которые не вносили?\tCF.ML.STRU..04\n4.7\tПрогноз модели\tCF.ML.FORE..00\n4.7.1\tВыручка\tCF.ML.FORE.REV.00\n4.7.1.1\tКакая логика используется для определения темпа роста выручки?\tCF.ML.FORE.REV.01\n4.7.1.2\tПочему при добавлении планируемой выручки на этапе создания модели в прогнозе рассчитывается другое значение?\tCF.ML.FORE.REV.02\n4.7.2\tИндексы CPI и PPI, показатели ISCR, ISCR LTM  и оборачиваемости\tCF.ML.FORE.IND.00\n4.7.2.1\tПочему индексы CPI и PPI не соответствуют фактически сформированной выручке?\tCF.ML.FORE.IND.01\n4.7.2.2\tЧто делать если квартальный ISCR или ISCR LTM в первых периодах превышен?\tCF.ML.FORE.IND.02\n4.7.2.3\tВозможно ли в модели выровнять показатели оборачиваемости?\tCF.ML.FORE.IND.03\n4.7.3\tОсновные средства и амортизация\tCF.ML.FORE.TOOL.00\n4.7.3.1\tПочему основные средства не снижаются на размер амортизации?\tCF.ML.FORE.TOOL.01\n4.7.3.2\tПочему в прогнозируемом периоде амортизация отрицательная?\tCF.ML.FORE.TOOL.02\n4.7.4\tГде найти формулы по долговым метрикам?\tCF.ML.FORE..01\n4.7.5\tНадо ли корректировать прогноз, если прибыль в модели больше, чем планирует заемщик, и подписывать с ним модель?\tCF.ML.FORE..02\n4.7.6\tПочему прогноз в сезонной и несезонной модели не отличается?\tCF.ML.FORE..03\n4.7.7\tИмеет ли значение классификация долга в прогнозе на краткосрочный и долгосрочный, если весь привлекаемый долг отнесен к долгосрочному? \tCF.ML.FORE..04\n4.7.8\tПочему в прогнозе не соблюдаются установленные на структурировании ОКС?\tCF.ML.FORE..05\n4.7.9\tПочему денежные средства прогнозируются на высоком уровне?\tCF.ML.FORE..06\n5\tИндивидуальный план мониторинга и мониторинг бизнес-плана (ИПМ и МБП)\tCF.PLAN...00\n5.1\tИндивидуальный план мониторинга (ИПМ)\tCF.PLAN.MON..00\n5.1.1\tКак отозвать ИПМ, направленный на согласование риск-менеджеру, для доработки\tCF.PLAN.MON..01\n5.1.2\tСтатус ИПМ «Ожидает подтверждения сделки» и нет кнопки для утверждении ИПМ\tCF.PLAN.MON..02\n5.1.3\tКак при наличии нескольких утвержденных моделей перенести признак актуальности модели - Галочку «✔» - на нужную версию?\tCF.PLAN.MON..03\n5.1.4\tКак можно скорректировать ИПМ по утвержденной модели?\tCF.PLAN.MON..04\n5.1.5\tЧто нужно сделать для автоматической передачи модели на мониторинг?\tCF.PLAN.MON..05\n5.2\tМониторинг бизнес-плана (МБП)\tCF.PLAN.BIS..00\n5.2.1\tНе сформировался МБП за последний квартал загруженной отчетности\tCF.PLAN.BIS..01\n6\tАвтовыводы\tCF.AUTO...00\n6.1\tНе формируются автовыводы\tCF.AUTO...01\n7\tРасчет отраслевой кредитной стратегии (ОКС)\tCF.CALC...00\n7.1\tС расчетом показателей по финансовой отчетности\tCF.CALC...01\n7.2\tС расчетом показателей по CF-модели\tCF.CALC...02\n7.3\tС поиском ОКС и определением сегмента, макроотрасли, подотрасли клиента или КГ\tCF.CALC...03\n7.4\tС риск-метриками\tCF.CALC...04\n7.5\tС показателями сделки\tCF.CALC...05\n7.6\tОшибка: «Не найдена версия модели по КНР, привязанная к сделке»\tCF.CALC...06\n8\tНедвижимость (УФН)\tCF.IMM...00\n8.1\tСтруктура проекта\tCF.IMM.STRU..00\n8.1.1\tКак внести изменения в Структуру проекта?\tCF.IMM.STRU..01\n8.1.2\tКак построить структуру проекта в АС CashFlow (CF), если финансовая модель включает два проекта (финансируется Сбером и другим банком)?\tCF.IMM.STRU..02\n8.1.3\tКак сформировать финансовую модель с использованием структуры проекта и иной деятельности в виде гарантии КРТ (комплексное развитие территорий)?\tCF.IMM.STRU..03\n8.1.4\tПри создании финансовой модели по направлению финансирования в АС CashFlow (CF) из АС КФЮЛ не тянется подотрасль и макроотрасль\tCF.IMM.STRU..04\n8.2\tМониторинг и маппинг\tCF.IMM.STRU..05\n8.3\tШаблон CF-модели\tCF.IMM.TEML..00\n8.3.1\tИспользование финансовой модели другого клиента в качестве шаблона\tCF.IMM.TEML..01\n8.3.2\tПри загрузке финансовой модели в АС CashFlow (CF) возникает сообщение: «Необходимо проверить автоматические и итеративные вычисления»\tCF.IMM.TEML..02\n8.4\tФинансовая модель без сделки\tCF.IMM.FIN..00\n8.4.1\tКак утвердить финансовую модель без сделки?\tCF.IMM.FIN..01\n8.4.2\tКак заблокировать модель без сделки для утверждения РМ?\tCF.IMM.FIN..02\n######\n\nСтруктура сокращена для удобства, например:\n\n\&quot;4.6.2.1\tКак изменить прочие операционные расходы?\tCF.ML.STRU.OTH.01\&quot; равно \&quot;ML-модели.Структурирование модели.Прочие операционные и неоперационные расходы.Как изменить прочие операционные расходы?\n\nРодительская категория отличается от вопроса наличием 00 на конце кода, например:\n\n\&quot;   Как изменить прочие операционные расходы?\t[CF.ML.STRU.OTH.01]\&quot; - родительская категория [CF.ML.STRU.OTH.00]\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;Структурирование модели\&quot;\n\nОтвет: \&quot;CF.ML.STRU..00\&quot;\n\nОтвет верни в виде кода решения\n\nна вопросы не относящиеся к АС CashFlow, верни только строку \&quot;error\&quot;\nне выдумывай код решения, верни только тот который есть в списке выше!\n\nиспользуй историю диалога:\n{context}\nответь на вопрос&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-23NdU&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 330.2628590076954,&#xa;          &quot;y&quot;: 1888.3947703478534&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-zQnaG&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1229.3259225097115,&#xa;          &quot;y&quot;: 550.9445240744142&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС КЮЛ - {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-zQnaG&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1229.3259225097115,&#xa;          &quot;y&quot;: 550.9445240744142&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-ppA6M&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1225.2377670277262,&#xa;          &quot;y&quot;: 1203.4066891678335&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС Пегас - {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-ppA6M&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1225.2377670277262,&#xa;          &quot;y&quot;: 1203.4066891678335&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-fyYo5&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1266.9106957352342,&#xa;          &quot;y&quot;: 1919.1259812065393&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС CashFlow- {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-fyYo5&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1266.9106957352342,&#xa;          &quot;y&quot;: 1919.1259812065393&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-oy48r&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -12.36790903050678,&#xa;          &quot;y&quot;: 1028.0855924466434&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;у меня превышен SCR LTM\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;[CF.ML.FORE.IND.02]\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;найти клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CREAT...02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Расчет отраслевой кредитной стратегии (ОКС)\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CALC...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    }\n]\n&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-oy48r&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;dragging&quot;: false,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -12.36790903050678,&#xa;          &quot;y&quot;: 1028.0855924466434&#xa;        }&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-TWL8d&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -110.1277956300525,&#xa;          &quot;y&quot;: 460.2863536039546&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проверить категорию качества\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.QUAL.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;история КК\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.QUAL.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить УИТ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;некорректно подтянулась карточка клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;изменить тип договора\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;некорректно заведен вид кредита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;по дз ошибка при открытии\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка при подписании договора залога\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;совокупная задолженность\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;установление процентной ставки\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;превышение суммы продукта\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.BROAD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;расчет задолженности\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;переменная ставка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ОКР не обновляются данные\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;задача сформировалась в пегас\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;платежи исполены\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не акцептуются платежи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;остаток кредитных средств в екс\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;доп. свойство АС Murex\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;нет возможности зайти в ЭКД клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не видно распоряжения в 10 папке\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;изменить статус КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;необходимо завести финансовое положение\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.ADJ.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;сервис ушел на подтверждение 2 рукой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.AGR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Необходимо проставить доп.свойства по программе МЭР\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибочно принят документ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить связь с рамкой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;некорректная связка с договором обеспечения\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка с итогами расчета лимита овердрафта\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не найден счет эскроу\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не определены значения сдо по выбранным для расчтета схемам\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;выставление требования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..08\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;входящие документы\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN.DIST.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;при выставлении платежного требования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..08\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;плановые в архиве\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..08\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Автомат для распределения платежных документов\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN.DIST.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;плановые операции\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не формируется отчет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;невозможно изменить МСФО\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;замена залогодателя\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;кредитный реестр\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не сформировалась задача\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;выходит ошибка в екс\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;нужно проставить целевое кредитование\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить программу субсидирования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.AGR.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;невозможно поменять статус КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;при подписании документа ЭЦП для передачи на сопровождение выдает ошибку\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;связать договор с рамкой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;распространение обеспечения\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить связку с КД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.COM.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка Превышено значение Максимальный срок кредитования указанное в отчете Лимиты овердрафта\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не удается провалиться в отчет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;свободный остаток лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;урегулирование свободного остатка лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;увеличение свободного остатка лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;списать лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;уменьшение СОЛ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;уменьшение свободного остатка лимита\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не получается выгрузить отчет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;выгрузить плановые по договору\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;остаток по статье учета\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.OTH.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;формирование уведомлений\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.REPO.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;переменная маржа\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;запрос на урегулирование доступного остатка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проставить дату окончания субсидирования\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.AGR.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не могу подписать документ ЭЦП\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;рейтинг клиента подтягивается некорректно\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.06\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;лимита вне плана\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как установить ставку на транше\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не закрывается задача\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не поступило распоряжение\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка при расчете ставки\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;процентная ставка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;БКИ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.PAY.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;папка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не использовались\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;холд рм оц \&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить КФЮЛ\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.PROD.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;зависли платежи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.PAY.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ЭЦП КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;мои роли\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CALC.OVER.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;задолженность\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не удается обновить\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.BC.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Акцепт\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;за счет кредитных\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;после выдачи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;деньги не пришли\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;п/п не проводится\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;нужно удалить\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.SIGN.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;закрытие сделки\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.FIN..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;МС\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.OTH.04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проведена выдача\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;по реестру\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;платежи не акцептуются\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ошибка создания договора залога\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.SIGN.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;работа с картотекой\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.ERR.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;денежные средства\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;списание денег с кредитного реестра\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;зависли кредитные средства\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC.REG.02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не получается акцептовать платежи\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.ISS.ELEC..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;БА\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не дает изменить категорию качества\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CREAT.QUAL.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;удалить связь с рамочной кредитной линии\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;KUL.CONT.СOM.01\&quot;\n    }\n]&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-TWL8d&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -110.1277956300525,&#xa;          &quot;y&quot;: 460.2863536039546&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-lW46J&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -119.36746076085103,&#xa;          &quot;y&quot;: 1951.3190709582725&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;у меня превышен SCR LTM\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;[CF.ML.FORE.IND.02]\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;найти клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CREAT...02\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Расчет отраслевой кредитной стратегии (ОКС)\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.CALC...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Выручка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;CF.ML.FORE.REV.00\&quot;\n    }\n]&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-lW46J&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -119.36746076085103,&#xa;          &quot;y&quot;: 1951.3190709582725&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;ChatOutput-6cYM7&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 2701.91605118137,&#xa;          &quot;y&quot;: 2119.6811298445277&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;background_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;background_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Background Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The background color of the icon.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;chat_icon&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;chat_icon&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Icon&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The icon of the message.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.io.chat import ChatComponent\nfrom langflow.inputs import BoolInput\nfrom langflow.io import DropdownInput, MessageInput, MessageTextInput, Output\nfrom langflow.schema.message import Message\nfrom langflow.schema.properties import Source\nfrom langflow.utils.constants import MESSAGE_SENDER_AI, MESSAGE_SENDER_NAME_AI, MESSAGE_SENDER_USER\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \&quot;Chat Output\&quot;\n    description = \&quot;Display a chat message in the Playground.\&quot;\n    icon = \&quot;MessagesSquare\&quot;\n    name = \&quot;ChatOutput\&quot;\n\n    inputs = [\n        MessageInput(\n            name=\&quot;input_value\&quot;,\n            display_name=\&quot;Text\&quot;,\n            info=\&quot;Message to be passed as output.\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;should_store_message\&quot;,\n            display_name=\&quot;Store Messages\&quot;,\n            info=\&quot;Store the message in the history.\&quot;,\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\&quot;sender\&quot;,\n            display_name=\&quot;Sender Type\&quot;,\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_AI,\n            advanced=True,\n            info=\&quot;Type of sender.\&quot;,\n        ),\n        MessageTextInput(\n            name=\&quot;sender_name\&quot;,\n            display_name=\&quot;Sender Name\&quot;,\n            info=\&quot;Name of the sender.\&quot;,\n            value=MESSAGE_SENDER_NAME_AI,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;session_id\&quot;,\n            display_name=\&quot;Session ID\&quot;,\n            info=\&quot;The session ID of the chat. If empty, the current session ID parameter will be used.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;data_template\&quot;,\n            display_name=\&quot;Data Template\&quot;,\n            value=\&quot;{text}\&quot;,\n            advanced=True,\n            info=\&quot;Template to convert Data to Text. If left empty, it will be dynamically set to the Data&#39;s text key.\&quot;,\n        ),\n        MessageTextInput(\n            name=\&quot;background_color\&quot;,\n            display_name=\&quot;Background Color\&quot;,\n            info=\&quot;The background color of the icon.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;chat_icon\&quot;,\n            display_name=\&quot;Icon\&quot;,\n            info=\&quot;The icon of the message.\&quot;,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\&quot;text_color\&quot;,\n            display_name=\&quot;Text Color\&quot;,\n            info=\&quot;The text color of the name\&quot;,\n            advanced=True,\n        ),\n    ]\n    outputs = [\n        Output(\n            display_name=\&quot;Message\&quot;,\n            name=\&quot;message\&quot;,\n            method=\&quot;message_response\&quot;,\n        ),\n    ]\n\n    def _build_source(self, _id: str | None, display_name: str | None, source: str | None) -&gt; Source:\n        source_dict = {}\n        if _id:\n            source_dict[\&quot;id\&quot;] = _id\n        if display_name:\n            source_dict[\&quot;display_name\&quot;] = display_name\n        if source:\n            source_dict[\&quot;source\&quot;] = source\n        return Source(**source_dict)\n\n    def message_response(self) -&gt; Message:\n        _source, _icon, _display_name, _source_id = self.get_properties_from_source_component()\n        _background_color = self.background_color\n        _text_color = self.text_color\n        if self.chat_icon:\n            _icon = self.chat_icon\n        message = self.input_value if isinstance(self.input_value, Message) else Message(text=self.input_value)\n        message.sender = self.sender\n        message.sender_name = self.sender_name\n        message.session_id = self.session_id\n        message.flow_id = self.graph.flow_id if hasattr(self, \&quot;graph\&quot;) else None\n        message.properties.source = self._build_source(_source_id, _display_name, _source)\n        message.properties.icon = _icon\n        message.properties.background_color = _background_color\n        message.properties.text_color = _text_color\n        if self.session_id and isinstance(message, Message) and self.should_store_message:\n            stored_message = self.send_message(\n                message,\n            )\n            self.message.value = stored_message\n            message = stored_message\n\n        self.status = message\n        return message\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;data_template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;data_template&quot;,&#xa;                &quot;value&quot;: &quot;{text}&quot;,&#xa;                &quot;display_name&quot;: &quot;Data Template&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Template to convert Data to Text. If left empty, it will be dynamically set to the Data&#39;s text key.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Message to be passed as output.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;sender&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;Machine&quot;,&#xa;                  &quot;User&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender&quot;,&#xa;                &quot;value&quot;: &quot;Machine&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Type&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Type of sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;sender_name&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;sender_name&quot;,&#xa;                &quot;value&quot;: &quot;AI&quot;,&#xa;                &quot;display_name&quot;: &quot;Sender Name&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Name of the sender.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;session_id&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;session_id&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Session ID&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The session ID of the chat. If empty, the current session ID parameter will be used.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;should_store_message&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;should_store_message&quot;,&#xa;                &quot;value&quot;: true,&#xa;                &quot;display_name&quot;: &quot;Store Messages&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Store the message in the history.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;text_color&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;text_color&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Text Color&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;The text color of the name&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Display a chat message in the Playground.&quot;,&#xa;            &quot;icon&quot;: &quot;MessagesSquare&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;Chat Output&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: &quot;message_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;should_store_message&quot;,&#xa;              &quot;sender&quot;,&#xa;              &quot;sender_name&quot;,&#xa;              &quot;session_id&quot;,&#xa;              &quot;data_template&quot;,&#xa;              &quot;background_color&quot;,&#xa;              &quot;chat_icon&quot;,&#xa;              &quot;text_color&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;ChatOutput&quot;,&#xa;          &quot;id&quot;: &quot;ChatOutput-6cYM7&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 233,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 2701.91605118137,&#xa;          &quot;y&quot;: 2119.6811298445277&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 778.9485293804037,&#xa;          &quot;y&quot;: 2572.88416959982&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;temperature&quot;: {&#xa;                &quot;min_label&quot;: &quot;&quot;,&#xa;                &quot;max_label&quot;: &quot;&quot;,&#xa;                &quot;min_label_icon&quot;: &quot;&quot;,&#xa;                &quot;max_label_icon&quot;: &quot;&quot;,&#xa;                &quot;slider_buttons&quot;: false,&#xa;                &quot;slider_buttons_options&quot;: [],&#xa;                &quot;slider_input&quot;: false,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;temperature&quot;,&#xa;                &quot;value&quot;: 0.1,&#xa;                &quot;display_name&quot;: &quot;Temperature&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;slider&quot;,&#xa;                &quot;_input_type&quot;: &quot;SliderInput&quot;&#xa;              },&#xa;              &quot;access_token&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;access_token&quot;,&#xa;                &quot;display_name&quot;: &quot;Access Token&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Авторизация с временным токеном.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;base_url&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;base_url&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_BASE_URL&quot;,&#xa;                &quot;display_name&quot;: &quot;GigaChat Base URL&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;ca_bundle_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;ca_bundle_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CA_BUNDLE_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;CA bundle file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;cert_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;cert_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_CERT_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Cert file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langchain_gigachat import GigaChat\n\nfrom langflow.base.models.gigachat_constants import GIGACHAT_MODEL_NAMES, GIGACHAT_SCOPE_NAMES\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import LanguageModel\nfrom langflow.field_typing.range_spec import RangeSpec\nfrom langflow.inputs import BoolInput, DropdownInput, IntInput, SecretStrInput, SliderInput, StrInput\nfrom langflow.inputs.inputs import FloatInput\n\n\nclass GigaChatModelComponent(LCModelComponent):\n    display_name = \&quot;GigaChat\&quot;\n    description = \&quot;Генерация текста с использованием GigaChat.\&quot;\n    icon = \&quot;GigaChat\&quot;\n    name = \&quot;GigaChatModel\&quot;\n\n    inputs = [\n        *LCModelComponent._base_inputs,\n        SecretStrInput(\n            name=\&quot;credentials\&quot;,\n            display_name=\&quot;Credential Key\&quot;,\n            info=\&quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        SecretStrInput(\n            name=\&quot;access_token\&quot;,\n            display_name=\&quot;Access Token\&quot;,\n            info=\&quot;Авторизация с временным токеном.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        DropdownInput(\n            name=\&quot;scope\&quot;,\n            display_name=\&quot;Scope\&quot;,\n            advanced=True,\n            info=\&quot;Выбор персонального или корпоративного пространства\&quot;\n            \&quot;GIGACHAT_API_PERS — версия API для физических лиц;\&quot;\n            \&quot;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;\&quot;\n            \&quot;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.\&quot;,\n            options=GIGACHAT_SCOPE_NAMES,\n            value=GIGACHAT_SCOPE_NAMES[0],\n        ),\n        IntInput(\n            name=\&quot;max_tokens\&quot;,\n            display_name=\&quot;Max tokens\&quot;,\n            advanced=True,\n            info=\&quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.\&quot;,\n            range_spec=RangeSpec(min=0, max=200000),\n        ),\n        DropdownInput(\n            name=\&quot;model\&quot;,\n            display_name=\&quot;Model\&quot;,\n            advanced=False,\n            options=GIGACHAT_MODEL_NAMES,\n            value=GIGACHAT_MODEL_NAMES[2],\n        ),\n        SecretStrInput(\n            name=\&quot;base_url\&quot;,\n            display_name=\&quot;GigaChat Base URL\&quot;,\n            advanced=True,\n            info=\&quot;Базовый API GigaChatПо умолчанию https://gigachat.devices.sberbank.ru/api/v1.\&quot;,\n            value=\&quot;GIGACHAT_BASE_URL\&quot;,\n        ),\n        StrInput(\n            name=\&quot;user\&quot;,\n            display_name=\&quot;User\&quot;,\n            advanced=True,\n            info=\&quot;Логин при авторизации через логин и пароль.\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;password\&quot;,\n            display_name=\&quot;Password\&quot;,\n            info=\&quot;Пароль при авторизации через логин и пароль.\&quot;,\n            advanced=True,\n            value=None,\n        ),\n        # Support for connection to GigaChat through SSL certificates\n        SecretStrInput(\n            name=\&quot;ca_bundle_file\&quot;,\n            display_name=\&quot;CA bundle file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу CA цепочки сертификатов. Например certs/ca.pem # chain_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CA_BUNDLE_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;cert_file\&quot;,\n            display_name=\&quot;Cert file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файлу с публичной частью сертификата. Например certs/tls.pem # published_pem.txt\&quot;,\n            value=\&quot;GIGACHAT_CERT_FILE\&quot;,\n        ),\n        SecretStrInput(\n            name=\&quot;key_file\&quot;,\n            display_name=\&quot;Key file\&quot;,\n            advanced=True,\n            info=\&quot;Путь к файл с публичной частью сертификата\&quot;,\n            value=\&quot;GIGACHAT_KEY_FILE\&quot;,\n        ),\n        StrInput(\n            name=\&quot;key_file_password\&quot;,\n            display_name=\&quot;Key file password\&quot;,\n            advanced=True,\n            info=\&quot;Пароль от файла с публичной частью ключа\&quot;,\n        ),\n        IntInput(\n            name=\&quot;timeout\&quot;,\n            display_name=\&quot;Timeout\&quot;,\n            advanced=True,\n            info=\&quot;Таймаут реквеста в секундах\&quot;,\n            range_spec=RangeSpec(min=0, max=300),\n        ),\n        BoolInput(\n            name=\&quot;verify_ssl_certs\&quot;,\n            display_name=\&quot;Verify SSL certs\&quot;,\n            advanced=True,\n            value=False,\n            info=\&quot;Использовать ли клиенскую проверку серверного сертификата\&quot;,\n        ),\n        BoolInput(\n            name=\&quot;profanity_check\&quot;,\n            display_name=\&quot;Profanity check\&quot;,\n            advanced=True,\n            info=\&quot;Проверка на использование нецензурной лексики. \&quot;,\n        ),\n        SliderInput(\n            name=\&quot;temperature\&quot;,\n            display_name=\&quot;Temperature\&quot;,\n            advanced=False,\n            value=0.1,\n            range_spec=RangeSpec(min=0, max=1),\n        ),\n        FloatInput(\n            name=\&quot;some_other_param\&quot;,\n            display_name=\&quot;Top p\&quot;,\n            # info=\&quot;top_p value to use for nucleus sampling. Must be between 0.0 and 1.0 \&quot;,\n            range_spec=RangeSpec(min=0, max=1),\n            advanced=True,\n            value=1.0,\n        ),\n        # TODO - add later\n        # use_api_for_tokens: bool = False\n        # \&quot;\&quot;\&quot; Use GigaChat API for tokens count \&quot;\&quot;\&quot;\n        # verbose: bool = False\n        # \&quot;\&quot;\&quot; Verbose logging \&quot;\&quot;\&quot;\n        # flags: Optional[List[str]] = None\n        # \&quot;\&quot;\&quot; Feature flags \&quot;\&quot;\&quot;\n        # repetition_penalty: Optional[float] = None\n        # \&quot;\&quot;\&quot; The penalty applied to repeated tokens \&quot;\&quot;\&quot;\n        # update_interval: Optional[float] = None\n        # \&quot;\&quot;\&quot; Minimum interval in seconds that elapses between sending tokens \&quot;\&quot;\&quot;\n        # function\n        # tools\n        # function_call\n    ]\n\n    def build_model(self) -&gt; LanguageModel:  # type: ignore[type-var]\n        credentials = self.credentials or None\n        access_token = self.access_token or None\n        scope = self.scope or None\n        max_tokens = self.max_tokens or None\n        model = self.model\n        base_url = self.base_url or \&quot;https://gigachat.devices.sberbank.ru/api/v1\&quot;\n        user = self.user or None\n        password = self.password or None\n        ca_bundle_file = self.ca_bundle_file or None\n        cert_file = self.cert_file or None\n        key_file = self.key_file or None\n        key_file_password = self.key_file_password or None\n        timeout = self.timeout or None\n        verify_ssl_certs = self.verify_ssl_certs\n        profanity_check = self.profanity_check\n        temperature = self.temperature if self.temperature is not None else 0.1\n        some_other_param = self.some_other_param or None\n\n        streaming = self.stream\n\n        output = GigaChat(\n            credentials=credentials,\n            access_token=access_token,\n            scope=scope,\n            model=model,\n            verify_ssl_certs=verify_ssl_certs,\n            streaming=streaming,\n            max_tokens=max_tokens,\n            base_url=base_url,\n            user=user,\n            password=password,\n            ca_bundle_file=ca_bundle_file,\n            cert_file=cert_file,\n            key_file=key_file,\n            key_file_password=key_file_password,\n            timeout=timeout,\n            profanity_check=profanity_check,\n            temperature=temperature,\n            top_p=some_other_param,\n        )\n\n        return output\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;credentials&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;credentials&quot;,&#xa;                &quot;display_name&quot;: &quot;Credential Key&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Ключ авторизации. Доступен в личном кабинете в разделе Авторизационные данные.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;input_value&quot;: {&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;input_value&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Input&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageInput&quot;&#xa;              },&#xa;              &quot;key_file&quot;: {&#xa;                &quot;load_from_db&quot;: true,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_KEY_FILE&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Путь к файл с публичной частью сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;&#xa;              },&#xa;              &quot;key_file_password&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;key_file_password&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Key file password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль от файла с публичной частью ключа&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;max_tokens&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 200000,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;max_tokens&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Max tokens&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Максимальное количество токенов для генерации. Установите значение 0 для неограниченного количества токенов.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;model&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GigaChat&quot;,&#xa;                  &quot;GigaChat-Pro&quot;,&#xa;                  &quot;GigaChat-Max&quot;,&#xa;                  &quot;GigaChat-2&quot;,&#xa;                  &quot;GigaChat-2-Pro&quot;,&#xa;                  &quot;GigaChat-2-Max&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;model&quot;,&#xa;                &quot;value&quot;: &quot;GigaChat-Max&quot;,&#xa;                &quot;display_name&quot;: &quot;Model&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;password&quot;: {&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;password&quot;,&#xa;                &quot;display_name&quot;: &quot;Password&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Пароль при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;password&quot;: true,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;SecretStrInput&quot;,&#xa;                &quot;value&quot;: &quot;&quot;&#xa;              },&#xa;              &quot;profanity_check&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;profanity_check&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Profanity check&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Проверка на использование нецензурной лексики. &quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;scope&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;options&quot;: [&#xa;                  &quot;GIGACHAT_API_PERS&quot;,&#xa;                  &quot;GIGACHAT_API_B2B&quot;,&#xa;                  &quot;GIGACHAT_API_CORP&quot;&#xa;                ],&#xa;                &quot;combobox&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;scope&quot;,&#xa;                &quot;value&quot;: &quot;GIGACHAT_API_PERS&quot;,&#xa;                &quot;display_name&quot;: &quot;Scope&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Выбор персонального или корпоративного пространстваGIGACHAT_API_PERS — версия API для физических лиц;GIGACHAT_API_B2B — доступ для ИП и юридических лиц по предоплате;GIGACHAT_API_CORP — доступ для ИП и юридических лиц по схеме pay-as-you-go.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;DropdownInput&quot;&#xa;              },&#xa;              &quot;some_other_param&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 1,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;some_other_param&quot;,&#xa;                &quot;value&quot;: 1,&#xa;                &quot;display_name&quot;: &quot;Top p&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;float&quot;,&#xa;                &quot;_input_type&quot;: &quot;FloatInput&quot;&#xa;              },&#xa;              &quot;stream&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;stream&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Stream&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Stream the response from the model. Streaming works only in Chat.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              },&#xa;              &quot;system_message&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;system_message&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;System Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;System message to pass to the model.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;MessageTextInput&quot;&#xa;              },&#xa;              &quot;timeout&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;range_spec&quot;: {&#xa;                  &quot;step_type&quot;: &quot;float&quot;,&#xa;                  &quot;min&quot;: 0,&#xa;                  &quot;max&quot;: 300,&#xa;                  &quot;step&quot;: 0.1&#xa;                },&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;timeout&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;Timeout&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Таймаут реквеста в секундах&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;int&quot;,&#xa;                &quot;_input_type&quot;: &quot;IntInput&quot;&#xa;              },&#xa;              &quot;user&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;user&quot;,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;display_name&quot;: &quot;User&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Логин при авторизации через логин и пароль.&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;_input_type&quot;: &quot;StrInput&quot;&#xa;              },&#xa;              &quot;verify_ssl_certs&quot;: {&#xa;                &quot;trace_as_metadata&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;verify_ssl_certs&quot;,&#xa;                &quot;value&quot;: false,&#xa;                &quot;display_name&quot;: &quot;Verify SSL certs&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Использовать ли клиенскую проверку серверного сертификата&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;bool&quot;,&#xa;                &quot;_input_type&quot;: &quot;BoolInput&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Генерация текста с использованием GigaChat.&quot;,&#xa;            &quot;icon&quot;: &quot;GigaChat&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;LanguageModel&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;GigaChat&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {},&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;text_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Text&quot;,&#xa;                &quot;method&quot;: &quot;text_response&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;LanguageModel&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;LanguageModel&quot;,&#xa;                &quot;name&quot;: &quot;model_output&quot;,&#xa;                &quot;display_name&quot;: &quot;Language Model&quot;,&#xa;                &quot;method&quot;: &quot;build_model&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: []&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;input_value&quot;,&#xa;              &quot;system_message&quot;,&#xa;              &quot;stream&quot;,&#xa;              &quot;credentials&quot;,&#xa;              &quot;access_token&quot;,&#xa;              &quot;scope&quot;,&#xa;              &quot;max_tokens&quot;,&#xa;              &quot;model&quot;,&#xa;              &quot;base_url&quot;,&#xa;              &quot;user&quot;,&#xa;              &quot;password&quot;,&#xa;              &quot;ca_bundle_file&quot;,&#xa;              &quot;cert_file&quot;,&#xa;              &quot;key_file&quot;,&#xa;              &quot;key_file_password&quot;,&#xa;              &quot;timeout&quot;,&#xa;              &quot;verify_ssl_certs&quot;,&#xa;              &quot;profanity_check&quot;,&#xa;              &quot;temperature&quot;,&#xa;              &quot;some_other_param&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;GigaChatModel&quot;,&#xa;          &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 641,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 778.9485293804037,&#xa;          &quot;y&quot;: 2572.88416959982&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-SnuWV&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 342.19030132206046,&#xa;          &quot;y&quot;: 2545.9611206278796&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ты специалист службы поддержки кредитного отдела крупного банка. Ты собрал информацию о часто возникающих проблемах у кредитных инспекторов (КИ) и кредитных менеджеров (КМ).\n\nРабота кредитного менеджера и кредитного инспектора проходит в следующих автоматизированных системах (АС):\n\n1. АС ЕФС Н.Б. (Автоматизированная система - Единая Фронтальная Система \&quot;Наш Бизнес\&quot;)\n\nВсе рекомендации разделены по категориям проблем, каждой рекомендации присвоен код.\n\nОсновные понятия и термины, применяемые в работе в АС ЕФС Н.Б.:\n\nГруппа связных заемщиков (ГСЗ), максимальное ограничение (МО), консолидированная группа (КГ), \nАндеррайтер (АР), электронно-кредитное досье (ЭКД), цифровой кредитный процесс (ЦКП), кредитное подразделение (КП), коллегиальный орган (КО), Watchlist (WL), финансовая отчетность клиента (ФОК), бюро кредитных историй (БКИ), отраслевой код контрагента (ОКК), индивидуальное решение (ИР), юридическое лицо,клиент, участник КГ (ЮЛ лицо), Место где хранятся данные по рейтингам и риск-сегменту (Аргус), главный кредитный специалист (ГКС),\n\n\nОсновные категории проблем в АС ЕФС Н.Б. с указанием структуры навыка и комментариями:\n\n#######\n1\tКоманда сделки и организации\t[EFS.TEAM..00]\n1.1\t Команда организации\t[EFS.TEAM.ORG.00]\n1.1.1\tКак закрепить руководителя главного кредитного специалиста за клиентом?\t[EFS.TEAM.ORG.01]\n1.1.2\tКак закрепить главного кредитного специалиста за клиентом?\t[EFS.TEAM.ORG.02]\n1.1.3\tМеня нет в команде организации\t[EFS.TEAM.ORG.03]\n1.2\tКоманда сделки\t[EFS.TEAM.DEAL.00]\n1.2.1\tКак происходит назначение задачи по сделке ЦКП на сотрудников кредитующего подразделения\t[EFS.TEAM.DEAL.01]\n1.2.2\tКак посмотреть команду сделки\t[EFS.TEAM.DEAL.02]\n2\tКарточка организации\t[EFS.CARD...00]\n2.1\t   Не отображается карточка организации\t[EFS.CARD...01]\n2.2\tОшибка: «Пользователь заблокирован в АС Argus (ошибка при интеграционном взаимодействии с внешними АС)»\t[EFS.CARD...02]\n2.3\tДетали клиента\t[EFS.CARD.DET..00]\n2.3.1\tКлассификация\t[EFS.CARD.DET..01]\n2.3.2\tОтрасль\t[EFS.CARD.DET.BRAN.00]\n2.3.2.1\tКлиент не имеет действующего кредитного продукта, и отсутствует сделка\t[EFS.CARD.DET.BRAN.01]\n2.3.2.2\tКлиент не имеет действующего кредитного продукта, и рассматривается сделка\t[EFS.CARD.DET.BRAN.02]\n2.3.2.3\tКлиент имеет действующий кредитный продукт\t[EFS.CARD.DET.BRAN.03]\n2.4\tСчета и картотека\t[EFS.CARD.FILE..00]\n2.4.1\tОтсутствует раздел «Счета и картотека»\t[EFS.CARD.FILE..01]\n2.4.2\tОтсутствует информация о кредитах и остатках на ссудных счетах\t[EFS.CARD.FILE..02]\n2.5\tКредитные продукты\t[EFS.CARD.PROD..00]\n2.5.1\tОтсутствует информация о заключенных договорах\t[EFS.CARD.PROD..01]\n2.5.2\tПроблема с закрытым или отклоненным продуктом\t[EFS.CARD.PROD..02]\n2.5.3\tНе получается привязать лимит\t[EFS.CARD.PROD..03]\n2.5.4\tНет кнопки для редактирования или отклонения продукта  \t[EFS.CARD.PROD..04]\n2.5.5\tПочему продукт в статусе «Запрошен»?\t[EFS.CARD.PROD..05]\n2.6\tЛимитная позиция и максимальные ограничения (МО)\t[EFS.CARD.LIM..00]\n2.6.1\tОтсутствует кнопка «Ввести лимит»\t[EFS.CARD.LIM..01]\n2.6.2\tЗапрошенный лимит в сделке не отображается\t[EFS.CARD.LIM..02]\n2.6.3\tНе могу изменить валюту лимита\t[EFS.CARD.LIM..03]\n2.6.4\tНе могу закрыть лимит\t[EFS.CARD.LIM..04]\n2.6.5\tНе получается привязать лимит\t[EFS.CARD.LIM..05]\n2.6.6\tЛимит уходит в архив при создании вручную\t[EFS.CARD.LIM..06]\n2.6.7\tЗначение статусов лимита и (или) сублимита\t[EFS.CARD.LIM.STAT.00]\n2.6.7.1\t«Утвержденный» \t[EFS.CARD.LIM.STAT.01]\n2.6.7.2\t«Недействительный» \t[EFS.CARD.LIM.STAT.02]\n2.6.7.3\t«Заблокированный» \t[EFS.CARD.LIM.STAT.03]\n2.6.8\t«Запрещено» при переходе на вкладки\t[EFS.CARD.LIM..07]\n2.6.9\tПроблема с лимитами ГСЗ\t[EFS.CARD.LIM.GSZ.00]\n2.6.9.1\tНекорректная сумма лимита по ГСЗ\t[EFS.CARD.LIM.GSZ.01]\n2.6.9.2\tНе могу скорректировать сумму лимита по ГСЗ\t[EFS.CARD.LIM.GSZ.02]\n2.7\tПроблема с максимальным ограничением\t[EFS.CARD.LIM.CONS.00]\n2.7.1\tНе могу перевести в архив максимальное ограничение\t[EFS.CARD.LIM.CONS.01]\n2.7.2\tНе могу удалить максимальное ограничение Заемщика\t[EFS.CARD.LIM.CONS.02]\n2.7.3\tСтатус максимального ограничения изменился на «Заблокированный»\t[EFS.CARD.LIM.CONS.03]\n2.7.4\tПочему статус максимального ограничения может измениться на «Отключен»\t[EFS.CARD.LIM.CONS.04]\n2.7.5\tНе учитывается использование по лимитам одного из заемщиков в использовании МО\t[EFS.CARD.LIM.CONS.05]\n2.7.6\tКак рассчитывается доступное использование максимального ограничения\t[EFS.CARD.LIM.CONS.06]\n2.7.7\tНевозможно подтянуть из списка   участника КГ при заведении максимального ограничения на КГ\t[EFS.CARD.LIM.CONS.07]\n2.8\t  Рейтинг\t[EFS.CARD.RAT..00]\n2.8.1\tРейтинг не назначается на андеррайтера\t[EFS.CARD.RAT..01]\n2.8.2\tНе могу переназначить кредитного инспектора в рейтинге клиента\t[EFS.CARD.RAT..02]\n2.8.3\tПри расчете рейтинга не подтягивается риск-сегмент клиента\t[EFS.CARD.RAT..03]\n2.8.4\tНе могу заполнить данные по контрактам или проектам в рейтинге\t[EFS.CARD.RAT..04]\n2.8.5\tПроблема с автоутверждением рейтинга в сделке с категорией «Вторая линия защиты»\t[EFS.CARD.RAT..05]\n2.8.6\tНевозможно рассчитать рейтинг, который привязан к сделке с категорией «Проблемные активы»\t[EFS.CARD.RAT..06]\n2.8.7\tПо организации   из RiskStore не получен актуальный риск-сегмент для расчета\t[EFS.CARD.RAT..07]\n2.8.8\tИзменить привязку к сделке\t[EFS.CARD.RAT..08]\n2.9\tРиск-сегмент\t[EFS.CARD.RSV..00]\n2.9.1\tРиск-сегмент не назначается на АР\t[EFS.CARD.RSV..01]\n2.9.2\tРиск-сегмент красной или черной зоны не назначается на АР\t[EFS.CARD.RSV..02]\n2.9.3\tПроблема с автоутверждением риск-сегмента в сделке с категорией «Вторая линия защиты»\t[EFS.CARD.RSV..03]\n2.9.4\tНе назначается исполнитель для утверждения риск-сегмента в статусе «Отправлен на утверждение»\t[EFS.CARD.RSV..04]\n2.9.5\tИзменить привязку к сделке\t[EFS.CARD.RSV..05]\n2.10\tЗапросы БКИ\t[EFS.CARD.BUR..00]\n2.10.1\tОшибка при формировании запроса\t[EFS.CARD.BUR..01]\n2.11\t Зона проблемности\t[EFS.CARD.PA..00]\n2.11.1\tНе могу продлить срок процедуры эскалации\t[EFS.CARD.PA..01]\n2.11.2\tНе могу изменить бизнес-процесс в мотивированном суждении\t[EFS.CARD.PA..02]\n2.11.3\tНе обновилась зона проблемности клиента\t[EFS.CARD.PA..03]\n2.11.4\tСобытие проблемности не перешло в архив\t[EFS.CARD.PA..04]\n2.11.5\tКак узнать ФИО риск-менеджера по задаче эскалации зоны проблемности? \t[EFS.CARD.PA..05]\n2.11.6\tНе назначается андеррайтер на отработку мотивированного суждения по зоне проблемности\t[EFS.CARD.PA..06]\n3\t Карточка сделки\t[EFS.TRANS.DEAL..00]\n3.1\tНе отображается карточка в разделе «Сделки кредитования»\t[EFS.TRANS.DEAL..01]\n3.2\tОрганизация в стоп-листе\t[EFS.TRANS.DEAL..02]\n3.3\t ЭКД и ФОК\t[EFS.TRANS.DEAL.ESM.00]\n3.3.1\tС типом карточки «Территория»\t[EFS.TRANS.DEAL.ESM.01]\n3.3.2\tВ ЭКД отсутствуют папки и документы\t[EFS.TRANS.DEAL.ESM.02]\n3.3.3\tОтсутствуют документы в папке «Внешний документооборот»\t[EFS.TRANS.DEAL.ESM.03]\n4\tЦКП. Задачи КП по отклонениям и выход на КО\t[EFS.CKP.TASK..00]\n4.1\tЗадача по назначению кредитного инспектора и руководителя\t[EFS.CKP.TASK.PUR.00]\n4.1.1\tКак происходит назначение задачи по сделке ЦКП на сотрудников кредитующего подразделения\t[EFS.CKP.TASK.PUR.01]\n4.1.2\tНе вижу задачу по назначению кредитного инспектора\t[EFS.CKP.TASK.PUR.02]\n4.1.3\tКак выполнить переназначение кредитного инспектора на задачу\t[EFS.CKP.TASK.PUR.03]\n4.1.4\tКто назначает кредитного инспектора на задачу, если в команде организации нет пользователя с ролью «Руководитель главного кредитного специалиста»?\t[EFS.CKP.TASK.PUR.04]\n4.1.5\tПочему задача горит просроченной, если нормативный срок еще не истек?\t[EFS.CKP.TASK.PUR.05]\n4.2\t Задача по отработке WL (Watchlist)\t[EFS.CKP.TASK.WL.00]\n4.2.1\tПо каким сделкам ЦКП доступна отработка WL?\t[EFS.CKP.TASK.WL.01]\n4.2.2\tНормативный срок отработки задачи у кредитного инспектора и риск-менеджера\t[EFS.CKP.TASK.WL.02]\n4.2.3\tКак кредитному инспектору отклонить задачу, если на данный момент снять WL невозможно?\t[EFS.CKP.TASK.WL.03]\n4.2.4\tКак кредитному инспектору отклонить задачу по сделке, если у риск-менеджера уже есть в работе задача по снятию WL?\t[EFS.CKP.TASK.WL.04]\n4.2.5\tЧто будет со сделкой и кнопками в личном кабинете клиента, если риск-менеджер не согласует снятие WL?\t[EFS.CKP.TASK.WL.05]\n4.2.6\tГде посмотреть статус назначения, ФИО риск-менеджера по задаче и результатами его работы?\t[EFS.CKP.TASK.WL.06]\n4.3\tЗадача по принятию решения по сумме и/или сроку\t[EFS.CKP.AMO..00]\n4.3.1\tЗадача по низкорисковым гарантиям\t[EFS.CKP.AMO.LOW.00]\n4.3.1.1\tКакие гарантии считаются низкорисковыми?\t[EFS.CKP.AMO.LOW.01]\n4.3.1.2\tНормативный срок отработки задачи по принятию решения о сумме или сроку \t[EFS.CKP.AMO.LOW.02]\n4.3.1.3\tГде мне доступны документы, приложенные клиентом к заявке?\t[EFS.CKP.AMO.LOW.03]\n4.3.2\tЗадача по стандартным гарантиям\t[EFS.CKP.AMO.STAN.00]\n4.3.2.1\tНормативный срок отработки задачи\t[EFS.CKP.AMO.STAN.01]\n4.3.2.2\tКак отредактировать запрошенные клиентом параметры?\t[EFS.CKP.AMO.STAN.02]\n4.3.2.3\tГде посмотреть дату выдачи банковской гарантии, указанную клиентом?\t[EFS.CKP.AMO.STAN.03]\n4.3.2.4\tЧто такое Gtotal?\t[EFS.CKP.AMO.STAN.04]\n4.3.2.5\tГде мне доступны документы, приложенные клиентом к заявке?\t[EFS.CKP.AMO.STAN.05]\n4.3.3\t Задача по кредитам\t[EFS.CKP.AMO.CRED.00]\n4.3.4\t Выход на коллегиальный орган (КО)\t[EFS.CKP.KO..00]\n5\tЗапросы к службам ПБ и ПКД\t[EFS.REQ..00]\n5.1\tЗапрос к службам ПКД\t[EFS.REQ.PCD..00]\n\tОграничения по использованию сервиса\t[EFS.REQ.PCD..01]\n5.2\tСоздание запроса\t[EFS.REQ.PCD.CRE.00]\n5.2.1\tСоздание нескольких запросов по одному продукту сделки\t[EFS.REQ.PCD.CRE.01]\n5.2.2\tПри создании запроса отсутствует нужный клиент\t[EFS.REQ.PCD.CRE.02]\n5.2.3\tДобавление документов при создании запроса\t[EFS.REQ.PCD.CRE.03]\n5.2.4\tКопирование запроса\t[EFS.REQ.PCD.CRE.04]\n5.2.5\tСоздание запроса без указания сделки\t[EFS.REQ.PCD.CRE.05]\n5.2.6\tВ запросе не отображаются участники сделки\t[EFS.REQ.PCD.CRE.06]\n5.3\tРабота кредитного инспектора с запросом\t[EFS.REQ.PCD.CI.00]\n5.3.1\tРазмещение подготовленной КОД в ЭКД\t[EFS.REQ.PCD.CI.01]\n5.3.2\tТребуется корректировка созданного запроса\t[EFS.REQ.PCD.CI.02]\n5.3.3\tОтзыв созданного запроса КИ\t[EFS.REQ.PCD.CI.03]\n5.3.4\tКорректировка подготовленной КОД\t[EFS.REQ.PCD.CI.04]\n5.3.5\tНедоступна кнопка «Корректировка КОД»  \t[EFS.REQ.PCD.CI.05]\n5.3.6\tДобавление в запрос на подготовку КОД решения КО\t[EFS.REQ.PCD.CI.06]\n5.3.7\tРабота с задачей «Устранение замечаний ПКД»\t[EFS.REQ.PCD.CI.07]\n5.3.8\tРабота с задачей «Согласование КОД КП»\t[EFS.REQ.PCD.CI.08]\n5.4\tРабота сотрудника ПКД с запросом\t[EFS.REQ.PCD.WOR.00]\n5.4.1\tДоступные сотруднику ПКД вкладки в ЕФС\t[EFS.REQ.PCD.WOR.01]\n5.4.2\tДействия сотрудника ПКД в АС ЕФС при выполнении задачи\t[EFS.REQ.PCD.WOR.02]\n5.4.3\tРазмещение подготовленной КОД в ЭКД\t[EFS.REQ.PCD.WOR.03]\n5.4.4\tОтклонение задачи сотрудником ПКД\t[EFS.REQ.PCD.WOR.04]\n5.4.5\tДоработка или корректировка КОД в соответствии с решением КО\t[EFS.REQ.PCD.WOR.05]\n5.4.6\tРабота с задачей «Подписать КОД»\t[EFS.REQ.PCD.WOR.06]\n5.4.7\tРабота с задачей «Поставить КОД на учет»\t[EFS.REQ.PCD.WOR.07]\n5.4.8\tРабота с задачей «Передать КОД в архив»\t[EFS.REQ.PCD.WOR.08]\n5.4.9\tРабота клиентского менеджера с запросом\t[EFS.REQ.PCD..02]\n6\tЗапросы к службам ПБ\t[EFS.REQ.SEC..00]\n6.1\tКритерии и ограничения сервиса\t[EFS.REQ.SEC.CRIT.00]\n6.1.1\tНа какие сделки распространяется сервис\t[EFS.REQ.SEC.CRIT.01]\n6.1.2\tНаправление запроса через Сбердокс (вне ЕФС.НБ). Технические ограничения\t[EFS.REQ.SEC.CRIT.02]\n6.1.3\tНаправление запроса через Сбердокс (вне ЕФС.НБ). Процессные ограничения\t[EFS.REQ.SEC.CRIT.03]\n6.2\tФормирование запроса КМ\t[EFS.REQ.SEC.CM.00]\n6.2.1\tФормирование запроса КМ на детальном анализе\t[EFS.REQ.SEC.CM.01]\n6.2.2\tСоздание повторного запроса\t[EFS.REQ.SEC.CM.02]\n6.2.3\tВ запросе неактивна кнопка «Создать»\t[EFS.REQ.SEC.CM.03]\n6.2.4\tПричина отклонения запроса\t[EFS.REQ.SEC.CM.04]\n6.3\tФормирование запроса КИ\t[EFS.REQ.SEC.KI.00]\n6.3.1\tФормирование запроса КИ\t[EFS.REQ.SEC.KI.01]\n6.4\tОбъекты проверки\t[EFS.REQ.SEC.OBJ.00]\n6.4.1\tНе отображаются участники сделки\t[EFS.REQ.SEC.OBJ.01]\n6.4.2\tКакие участники и связанные лица направляются на проверку\t[EFS.REQ.SEC.OBJ.02]\n6.4.3\tПроверка акционеров и/или учредителей компании\t[EFS.REQ.SEC.OBJ.03]\n6.4.4\tУ участника сделки отсутствует связанное лицо\t[EFS.REQ.SEC.OBJ.04]\n6.5\tОбъекты проверки (Бенефициар)\t[EFS.REQ.SEC.BEN.00]\n6.6\tОбъекты проверки (ЕИО)\t[EFS.REQ.SEC.EIO.00]\n6.6.1\tЗаполнение сведений о единоличном исполнительном органе (ЕИО)\t[EFS.REQ.SEC.EIO.01]\n7\tПроект решения по овердрафту\t[EFS.OVER.00]\n7.1\tАвтоматизированное формирование ПР по овердрафту в ЕФС. Наш бизнес является обязательным?\t[EFS.OVER.01]\n7.2\tКакие особенности заполнения п.3   «Сумма финансирования»?\t[EFS.OVER.02]\n7.3\tКакие особенности заполнения п.6   «Срок финансирования»?\t[EFS.OVER.03]\n7.4\tКакие особенности заполнения п.9   «Общие параметры процентной ставки» и «Процентная ставка»?\t[EFS.OVER.04]\n8\tКредитно-обеспечительная документация (КОД )\t[EFS.COD..00]\n8.1\tОграничения по формированию договора поручительства вне основного договора\t[EFS.COD..01]\n8.2\tОвердрафт\t[EFS.COD.OVER.00]\n8.2.1\tАвтоматизированное формирование КОД по овердрафту в ЕФС. Наш бизнес является обязательным?\t[EFS.COD.OVER.01]\n8.2.2\tКакие основные ограничения по формированию КОД по овердрафту?\t[EFS.COD.OVER.02]\n8.2.3\tКакие ручные корректировки нужно внести в договор по овердрафту?\t[EFS.COD.OVER.03]\n8.2.4\tМожно подписать договор овердрафта в Сбербизнесе?  \t[EFS.COD.OVER.04]\n8.2.5\tГде получить информацию о рейтинге контрагента?\t[EFS.COD.OVER.05]\n######\n\nСтруктура сокращена для удобства, например:\n\n\&quot;2.3.2.3\tКлиент имеет действующий кредитный продукт\tEFS.CARD.DET.BRAN.03\&quot; равно \&quot;Карточка организации.Детали клиента.Отрасль.Клиент имеет действующий кредитный продукт\&quot;\n\nРодительская категория отличается от вопроса наличием 00 на конце кода, например:\n\n\&quot;   Не отображается карточка организации\tEFS.CARD...01\&quot; - родительская категория EFS.CARD...00\n\nОпредели, к какому коду относится следующий вопрос пользователя.\n\nПри определении кода ответа будь внимателен, если нет конкретного решения, то выводи код родительской категории, например: \n\nВопрос: \&quot;как в ЕФС скорректировать отрасль и макротрасль по клиенту\&quot;\n\nОтвет: \&quot;EFS.CARD.DET.BRAN.00\&quot;\n\nОтвет верни в виде кода решения\n\nна вопросы не относящиеся к АС ЕФС, верни только строку \&quot;error\&quot; \nЗАПРЕЩАЮ ВЫДУМЫВАТЬ ПРИСВОЕННЫЙ КОД, верни только тот который есть в списке выше!\n\n\nиспользуй историю диалога:\n{context}\nответь на вопрос&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;context&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;context&quot;,&#xa;                &quot;display_name&quot;: &quot;context&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;context&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-SnuWV&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 342.19030132206046,&#xa;          &quot;y&quot;: 2545.9611206278796&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-WwHbP&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 1251.98060770421,&#xa;          &quot;y&quot;: 2586.763905366086&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Ответ АС ЕФС.НБ - {answer}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer&quot;,&#xa;                &quot;display_name&quot;: &quot;answer&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-WwHbP&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 345,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 1251.98060770421,&#xa;          &quot;y&quot;: 2586.763905366086&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-MNolv&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -129.26176185211472,&#xa;          &quot;y&quot;: 2531.670021495305&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;chat_history_str&quot;: {&#xa;                &quot;type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;chat_history_str&quot;,&#xa;                &quot;display_name&quot;: &quot;Chat History String&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;История чата в виде строки JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;value&quot;: &quot;[\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ОКК как поменять\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.DET.BRAN.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;продукт закрыт, лимит нет\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;необходимо добавить роль куратор ир\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;требуется доступ с ролью - куратор индивидуальных решений\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как добавить новое юр лицо в лимит мо\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.07\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;архивировать лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;перевести рейтинг в статус «ожидание сигнала для утверждения»\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RAT..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;реклассификация зоны проблемности\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.PA..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;при расчете рейтинга возникает ошибка\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RSV..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;по заемщику отправили на утверждение рейтинг, до сих пор данная задача не распределена\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RSV..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;проблема с автоутверждением рейтинга в сделке с категорией «вторая линия защиты»\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RAT..05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;вопрос по ошибке рейтинга в аргусе\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.RAT..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Сотрудник с Руководитель главного кредитного специалиста» (РГКС) может передать клиента новому РГКС\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как попасть в команду организации\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;добавить меня в команду организации\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Программа не дает перевести продукты в статус Закрыт\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.PROD..04\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Статус продукта в ЕФС Действующий, хотя продукт в КЮЛ закрыт, срок его вышел, все сделки в Пегас по нему закрыты\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.PROD..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;ЭКД не соответствует клиенту среднего бизнеса\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TRANS.DEAL.ESM.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;АС ЕФС в модуле Счета и картотека при загрузке выходит сообщение\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.FILE..00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;необходимо переназначить ВКО сделки на\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.TEAM.ORG.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;не могу ввести на нижнем уровне МО лимит\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.LIM.CONS.00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Классификация клиента\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD.DET..01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;асргус\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;При генерации номере кредитного договора не ищет клиента из санкционных списков\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.CARD...00\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как выставить запрос в ПКД повторно\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CRE.01\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;Задание на подготовку КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CRE.03\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как изменить текст договора, если задание на подготовку КОД выставлено/направлено в ПКД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CI.05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как скорректировать КОД в выставленном/сформированном/направленном запросе на подготовку КОД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CI.05\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;user\&quot;,\n        \&quot;content\&quot;: \&quot;как изменить отправленный/созданный запрос в ПКД\&quot;\n    },\n    {\n        \&quot;role\&quot;: \&quot;assistant\&quot;,\n        \&quot;content\&quot;: \&quot;EFS.REQ.PCD.CI.02\&quot;\n    }\n]&quot;&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom typing import Optional, Dict, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass StringChatHistoryToMessages(CustomComponent):\n    display_name = \&quot;String Chat History to Messages\&quot;\n    description = \&quot;Преобразует строку с историей чата в форматированные сообщения\&quot;\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \&quot;chat_history_str\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Chat History String\&quot;,\n                \&quot;info\&quot;: \&quot;История чата в виде строки JSON\&quot;,\n                \&quot;multiline\&quot;: True,\n                \&quot;field_type\&quot;: \&quot;code\&quot;,  # Указываем, что это поле для кода\n                \&quot;advanced\&quot;: False,\n            }\n        }\n\n    def build(\n        self,\n        chat_history_str: str,\n        **kwargs: Any  # Добавляем **kwargs для обработки дополнительных параметров\n    ) -&gt; Message:\n        # Удаляем возможные лишние пробелы и переносы строк\n        chat_history_str = chat_history_str.strip()\n        \n        # Пытаемся преобразовать строку в JSON\n        try:\n            chat_history = json.loads(chat_history_str)\n        except json.JSONDecodeError as e:\n            raise ValueError(f\&quot;Неверный формат JSON: {e}\&quot;)\n        \n        if not isinstance(chat_history, list):\n            raise ValueError(\&quot;Chat history должен быть списком словарей\&quot;)\n        \n        messages = []\n        for i in range(0, len(chat_history), 2):\n            if i+1 &gt;= len(chat_history):\n                break\n                \n            user_msg = chat_history[i]\n            assistant_msg = chat_history[i+1]\n            \n            if user_msg.get(\&quot;role\&quot;) != \&quot;user\&quot; or assistant_msg.get(\&quot;role\&quot;) != \&quot;assistant\&quot;:\n                continue\n                \n            message_text = f\&quot;question: {user_msg.get(&#39;content&#39;, &#39;&#39;)}\\nanswer: {assistant_msg.get(&#39;content&#39;, &#39;&#39;)}\&quot;\n            messages.append(message_text)\n        \n        result = \&quot;\\n\\n\&quot;.join(messages)\n        message = Message(text=result)\n        \n        self.status = message.text\n        return message&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Преобразует строку с историей чата в форматированные сообщения&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;String Chat History to Messages&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;chat_history_str&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;message&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Message&quot;,&#xa;                &quot;method&quot;: null,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: true,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-MNolv&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 253,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -129.26176185211472,&#xa;          &quot;y&quot;: 2531.670021495305&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: 2104.2236088191135,&#xa;          &quot;y&quot;: 1886.2371948013094&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;Component&quot;,&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;from langflow.base.prompts.api_utils import process_prompt_template\nfrom langflow.custom import Component\nfrom langflow.inputs.inputs import DefaultPromptField\nfrom langflow.io import Output, PromptInput\nfrom langflow.schema.message import Message\nfrom langflow.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \&quot;Prompt\&quot;\n    description: str = \&quot;Create a prompt template with dynamic variables.\&quot;\n    icon = \&quot;prompts\&quot;\n    trace_type = \&quot;prompt\&quot;\n    name = \&quot;Prompt\&quot;\n\n    inputs = [\n        PromptInput(name=\&quot;template\&quot;, display_name=\&quot;Template\&quot;),\n    ]\n\n    outputs = [\n        Output(display_name=\&quot;Prompt Message\&quot;, name=\&quot;prompt\&quot;, method=\&quot;build_prompt\&quot;),\n    ]\n\n    async def build_prompt(self) -&gt; Message:\n        prompt = Message.from_template(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        custom_fields = frontend_node[\&quot;custom_fields\&quot;]\n        frontend_node_template = frontend_node[\&quot;template\&quot;]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\&quot;template\&quot;,\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \&quot;\&quot;\&quot;This function is called after the code validation is done.\&quot;\&quot;\&quot;\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\&quot;template\&quot;][\&quot;template\&quot;][\&quot;value\&quot;]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\&quot;template\&quot;,\n            custom_fields=frontend_node[\&quot;custom_fields\&quot;],\n            frontend_node_template=frontend_node[\&quot;template\&quot;],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\&quot;template\&quot;])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;template&quot;: {&#xa;                &quot;tool_mode&quot;: false,&#xa;                &quot;trace_as_input&quot;: true,&#xa;                &quot;list&quot;: false,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;show&quot;: true,&#xa;                &quot;name&quot;: &quot;template&quot;,&#xa;                &quot;value&quot;: &quot;Получены ответы:\n\n{answer1}\n{answer2}\n{answer3}\n{answer4}&quot;,&#xa;                &quot;display_name&quot;: &quot;Template&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;prompt&quot;,&#xa;                &quot;_input_type&quot;: &quot;PromptInput&quot;&#xa;              },&#xa;              &quot;answer1&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer1&quot;,&#xa;                &quot;display_name&quot;: &quot;answer1&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;answer2&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer2&quot;,&#xa;                &quot;display_name&quot;: &quot;answer2&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;answer3&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer3&quot;,&#xa;                &quot;display_name&quot;: &quot;answer3&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              },&#xa;              &quot;answer4&quot;: {&#xa;                &quot;field_type&quot;: &quot;str&quot;,&#xa;                &quot;required&quot;: false,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;answer4&quot;,&#xa;                &quot;display_name&quot;: &quot;answer4&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;input_types&quot;: [&#xa;                  &quot;Message&quot;,&#xa;                  &quot;Text&quot;&#xa;                ],&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false,&#xa;                &quot;type&quot;: &quot;str&quot;&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Create a prompt template with dynamic variables.&quot;,&#xa;            &quot;icon&quot;: &quot;prompts&quot;,&#xa;            &quot;is_input&quot;: null,&#xa;            &quot;is_output&quot;: null,&#xa;            &quot;is_composition&quot;: null,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;name&quot;: &quot;&quot;,&#xa;            &quot;display_name&quot;: &quot;Prompt&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;template&quot;: [&#xa;                &quot;answer1&quot;,&#xa;                &quot;answer2&quot;,&#xa;                &quot;answer3&quot;,&#xa;                &quot;answer4&quot;&#xa;              ]&#xa;            },&#xa;            &quot;output_types&quot;: [],&#xa;            &quot;full_path&quot;: null,&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [&#xa;                  &quot;Message&quot;&#xa;                ],&#xa;                &quot;selected&quot;: &quot;Message&quot;,&#xa;                &quot;name&quot;: &quot;prompt&quot;,&#xa;                &quot;hidden&quot;: null,&#xa;                &quot;display_name&quot;: &quot;Prompt Message&quot;,&#xa;                &quot;method&quot;: &quot;build_prompt&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true,&#xa;                &quot;required_inputs&quot;: null&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [&#xa;              &quot;template&quot;&#xa;            ],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;error&quot;: null,&#xa;            &quot;edited&quot;: false,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false,&#xa;            &quot;lf_version&quot;: &quot;0.1.1&quot;&#xa;          },&#xa;          &quot;type&quot;: &quot;Prompt&quot;,&#xa;          &quot;id&quot;: &quot;Prompt-9iFTC&quot;&#xa;        },&#xa;        &quot;selected&quot;: false,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 603,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: 2104.2236088191135,&#xa;          &quot;y&quot;: 1886.2371948013094&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;id&quot;: &quot;CustomComponent-nAWvv&quot;,&#xa;        &quot;type&quot;: &quot;genericNode&quot;,&#xa;        &quot;position&quot;: {&#xa;          &quot;x&quot;: -2050.3428494384284,&#xa;          &quot;y&quot;: 903.5963417720715&#xa;        },&#xa;        &quot;data&quot;: {&#xa;          &quot;node&quot;: {&#xa;            &quot;template&quot;: {&#xa;              &quot;_type&quot;: &quot;CustomComponent&quot;,&#xa;              &quot;input_message&quot;: {&#xa;                &quot;type&quot;: &quot;Message&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: false,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;name&quot;: &quot;input_message&quot;,&#xa;                &quot;display_name&quot;: &quot;Input Message&quot;,&#xa;                &quot;advanced&quot;: false,&#xa;                &quot;dynamic&quot;: false,&#xa;                &quot;info&quot;: &quot;Входное сообщение с JSON&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              },&#xa;              &quot;code&quot;: {&#xa;                &quot;type&quot;: &quot;code&quot;,&#xa;                &quot;required&quot;: true,&#xa;                &quot;placeholder&quot;: &quot;&quot;,&#xa;                &quot;list&quot;: false,&#xa;                &quot;show&quot;: true,&#xa;                &quot;multiline&quot;: true,&#xa;                &quot;value&quot;: &quot;import json\nfrom langflow import CustomComponent\nfrom langflow.schema import Message\n\nclass SystemRouter(CustomComponent):\n    display_name = \&quot;System Router\&quot;\n    description = \&quot;Направляет запрос в соответствующую систему на основе JSON\&quot;\n    \n    # Явно определяем выходы\n    outputs = [\n        {\&quot;name\&quot;: \&quot;pegas\&quot;, \&quot;method\&quot;: \&quot;pegas_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system2\&quot;, \&quot;method\&quot;: \&quot;system2_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system3\&quot;, \&quot;method\&quot;: \&quot;system3_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system4\&quot;, \&quot;method\&quot;: \&quot;system4_output\&quot;},\n        {\&quot;name\&quot;: \&quot;system5\&quot;, \&quot;method\&quot;: \&quot;system5_output\&quot;},\n        {\&quot;name\&quot;: \&quot;unknown\&quot;, \&quot;method\&quot;: \&quot;unknown_output\&quot;}\n    ]\n\n    def build_config(self):\n        return {\n            \&quot;input_message\&quot;: {\n                \&quot;display_name\&quot;: \&quot;Input Message\&quot;,\n                \&quot;info\&quot;: \&quot;Входное сообщение с JSON\&quot;,\n                \&quot;type\&quot;: \&quot;Message\&quot;,\n            }\n        }\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.question = None\n        self.system_name = None\n        self.error = None\n\n    def build(self, input_message: Message) -&gt; Message:\n        try:\n            # Парсим JSON из текста сообщения\n            input_json = input_message.text\n            data = json.loads(input_json)\n            self.system_name = data.get(\&quot;system_name\&quot;, \&quot;\&quot;).lower()\n            self.question = data.get(\&quot;question\&quot;, \&quot;\&quot;)\n            self.error = None\n            \n            # Возвращаем основное сообщение с вопросом\n            return Message(text=self.question, data=data)\n                \n        except json.JSONDecodeError as e:\n            self.error = f\&quot;Ошибка формата JSON: {str(e)}\&quot;\n            return Message(text=self.error)\n        except Exception as e:\n            self.error = f\&quot;Ошибка обработки: {str(e)}\&quot;\n            return Message(text=self.error)\n\n    # Методы для каждого выхода\n    def pegas_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;pegas\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system2_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system2\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system3_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system3\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system4_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system4\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def system5_output(self) -&gt; Message:\n        if self.error:\n            return None\n        if self.system_name == \&quot;system5\&quot;:\n            return Message(text=self.question)\n        return None\n\n    def unknown_output(self) -&gt; Message:\n        if self.error:\n            return Message(text=self.error)\n        if self.system_name not in [\&quot;pegas\&quot;, \&quot;system2\&quot;, \&quot;system3\&quot;, \&quot;system4\&quot;, \&quot;system5\&quot;]:\n            return Message(text=f\&quot;Неизвестная система: {self.system_name}\&quot;)\n        return None&quot;,&#xa;                &quot;fileTypes&quot;: [],&#xa;                &quot;file_path&quot;: &quot;&quot;,&#xa;                &quot;password&quot;: false,&#xa;                &quot;name&quot;: &quot;code&quot;,&#xa;                &quot;advanced&quot;: true,&#xa;                &quot;dynamic&quot;: true,&#xa;                &quot;info&quot;: &quot;&quot;,&#xa;                &quot;load_from_db&quot;: false,&#xa;                &quot;title_case&quot;: false&#xa;              }&#xa;            },&#xa;            &quot;description&quot;: &quot;Направляет запрос в соответствующую систему на основе JSON&quot;,&#xa;            &quot;base_classes&quot;: [&#xa;              &quot;Data&quot;,&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;display_name&quot;: &quot;System Router&quot;,&#xa;            &quot;documentation&quot;: &quot;&quot;,&#xa;            &quot;custom_fields&quot;: {&#xa;              &quot;input_message&quot;: null&#xa;            },&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;pinned&quot;: false,&#xa;            &quot;conditional_paths&quot;: [],&#xa;            &quot;frozen&quot;: false,&#xa;            &quot;outputs&quot;: [&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;pegas&quot;,&#xa;                &quot;display_name&quot;: &quot;pegas&quot;,&#xa;                &quot;method&quot;: &quot;pegas_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system2&quot;,&#xa;                &quot;display_name&quot;: &quot;system2&quot;,&#xa;                &quot;method&quot;: &quot;system2_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system3&quot;,&#xa;                &quot;display_name&quot;: &quot;system3&quot;,&#xa;                &quot;method&quot;: &quot;system3_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system4&quot;,&#xa;                &quot;display_name&quot;: &quot;system4&quot;,&#xa;                &quot;method&quot;: &quot;system4_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;system5&quot;,&#xa;                &quot;display_name&quot;: &quot;system5&quot;,&#xa;                &quot;method&quot;: &quot;system5_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              },&#xa;              {&#xa;                &quot;types&quot;: [],&#xa;                &quot;name&quot;: &quot;unknown&quot;,&#xa;                &quot;display_name&quot;: &quot;unknown&quot;,&#xa;                &quot;method&quot;: &quot;unknown_output&quot;,&#xa;                &quot;value&quot;: &quot;__UNDEFINED__&quot;,&#xa;                &quot;cache&quot;: true&#xa;              }&#xa;            ],&#xa;            &quot;field_order&quot;: [],&#xa;            &quot;beta&quot;: false,&#xa;            &quot;legacy&quot;: false,&#xa;            &quot;edited&quot;: true,&#xa;            &quot;metadata&quot;: {},&#xa;            &quot;tool_mode&quot;: false&#xa;          },&#xa;          &quot;type&quot;: &quot;CustomComponent&quot;,&#xa;          &quot;id&quot;: &quot;CustomComponent-nAWvv&quot;&#xa;        },&#xa;        &quot;selected&quot;: true,&#xa;        &quot;width&quot;: 320,&#xa;        &quot;height&quot;: 455,&#xa;        &quot;positionAbsolute&quot;: {&#xa;          &quot;x&quot;: -2050.3428494384284,&#xa;          &quot;y&quot;: 903.5963417720715&#xa;        },&#xa;        &quot;dragging&quot;: false&#xa;      }&#xa;    ],&#xa;    &quot;edges&quot;: [&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-CRUzXœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-h4rNUœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-CRUzX{œdataTypeœ:œPromptœ,œidœ:œPrompt-CRUzXœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-h4rNU{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-h4rNUœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-u0GwFœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-3wLFFœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-u0GwF{œdataTypeœ:œPromptœ,œidœ:œPrompt-u0GwFœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-3wLFF{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-3wLFFœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-23NdU&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-23NdUœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-23NdU&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-23NdU{œdataTypeœ:œPromptœ,œidœ:œPrompt-23NdUœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-nSWcd{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;input_value&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-nSWcd{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-nSWcdœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-h4rNUœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-zQnaG&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-zQnaGœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-zQnaG&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-h4rNU&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-h4rNU{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-h4rNUœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-zQnaG{œfieldNameœ:œanswerœ,œidœ:œPrompt-zQnaGœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-3wLFFœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-ppA6M&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-ppA6Mœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-ppA6M&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-3wLFF&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-3wLFF{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-3wLFFœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-ppA6M{œfieldNameœ:œanswerœ,œidœ:œPrompt-ppA6Mœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-nSWcdœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-fyYo5&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-fyYo5œ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-fyYo5&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-nSWcd&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-nSWcd{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-nSWcdœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-fyYo5{œfieldNameœ:œanswerœ,œidœ:œPrompt-fyYo5œ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-oy48r&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-oy48rœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-oy48r&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-oy48r{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-oy48rœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-u0GwF{œfieldNameœ:œcontextœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-TWL8d&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-TWL8dœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-TWL8d&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-TWL8d{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-TWL8dœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-CRUzX{œfieldNameœ:œcontextœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-lW46J&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-lW46Jœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-23NdU&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-23NdUœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-23NdU&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-lW46J&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-lW46J{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-lW46Jœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-23NdU{œfieldNameœ:œcontextœ,œidœ:œPrompt-23NdUœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-SnuWV&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-SnuWVœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;system_message&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-SnuWV&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-SnuWV{œdataTypeœ:œPromptœ,œidœ:œPrompt-SnuWVœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-HryYo{œfieldNameœ:œsystem_messageœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-HryYoœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-WwHbP&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswerœ,œidœ:œPrompt-WwHbPœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-WwHbP&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;GigaChatModel&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;            &quot;name&quot;: &quot;text_output&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-GigaChatModel-HryYo{œdataTypeœ:œGigaChatModelœ,œidœ:œGigaChatModel-HryYoœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-WwHbP{œfieldNameœ:œanswerœ,œidœ:œPrompt-WwHbPœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;CustomComponent-MNolv&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MNolvœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-SnuWV&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œcontextœ,œidœ:œPrompt-SnuWVœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;context&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-SnuWV&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;CustomComponent&quot;,&#xa;            &quot;id&quot;: &quot;CustomComponent-MNolv&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-CustomComponent-MNolv{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MNolvœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-SnuWV{œfieldNameœ:œcontextœ,œidœ:œPrompt-SnuWVœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;input_value&quot;,&#xa;            &quot;id&quot;: &quot;GigaChatModel-HryYo&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-GigaChatModel-HryYo{œfieldNameœ:œinput_valueœ,œidœ:œGigaChatModel-HryYoœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-ppA6M&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-ppA6Mœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer2œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer2&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-ppA6M&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-ppA6M{œdataTypeœ:œPromptœ,œidœ:œPrompt-ppA6Mœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer2œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-zQnaG&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-zQnaGœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer1œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer1&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-zQnaG&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-zQnaG{œdataTypeœ:œPromptœ,œidœ:œPrompt-zQnaGœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer1œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-fyYo5&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-fyYo5œ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer3œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer3&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-fyYo5&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-fyYo5{œdataTypeœ:œPromptœ,œidœ:œPrompt-fyYo5œ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer3œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-WwHbP&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-WwHbPœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œanswer4œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;answer4&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-WwHbP&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-WwHbP{œdataTypeœ:œPromptœ,œidœ:œPrompt-WwHbPœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-Prompt-9iFTC{œfieldNameœ:œanswer4œ,œidœ:œPrompt-9iFTCœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;Prompt-9iFTC&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œPromptœ,œidœ:œPrompt-9iFTCœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;ChatOutput-6cYM7&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-6cYM7œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;input_value&quot;,&#xa;            &quot;id&quot;: &quot;ChatOutput-6cYM7&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;Prompt&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-9iFTC&quot;,&#xa;            &quot;name&quot;: &quot;prompt&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-Prompt-9iFTC{œdataTypeœ:œPromptœ,œidœ:œPrompt-9iFTCœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-ChatOutput-6cYM7{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-6cYM7œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;className&quot;: &quot;&quot;,&#xa;        &quot;animated&quot;: false&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-CRUzX&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œquestionœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;question&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-CRUzX&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-CRUzX{œfieldNameœ:œquestionœ,œidœ:œPrompt-CRUzXœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      },&#xa;      {&#xa;        &quot;source&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;        &quot;sourceHandle&quot;: &quot;{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}&quot;,&#xa;        &quot;target&quot;: &quot;Prompt-u0GwF&quot;,&#xa;        &quot;targetHandle&quot;: &quot;{œfieldNameœ:œquestionœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;data&quot;: {&#xa;          &quot;targetHandle&quot;: {&#xa;            &quot;fieldName&quot;: &quot;question&quot;,&#xa;            &quot;id&quot;: &quot;Prompt-u0GwF&quot;,&#xa;            &quot;inputTypes&quot;: [&#xa;              &quot;Message&quot;,&#xa;              &quot;Text&quot;&#xa;            ],&#xa;            &quot;type&quot;: &quot;str&quot;&#xa;          },&#xa;          &quot;sourceHandle&quot;: {&#xa;            &quot;dataType&quot;: &quot;ChatInput&quot;,&#xa;            &quot;id&quot;: &quot;ChatInput-sPJDh&quot;,&#xa;            &quot;name&quot;: &quot;message&quot;,&#xa;            &quot;output_types&quot;: [&#xa;              &quot;Message&quot;&#xa;            ]&#xa;          }&#xa;        },&#xa;        &quot;id&quot;: &quot;reactflow__edge-ChatInput-sPJDh{œdataTypeœ:œChatInputœ,œidœ:œChatInput-sPJDhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-u0GwF{œfieldNameœ:œquestionœ,œidœ:œPrompt-u0GwFœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}&quot;,&#xa;        &quot;animated&quot;: false,&#xa;        &quot;className&quot;: &quot;&quot;&#xa;      }&#xa;    ],&#xa;    &quot;viewport&quot;: {&#xa;      &quot;x&quot;: 264.75037531349915,&#xa;      &quot;y&quot;: -20.04231939840753,&#xa;      &quot;zoom&quot;: 0.26094438861826746&#xa;    }&#xa;  },&#xa;  &quot;is_component&quot;: false&#xa;}" id="OsHM_t2jz-nTbViin2Zr-1">
          <mxCell style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
            <mxGeometry x="170" y="120" width="560" height="97920" as="geometry" />
          </mxCell>
        </UserObject>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
